{"version":3,"file":"static/js/7052.7a438311.chunk.js","mappings":"6KAKe,SAASA,EAAUC,GAA2D,IAA1D,YAAEC,EAAW,SAAEC,EAAQ,cAACC,EAAa,MAAEC,EAAK,UAACC,GAAUL,EACxF,MAAOM,EAAaC,IAAkBC,EAAAA,EAAAA,YAQtC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAE7BC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,GAAGH,UAAU,UAASC,SAAEP,KACvCQ,EAAAA,EAAAA,KAACE,EAAAA,gBAAe,CAChBT,UAAWA,EACTU,MAAOT,EACPU,SAdoBC,IAEpB,GADJV,EAAeU,GACF,MAANA,EAAW,CACd,MAAMC,EAAM,CAACC,KAAKF,EAAKG,GAAG,GAAGC,MAAMJ,EAAKG,GAAG,GAAG,EAAEE,IAAIL,EAAKG,GAAG,IAC9DnB,EAAYiB,EACV,GAUAK,iBAAuC,YAArBrB,EAAS,GAAGe,KAAqB,qBAAuB,iBAC1EO,OAA6B,YAArBtB,EAAS,GAAGe,KAAqB,KAAO,KAChDQ,aAAa,UACbC,YAAa,CAAEP,KAAM,KAAME,MAAO,GAAIC,IAAK,IAC3CK,YAAa,CAAER,KAAM,EAAGE,MAAO,EAAGC,IAAK,OAI/C,C,0FC1BA,MAuGA,EAvGuBtB,IAQhB,IARiB,WACtB4B,GAAa,EAAK,QAClBC,EAAO,SACPC,EAAQ,eACRC,EAAc,kBACdC,EAAiB,YACjBC,EAAW,kBACXC,GACDlC,EACC,MAKM,cAAEmC,IAAkBC,EAAAA,EAAAA,KAElBC,EAAe,CACnBC,WAAaC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEE,OAAQ,MAAY,CACpD,IA2DN,OACE7B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,UACpBC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACLC,gBAAgB,gBAChBC,WAAYX,EACZlB,MAAOgB,EACPf,SA1EgBe,IACpBC,EAAkBD,GAClBD,EAASC,IAyELF,QAASA,EACTgB,cAAeX,EACfY,eAAiBC,IACfnC,EAAAA,EAAAA,KAAA,OAAKoC,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAAYxC,UAAU,UAASC,UACxEC,EAAAA,EAAAA,KAAA,QAAAD,SAAA,GAAAwC,OAAUJ,EAAOK,aAAY,KAAAD,OAAIJ,EAAOM,eAG5CC,eAAiBP,GAAM,GAAAI,OAAQJ,EAAOK,aAAY,KAAAD,OAAIJ,EAAOM,WAC7DE,YAAapB,EAAc,CAAEqB,GAAI,cACjCC,aAAW,EACXC,cAAY,EACZC,WAAY/B,EACZgC,OAAQvB,EACRwB,iBAAkBC,SAASC,S,ggKChG5B,MAAMC,GAAaC,EAAAA,EAAAA,IAAiB,qBAAsBC,gBACxCC,EAAAA,EAAMC,IAAIC,EAAAA,EAAOC,aAAe,eAAgB,CACrEC,QAAS,CACP,cAAgB,UAADpB,OAAYqB,aAAaC,QAAQ,YAElDC,OAAQ,CAAEC,MAAO,aAEHC,MAIZC,GAAcC,EAAAA,EAAAA,IAAY,CAC9BC,KAAM,UACNC,aAAc,CACZC,QAAS,GACTC,SAAS,EACTC,MAAO,KACPC,QAAQ,MAEVC,SAAU,CACRC,iBAAkBA,CAACC,EAAOC,KAExBD,EAAMN,QAAQQ,KAAKD,EAAOE,UAE5BC,oBAAqBA,CAACJ,EAAOC,KAE3B,MAAMI,EAAQL,EAAMN,QAAQY,UAAWC,GAAWA,EAAOtC,KAAOgC,EAAOE,QAAQlC,KAChE,IAAXoC,IACFL,EAAMN,QAAQW,GAASJ,EAAOE,UAGlCK,sBAAuBA,CAACR,EAAOC,KAE7BD,EAAMN,QAAUM,EAAMN,QAAQe,OAAQF,GAAWA,EAAOtC,KAAOgC,EAAOE,WAG1EO,cAAgBC,IACdA,EACGC,QAAQnC,EAAWoC,QAAUb,IAC5BA,EAAML,SAAU,EAChBK,EAAMJ,MAAQ,KACdI,EAAMH,QAAQ,YAEfe,QAAQnC,EAAWqC,UAAW,CAACd,EAAOC,KACrCD,EAAML,SAAU,EAChBK,EAAMN,QAAUO,EAAOE,QACvBH,EAAMH,QAAQ,cAEfe,QAAQnC,EAAWsC,SAAU,CAACf,EAAOC,KACpCD,EAAML,SAAU,EAChBK,EAAMJ,MAAQK,EAAOL,MAAMoB,QAC3BhB,EAAMH,QAAQ,iBAMT,iBAAEE,EAAgB,oBAAEK,EAAmB,sBAAEI,GAA0BlB,EAAY2B,QAG7E3B,EAAmB,O,iHC3DlC,MAAM4B,EAAUzG,IAMT,IANU,WACf2D,GAAa,EAAK,QAClB9B,EAAU,GAAE,eACZE,EAAc,kBACdC,EAAiB,MACjB0E,EAAQ,QACT1G,EACC,MAAM,cAAEmC,EAAa,OAAEX,IAAWY,EAAAA,EAAAA,KAC5BuE,EAAmB,OAAXnF,EAERoF,EAAiB,CACrB7B,MAAMnE,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,cAC3BA,GAAI,GAGAsD,EAAiB,CAACF,KAAmB/E,IAE3CkF,EAAAA,EAAAA,WAAU,KACHhF,GACHC,EAAkB4E,IAEnB,CAAC7E,EAAgBC,EAAmB4E,IAEvC,MAIMvE,EAAe,CACnB2E,QAASA,CAACzE,EAAMgD,KAAK/C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBD,GAAI,IACP0E,WAAiD,OAArCzC,aAAaC,QAAQ,aAAyB,4BAC1DyC,gBAAiB,OACjBzE,OAAQ,EACR0E,aAAc,MACdC,OAAQ7B,EAAM8B,UAAY,oBAAsB,oBAChDC,UAAW/B,EAAM8B,UAAY,iCAAmC,OAChE,UAAW,CACTD,OAAQ,qBAEVG,UAAW,OACXC,QAAS,UACTC,UAAWd,EAAQ,QAAU,OAC7Be,UAAWf,EAAQ,MAAQ,QAE7BgB,KAAOpF,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACND,GAAI,IACP0E,WAAiD,OAArCzC,aAAaC,QAAQ,aAAyB,4BAC1D0C,aAAc,MACdG,UAAW,kCACXM,SAAU,SACVH,UAAWd,EAAQ,QAAU,OAC7Be,UAAWf,EAAQ,MAAQ,QAE7B5D,OAAQA,CAACR,EAAIsF,KAAA,IAAE,UAAER,EAAS,WAAES,GAAYD,EAAA,OAAArF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnCD,GAAI,IACP0E,WAAiD,OAArCzC,aAAaC,QAAQ,aAAyB,4BAC1DyC,gBAAiBY,EAAa,UAAYT,EAAY,UAAY,OAClEU,MAAOD,EAAa,OAAS,UAC7BN,QAASb,EAAQ,qBAAuB,qBACxCqB,OAAQ,UACRC,SAAU,OACVR,UAAWd,EAAQ,QAAU,OAC7B,WAAY,CACVO,gBAAiB,cAGrBgB,YAAc3F,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbD,GAAI,IACP0E,WAAiD,OAArCzC,aAAaC,QAAQ,aAAyB,4BAC1D0D,WAAY,OACZJ,MAAO,UACPE,SAAU,OACVR,UAAWd,EAAQ,QAAU,OAC7Be,UAAWf,EAAQ,MAAQ,QAE7BpD,YAAchB,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbD,GAAI,IACP0E,WAAiD,OAArCzC,aAAaC,QAAQ,aAAyB,4BAC1DwD,SAAU,OACVF,MAAO,UACPN,UAAWd,EAAQ,QAAU,OAC7Be,UAAWf,EAAQ,MAAQ,QAE7ByB,kBAAoB7F,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBD,GAAI,IACP0E,WAAgD,OAArCzC,aAAaC,QAAQ,aAAyB,4BACzD+C,QAAS,QAEXlF,WAAaC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEE,OAAQ,MAC1C4F,MAAQ9F,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACPD,GAAI,IACP0E,WAAgD,OAArCzC,aAAaC,QAAQ,aAAwB,4BACxDgD,UAAWd,EAAQ,QAAU,UAIjC,OACE/F,EAAAA,EAAAA,KAAA,OACEF,UAAS,OACTsC,MAAO,CAAE0D,SACT4B,IAAK3B,EAAQ,MAAQ,MAAMhG,UAE3BC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACLC,gBAAgB,gBAChB5B,MAAOgB,EACPf,SAlFgBe,IACpBC,EAAkBD,IAkFdF,QAASiF,EACThE,eAAiBC,GAAWA,EAAOgC,KACnCzB,eAAiBP,GAAWA,EAAOS,GACnCD,YAAapB,EAAc,CAAEqB,GAAI,yBAA4BmD,EAAQ,iBAAmB,aACxFlD,aAAa,EACbC,cAAc,EACdC,WAAYA,EACZE,iBAAkBC,SAASC,KAC3BH,OAAQvB,EACRkG,WAAY,CACVC,kBAAmBC,IAAA,IAAC,WAAEC,GAAYD,EAAA,OAChC7H,EAAAA,EAAAA,KAAA,OAAA4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAASkG,GAAU,IAAEhI,UAAWiG,EAAQ,qBAAuB,qBAAqBhG,UAClFC,EAAAA,EAAAA,KAAC+H,EAAAA,EAAW,CAACC,KAAM,SAGvBC,eAAgB,WAoB1BpC,EAAQqC,aAAe,CACrBnF,YAAY,EACZ9B,QAAS,GACTE,eAAgB,KAChB2E,MAAO,QAGT,S,4LClJA,MA4FA,EA5FuB1G,IAShB,IATiB,WACtB4B,GAAa,EAAK,QAClBC,EAAO,SACPC,EAAQ,eACRC,EAAc,kBAEdC,EAAiB,YACjBC,EAAW,kBACXC,GACDlC,EACC,MA8CIqC,EAAe,CACnBC,WAAaC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAEE,OAAQ,SAGtC,cAAEN,IAAkBC,EAAAA,EAAAA,KAGxB,OACExB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACLC,gBAAgB,gCAChBC,WAAYX,EACZlB,MAAOgB,EACPiB,MAAO,CAACwE,QAAS,eACjBxG,SA5DgB+H,IACpB/G,EAAkB+G,GAEfA,GAED5E,EAAAA,EAAMC,IAAIC,EAAAA,EAAOC,aAAa,kBAC9B,CACEC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CAAEuE,MAAOF,EAAgBG,WAEnCC,KAAMC,IACJtH,EAAUuH,GAAOD,EAAIxE,KAAK,MAG3B0E,MAAOC,QA6CN1H,QAASA,EACTgB,cAAeX,EACfY,eAAiBC,IACbnC,EAAAA,EAAAA,KAAA,OAAS0H,IAA0C,OAArC9D,aAAaC,QAAQ,YAAuB,MAAQ,MAClEzB,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAAYvC,UAChDC,EAAAA,EAAAA,KAAA,QAAAD,SAAA,GAAAwC,OAAUJ,EAAOK,aAAY,KAAAD,OAAIJ,EAAOM,eAE9CC,eAAiBP,GAAM,GAAAI,OAAQJ,EAAOK,aAAY,KAAAD,OAAIJ,EAAOM,WAE7DE,YAAapB,EAAc,CAAEqB,GAAI,cACjCC,aAAW,EAEXC,cAAY,EACZC,WAAY/B,EACZiC,iBAAkBC,SAASC,KAC3BH,OAAQvB,O,4MCxEhB,MAAMmH,EAAgBC,GACbA,aAAM,EAANA,EAAQC,iBAEF,SAASC,EAAiB3J,GAOrC,IAPsC,uBACxC4J,EAAsB,YACtBC,EAAW,eACXC,EAAc,YACdC,EAAW,QACXC,EAAO,WACPC,GACDjK,EAEC,MAAMkK,GAAYC,EAAAA,EAAAA,KACZC,GAAWC,EAAAA,EAAAA,OACVC,EAAgBC,IAAqB/J,EAAAA,EAAAA,UAAS,OAC9CgK,EAAcC,IAAmBjK,EAAAA,EAAAA,UAAS,OAE1CkK,EAAUC,IAAenK,EAAAA,EAAAA,UAAS,CACvCoK,QAAQ,EACRC,eAAe,EACfC,cAAc,KAEV,SAAE5K,EAAQ,OAAE6K,EAAM,QAAEC,IAAYC,EAAAA,EAAAA,IAAa1F,GAAUA,EAAMrF,WAC5DgL,EAAUC,IAAe3K,EAAAA,EAAAA,UAAS,KAEzCuG,EAAAA,EAAAA,WAAU,KACQ,cAAZiE,GAA2B9K,EAASkL,OAAS,GAC/ChB,GAASiB,EAAAA,EAAAA,QAEV,KAEHtE,EAAAA,EAAAA,WAAU,KACJ7G,EAASkL,OAAS,GACpBD,EAAYjL,IAEb,CAACA,IAEJ,MAAMoL,EAAcC,IAClBC,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjB,CAACF,EAAEG,OAAO3G,MAAOwG,EAAEG,OAAO3K,SAExB2J,EAASG,eAAiBH,EAASI,aACf,qBAAlBS,EAAEG,OAAO3G,MACXyG,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBE,eAAgBJ,EAAEG,OAAO3K,MACzB6K,gBAAiBL,EAAEG,OAAO3K,SAGrB2J,EAASG,cACI,qBAAlBU,EAAEG,OAAO3G,MACXyG,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBE,eAAgBJ,EAAEG,OAAO3K,SAGpB2J,EAASI,cACI,qBAAlBS,EAAEG,OAAO3G,MACXyG,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBG,gBAAiBL,EAAEG,OAAO3K,UAK5B8K,EAAgBN,IAEpB,MAAMO,EAAiBP,EAAEG,OAAO3K,MAE1BgL,EAAmBD,EAAeE,QAAQ,KAAM,IAAIA,QAAQ,IAAK,IAElEtB,EAASE,QAYZqB,GAAiBzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdsJ,GAAc,IACjB,CAACP,EAAEG,OAAOlI,IAAK+H,EAAEG,OAAO3K,SAE1ByK,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjB,CAACF,EAAEG,OAAOlI,IAAKuI,OAjBjBE,GAAiBzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdsJ,GAAc,IACjBI,UAAWX,EAAEG,OAAO3K,MACpB,CAACwK,EAAEG,OAAOlI,IAAK+H,EAAEG,OAAO3K,SAE1ByK,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBS,UAAWH,EACX,CAACR,EAAEG,OAAOlI,IAAKuI,QAadD,EAAgBG,IAAqBzL,EAAAA,EAAAA,UAAS,CACnD2L,YAAa,KACbC,aAAc,KACdF,UAAW,KACXG,WAAY,KACZC,WAAY,KACZC,YAAa,QAIRd,EAAgBD,IAAqBhL,EAAAA,EAAAA,UAAS,CACnDgM,QAAShI,aAAaC,QAAQ,eAC9BgI,gBAAiB,GACjBN,YAAa,EACbO,iBAAkB,GAClBC,cAAe,GACfT,UAAW,EACXP,eAAgB,GAChBiB,eAAgB,GAChBN,WAAY,EACZV,gBAAiB,GACjBiB,eAAe,IAAIC,MAAOC,iBAIrBC,EAAiBC,IAAsBzM,EAAAA,EAAAA,aACvC0M,EAAoBC,IAAyB3M,EAAAA,EAAAA,aAG7C4M,EAAeC,IAAmB7M,EAAAA,EAAAA,WAAS,IAC3CF,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS8M,QACxCC,EAASC,IAAchN,EAAAA,EAAAA,UAAS8M,QAsFhCG,GAAeC,KAAoBlN,EAAAA,EAAAA,aACnCmN,GAAkBC,KAAuBpN,EAAAA,EAAAA,aACzCqN,GAAWC,KAAgBtN,EAAAA,EAAAA,aAuD3ByB,GAAa8L,KAAkBvN,EAAAA,EAAAA,aAE/BuB,GAAgBC,KAAqBxB,EAAAA,EAAAA,aACrCqB,GAASmM,KAAcxN,EAAAA,EAAAA,YAsDxByN,GAAiBpG,IAAoC,IAAnC,YAAEqG,EAAc,GAAE,QAAE3H,GAASsB,EACnD,MAAMsG,EAAmBC,mBAAmB7H,GACtC8H,EAAe,yBAAAlL,OAA4B+K,EAAW,UAAA/K,OAASgL,GAMrEG,OAAOC,SAASC,KAAOH,GAOnBI,GAAkBC,IAEtB,GAA2B,IAAvBA,EAAWC,QAAe,CAC5B,IAAIC,EAAY,eAEdA,EADuC,OAArCpK,aAAaC,QAAQ,YACd,QAAAtB,OACPuL,EAAWtL,aAAY,sFAC6D,UAAS,OAAAD,OAC7F0L,SAASH,EAAWI,QAAU,EAC1B,cAAgBD,SAASH,EAAWI,QAAU,GAAK,KACnD,GAAE,cAAA3L,OAENqG,EAAakF,EAAWxC,WAAa,IAAMwC,EAAWrL,UAAW,MAAK,0BAAAF,OAEtEqG,EAAaqF,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,aAAe2C,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,YAAa,EAAI,KAAM,MAAK,sBAAA/I,OAC3IiK,EAAiBsB,EAAW/C,gBAAgB,GAAO+C,EAAWhC,kBAAoB,GAAE,cAAAvJ,OAAalC,GACpHyN,EAAW7B,eACZ,6CAC6C,OAArCrI,aAAaC,QAAQ,YACrB,SAAAtB,OACPuL,EAAWtL,aAAY,yEACgD,QAAO,OAAAD,OAC9E0L,SAASH,EAAWI,QAAU,EAC1B,kBAAoBD,SAASH,EAAWI,QAAU,GAAK,KACvD,GAAE,aAAA3L,OAENqG,EAAakF,EAAWxC,WAAa,IAAMwC,EAAWrL,WAAYqL,EAAWvC,aAAc,EAAI,MAAO,OAAM,uBAAAhJ,OAE5GqG,EAAaqF,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,aAAgB2C,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,YAAa,EAAI,KAAM,MAAK,gBAAA/I,OAClJiK,EAAkBsB,EAAW/C,gBAAgB,GAAS+C,EAAWhC,kBAAoB,GAAG,cAAAvJ,OAAalC,GAClHyN,EAAW7B,eACZ,8CAEQ,QAAA1J,OACPuL,EAAWtL,aAAY,oEAC2C,QAAO,QAAAD,OACzC,IAAhC0L,SAASH,EAAWI,QACnB,kBAAoBD,SAASH,EAAWI,QAAU,GAAK,KAAQ,GAAE,aAAA3L,OAElEqG,EAAakF,EAAWxC,WAAa,IAAMwC,EAAWrL,WAAYqL,EAAWvC,aAAc,EAAI,MAAO,OAAM,sBAAAhJ,OAE5GqG,EAAaqF,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,aAAgB2C,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,YAAa,EAAI,KAAM,MAAK,cAAA/I,OACpJiK,EAAiBsB,EAAW/C,gBAAgB,GAAO+C,EAAWhC,kBAAoB,GAAE,eAAAvJ,OAAclC,GAC7GyN,EAAW7B,eACZ,uCAGHoB,GAAe,CACbC,YAAaQ,EAAWM,gBAAkB,GAC1CzI,QAASqI,GAEb,GA+DI3N,GAAQgO,IACZ,MAAMhO,EAAO,IAAI6L,KAAKmC,GAEtB,IAAIC,EAAa,GAAA/L,OAAMlC,EAAKkO,cAAa,KAAAhM,OAAIiM,OAC3CnO,EAAKoO,WAAa,GAClBC,SAAS,EAAG,KAAI,KAAAnM,OAAIiM,OAAOnO,EAAKsO,WAAWD,SAAS,EAAG,MACzD,MAAME,EAAQvO,EAAKwO,WACbC,EAAUzO,EAAK0O,aAErB,IAAIC,EADSJ,GAAS,GAAK,KAAO,KAElC,MAAMK,EAAiBL,EAAQ,IAAM,GAC/BM,EAAmBJ,EAAU,GAAK,IAAMA,EAAUA,EASxD,MARyB,YAArBxP,EAAS,GAAGe,MACdqM,IAAAA,OAAc,MACdsC,EAAKJ,GAAS,GAAK,MAAQ,MAC3BN,EAAgB5B,IAAO2B,GAAGc,OAAO,kBAEjCzC,IAAAA,OAAc,MAGV,GAANnK,OAAU+L,EAAa,KAAA/L,OAAI0M,EAAc,KAAA1M,OAAI2M,EAAgB,KAAA3M,OAAIyM,KAqPnE7I,EAAAA,EAAAA,WAAU,KA2BR,GAAImG,EAAoB,CACtB,IAAKO,KAAiBA,cAAa,EAAbA,GAAerC,QAAS,EAE5C,YADAtB,EAAe,IA5BD5F,WAChB,IACE,MAAM8L,QAAiB7L,EAAAA,EAAMC,IAAI,GAADjB,OAAIkB,EAAAA,EAAOC,aAAY,gBAAgB,CACrEC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CACNC,MAAO8I,GACPwC,SAAU/C,EAAmB+C,SAC7BC,GAAI,QAGRpC,GAAakC,EAASpL,MACToL,EAASpL,IAQxB,CAAE,MAAOO,GAET,GAQEgL,EAEJ,GACC,CAAC1C,MAEJ1G,EAAAA,EAAAA,WAAU,MAsBH9E,IAAeA,GAAYmJ,OAAS,EACvC4C,GAAW,IAtBK9J,WAChB,IACE,MAAM8L,QAAiB7L,EAAAA,EAAMC,IAAI,GAADjB,OAAIkB,EAAAA,EAAOC,aAAY,gBAAgB,CACrEC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CACNC,MAAO1C,GACPgO,SAAU/C,EAAmB+C,SAC7BC,GAAI,QAGRlC,GAAWgC,EAASpL,MACPoL,EAASpL,IAExB,CAAE,MAAOO,GAET,GASAgL,IAED,CAAClO,MAKJ8E,EAAAA,EAAAA,WAAU,KAEU7C,WAEhB,IAAK8I,GAAmBA,EAAgB5B,OAAS,EAC/CtB,EAAe,SAIjB,IACE,MAOMlF,SAPiBT,EAAAA,EAAMC,IAAI,GAADjB,OAAIkB,EAAAA,EAAOC,aAAY,gBAAgB,CACrEC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CAAEC,MAAOqI,EAAiBkD,GAAI,SAGlBtL,KAEtBkF,EAAelF,EAMjB,CAAE,MAAOO,GAET,GAGFgL,IACC,CAACnD,IAEJ,MAAM,cAAE7K,KAAkBC,EAAAA,EAAAA,KACpBgO,GAAMA,KACV7F,EAAkB,IAClBE,EAAgB,IAChBZ,IACA7H,GAAkB,MAClBmL,EAAsB,MACtBS,GAAoB,MACpBpC,EAAkB,CAChBgB,QAAShI,aAAaC,QAAQ,eAC9BgI,gBAAiB,KACjBN,YAAa,KACbO,iBAAkB,KAClBC,cAAe,KACfT,UAAW,KACXP,eAAgB,KAChBiB,eAAgB,KAChBN,WAAY,KACZV,gBAAiB,KACjBiB,eAAe,IAAIC,MAAOC,gBAG5Bd,EAAkB,CAChBE,YAAa,KACbC,aAAc,KACdF,UAAW,KACXG,WAAY,KACZC,WAAY,KACZC,YAAa,OAEf5B,EAAY,CACVC,QAAQ,EACRC,eAAe,EACfC,cAAc,IAEhB9I,GAAkB,MAClBmL,EAAsB,MACtBS,GAAoB,MACpBP,GAAkB,IAEpB,OACE5M,EAAAA,EAAAA,MAAA,OACAC,UAAS,6BAAAyC,OACPuH,EAASE,OAAS,gBAAkB,iBAAgB,KAAAzH,OAClDyG,EAAyB,OAAS,IACtC5G,MAAO,CAELqN,UAAW,OACXC,UAAW,OACXC,OAAQ,OACRrJ,gBAAiB,UACjBM,QAAS,OACTS,SAAU,UACVtH,SAAA,EAEFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACzCC,EAAAA,EAAAA,KAAA,UACE4P,KAAK,SACL9P,UAAU,mCACV+P,QAASL,GACT,aAAW,aAGfxP,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,MACEC,UAAU,qCACVsC,MAAO,CACLkE,gBAAiB,iBACjBR,MAAO,OACPuB,SAAU,UACVtH,SAAA,EAEFC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,QAAS,KAC9B5C,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,uBAGvB/C,EAAAA,EAAAA,MAAA,OACE6H,IAA0C,OAArC9D,aAAaC,QAAQ,YAAuB,MAAQ,MACzD/D,UAAS,eAAAyC,OACPuH,EAASE,OAAS,WAAa,YAC9BjK,SAAA,EAEHC,EAAAA,EAAAA,KAAA,MAAIoC,MAAO,CAAEiF,SAAU,UAAWtH,UAChCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,aAEvB5C,EAAAA,EAAAA,KAAA,SAAOF,UAAU,UAAUsC,MAAO,CAAEiF,SAAU,UAAWtH,UACvDC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,oBAEvB5C,EAAAA,EAAAA,KAAC8P,EAAU,CACTzO,YAAa+K,EACbe,eAAgBd,EAChB/K,kBArsBqByO,IAC7B1D,EAAmB0D,IAqsBX3O,kBAAmBmL,EACnBpL,eAAgBmL,EAChBrL,QAASkI,EACTjI,SAAUE,MAGZpB,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAQH,UAAU,eAAesC,MAAO,CAAEiF,SAAU,UAAWtH,UAC5EC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,cAEvB5C,EAAAA,EAAAA,KAACgQ,EAAAA,GAAa,CACZpN,GAAG,cACHqN,mBAAmB,EACnBnQ,UAAS,gBAAAyC,OACPsI,EAAeS,UAAY,EAAI,eAAiB,eAElDnL,MAAO+K,EAAeK,YACtB5I,YAAY,IACZvC,SAAU6K,EACVvD,IAAI,SAGN1H,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAQH,UAAU,eAAesC,MAAO,CAAEiF,SAAU,UAAWtH,UAC5EC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,sBAEvB5C,EAAAA,EAAAA,KAACgQ,EAAAA,GAAa,CACZE,UAAU,EACVD,mBAAmB,EACnB9L,KAAK,eACLrE,UAAU,eACVK,MACE8N,SAAS3B,aAAkB,EAAlBA,EAAoB6B,SAC7BF,SAASpD,EAAeU,aAE1B5I,YAAY,IACZ+E,IAAI,SAGN1H,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,cAAcH,UAAU,eAAesC,MAAO,CAAEiF,SAAU,UAAWtH,UAClFC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,mBAEvB5C,EAAAA,EAAAA,KAAA,SACEI,SAAUsK,EACVvK,MAAO0K,EAAeiB,iBACtB8D,KAAK,OACLzL,KAAK,mBACLxB,YAAapB,GAAc,CAAEqB,GAAI,gBACjC9C,UAAU,qBACVsC,MAAO,CACL0D,MAAO,WAKX9F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAACmQ,EAAAA,EAAmB,CAClB5Q,cAAeoN,EACftN,YA90BS+Q,IACnB,GAAIA,EAAY,CACd,MAAM,KAAE7P,EAAI,MAAEE,EAAK,IAAEC,GAAQ0P,EAGvBC,GAFgBC,IAAAA,YAAoB/P,EAAME,EAAOC,GAE3C,IAAIwL,MACFsC,OAAO6B,EAAIxB,YAAYH,SAAS,EAAG,KACjCF,OAAO6B,EAAItB,cAAcL,SAAS,EAAG,KAGrD,MAAM6B,EAAI,IAAIrE,KAURsE,EATO,IAAItE,KACfkE,EAAW7P,KACX6P,EAAW3P,MAAQ,EACnB2P,EAAW1P,IACX6P,EAAE1B,WACF0B,EAAExB,cAImB5C,cAEvBvB,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBoB,cAAeuE,IAGnB,GAozBUhR,OAAOQ,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,SAC5BjD,eAAgBA,EAChBD,YAAaA,UAKnBG,EAAAA,EAAAA,MAAA,OACE6H,IAA0C,OAArC9D,aAAaC,QAAQ,YAAuB,MAAQ,MACzD/D,UAAS,eAAAyC,OACPuH,EAASE,OAAS,WAAa,YAC9BjK,SAAA,EAEHC,EAAAA,EAAAA,KAAA,MAAIoC,MAAO,CAAEiF,SAAU,UAAWtH,UAChCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,WAEvB5C,EAAAA,EAAAA,KAAA,SAAOF,UAAU,UAAUsC,MAAO,CAAEiF,SAAU,UAAWtH,UACvDC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,oBAEvB5C,EAAAA,EAAAA,KAACyQ,EAAAA,EAAS,CACRzP,YAAasL,EACbjL,YAAawL,GACbM,eAAgBL,GAChBxL,kBA9tBmByO,IAC3BjD,GAAiBiD,IA8tBT3O,kBAAmB4L,GACnB7L,eAAgB4L,GAChB9L,QAASgM,GACT/L,SAlxBQyJ,IACZA,IACFC,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBY,WAAYd,EAAEwD,WAEhB9C,GAAiBzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdsJ,GAAc,IACjBwF,mBAAoB/F,EAAEwD,gBA6wBpBnO,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAQH,UAAU,eAAesC,MAAO,CAAEiF,SAAU,UAAWtH,UAC5EC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,cAEvB/C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qDAAoDC,UACjEC,EAAAA,EAAAA,KAAA,SACEF,UAAU,mBACV8P,KAAK,WACLhN,GAAG,SACHuB,KAAK,SACLwM,QAAS7G,EAASE,OAClB5J,SAAWuK,GACTZ,GAAWnI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIkI,GAAQ,IAAEE,OAAQW,EAAEG,OAAO6F,gBAIlD3Q,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAACgQ,EAAAA,GAAa,CACZE,UAAWpG,EAASE,OACpBiG,mBAAmB,EACnBrN,GAAG,YACH9C,UAAS,gBAAAyC,OACPsI,EAAeS,UAAY,EACvB,eACA,eAENnL,MAAO+K,EAAeI,UACtB3I,YAAY,IACZvC,SAAU6K,EACVvD,IAAI,cAKV1H,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAQH,UAAU,eAAesC,MAAO,CAAEiF,SAAU,UAAWtH,UAC5EC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,sBAEvB5C,EAAAA,EAAAA,KAACgQ,EAAAA,GAAa,CACZE,UAAU,EACVD,mBAAmB,EACnB9L,KAAK,aACLrE,UAAU,eACVK,MACgC,IAA9B0K,EAAeY,WACXwC,SAASpD,EAAeY,YACxBwC,SACEnE,EAASE,OACLiE,SAASpD,EAAeY,YACtBwC,SAASpD,EAAeS,WAC1BT,EAAeU,aAErB,GACCzB,EAASE,OACNiE,SACEA,SAASpD,EAAeY,YACtBwC,SAASpD,EAAeS,YAE5BT,EAAeU,aAEzB5I,YAAY,IACZ+E,IAAI,SAGN1H,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,cAAcH,UAAU,eAAesC,MAAO,CAAEiF,SAAU,UAAWtH,UAClFC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,mBAEvB/C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAesC,MAAO,CAAEwO,aAAc,QAAS7Q,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qDAAoDC,UACjEC,EAAAA,EAAAA,KAAA,SACEF,UAAU,mBACV8P,KAAK,WACLhN,GAAG,eACHuB,KAAK,eACLwM,QAAS7G,EAASG,cAClB7J,SAAWuK,GACTZ,GAAWnI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRkI,GAAQ,IACXG,cAAeU,EAAEG,OAAO6F,gBAKhC3Q,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,SACEI,SAAUsK,EACVvK,MAAO0K,EAAeE,eACtBmF,UAAWpG,EAASG,cACpB2F,KAAK,OACLzL,KAAK,iBACLxB,YAAapB,GAAc,CAAEqB,GAAI,gBACjC9C,UAAU,oBACVsC,MAAO,CACL0D,MAAO,kBAQhBgE,EAASE,SACRnK,EAAAA,EAAAA,MAAA,OACEC,UAAU,uBACV4H,IAA0C,OAArC9D,aAAaC,QAAQ,YAAuB,MAAQ,MAAM9D,SAAA,EAE/DC,EAAAA,EAAAA,KAAA,MAAIoC,MAAO,CAAEiF,SAAU,UAAWtH,UAChCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,iBAEvB5C,EAAAA,EAAAA,KAAA,SAAOF,UAAU,UAAUsC,MAAO,CAAEiF,SAAU,UAAWtH,UACvDC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,oBAEvB5C,EAAAA,EAAAA,KAACyQ,EAAAA,EAAS,CACRzP,YAAasL,EACbjL,YAAaA,GACb8L,eAAgBA,GAChB7L,kBA9xBeyO,IACzB5C,GAAe4C,IA8xBL3O,kBAAmBA,GACnBD,eAAgBA,GAChBF,QAASA,GACTC,SAl1BIyJ,IACVA,IACFC,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBc,YAAahB,EAAEwD,WAEjB9C,GAAiBzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdsJ,GAAc,IACjBM,aAAcb,EAAEwD,gBA60BZnO,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAQH,UAAU,eAAesC,MAAO,CAAEiF,SAAU,UAAWtH,UAC5EC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,cAEvB5C,EAAAA,EAAAA,KAACgQ,EAAAA,GAAa,CACZE,UAAU,EACVD,mBAAmB,EACnB9L,KAAK,aACLrE,UAAS,gBAAAyC,OACPsI,EAAeU,YAAcV,EAAeS,UAAY,EACpD,eACA,eAENnL,MAAO0K,EAAeU,YAAcV,EAAeS,UACnD3I,YAAY,IACZ+E,IAAI,SAGN1H,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAQH,UAAU,eAAesC,MAAO,CAAEiF,SAAU,UAAWtH,UAC5EC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,sBAEvB5C,EAAAA,EAAAA,KAACgQ,EAAAA,GAAa,CACZE,UAAU,EACVD,mBAAmB,EACnB9L,KAAK,cACLrE,UAAU,eACVK,MACE8N,SAAS9M,cAAc,EAAdA,GAAgBgN,SACzBF,SAASpD,EAAeU,aACxB0C,SAASpD,EAAeS,WAE1B3I,YAAY,IACZ+E,IAAI,SAGN1H,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,cAAcH,UAAU,eAAesC,MAAO,CAAEiF,SAAU,UAAWtH,UAClFC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,mBAEvB/C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qDAAoDC,UACjEC,EAAAA,EAAAA,KAAA,SACEF,UAAU,mBACV8P,KAAK,WACLhN,GAAG,eACHuB,KAAK,eACLhE,MAAO2J,EAASI,aAChByG,QAAS7G,EAASI,aAClB9J,SAAWuK,IACTZ,GAAWnI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRkI,GAAQ,IACXI,aAAcS,EAAEG,OAAO6F,iBAK/B3Q,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,SACEI,SAAUsK,EACVvK,MAAO0K,EAAeG,gBACtB4E,KAAK,OACLzL,KAAK,kBACL+L,UAAWpG,EAASI,aACpBvH,YAAapB,GAAc,CAAEqB,GAAI,gBACjC9C,UAAU,oBACVsC,MAAO,CACL0D,MAAO,mBASnBjG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UACE4P,KAAK,SACL9P,UAAU,kDACVsC,MAAO,CACL0D,MAAO,SAET+J,QAASL,GAAMzP,UAEfC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,cAEvB5C,EAAAA,EAAAA,KAAA,UACE4P,KAAK,SACL9P,UAAU,8CACVsC,MAAO,CACL0D,MAAO,SAET+J,QA7sBKgB,KACb,IAAKvE,IAAuBS,GAU1B,YATAzD,EAAU,CACRwH,SAAU,UACVC,KAAM,QACNC,OACEhR,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,iDAEvBqO,mBAAmB,EACnBC,MAAO,MAIPpH,EAASE,SACXa,EAAemB,eAAiB7K,GAAeyB,IAEjDiI,EAAegB,gBAAkBS,EAAmB1J,GACpDiI,EAAekB,cAAgBgB,GAAiBnK,GAChD,IAAIuO,EAAc7E,EAClBC,EAAsB,MACtBE,EAAkB3C,EAASG,eAE3B1G,EAAAA,EACG6N,KAAK3N,EAAAA,EAAOC,aAAe,uBAAwBmH,EAAgB,CAClElH,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CAAEuN,SAAUvH,EAASE,OAAS,KAAO,KAAKsH,QAAQxH,EAASG,cAAgB,KAAK,KAAKsH,QAAQzH,EAASI,aAAe,KAAK,QAEnI3B,KAAMC,IACL,IAAIxE,EAAOwE,EAAIxE,KACXwN,EAAMhJ,EAAIxE,KAAKyN,KACfpD,EAAIhO,GAAKX,GACTgS,EAAW9N,aAAaC,QAAQ,YAChC8B,EAAU,GAyDd,GAvDEA,EADe,OAAb+L,EACK,SAAAnP,OACL4O,EAAc3O,aAAY,sFAEzB,WAAU,aAAAD,OAGb0L,SAASlB,GAAiBmB,QAAU,EAChC,cAAgBD,SAASlB,GAAiBmB,QAAU,GAAK,KACzD,GAAE,cAAA3L,OAEVqG,EAAaiC,EAAeU,aAAe,IAAM4F,EAAc1O,UAAa,MAAK,gCAAAF,OAGjFqG,EAAauI,EAAchD,QAAUtD,EAAeU,cAAiB4F,EAAchD,QAAUtD,EAAeU,aAAc,EAAI,KAAM,MAAK,sBAAAhJ,OAEnIsI,EAAeiB,kBAAoB,GAAE,cAAAvJ,OAC1B8L,EAAC,6CACQ,OAAbqD,EACF,QAAAnP,OACL4O,EAAc3O,aAAY,8EAEzB,QAAO,eAAAD,OAId0L,SAASlB,GAAiBmB,QAAU,EAChC,kBAAoBD,SAASlB,GAAiBmB,QAAU,GAAK,KAC7D,GAAE,aAAA3L,OAENqG,EAAaiC,EAAeU,aAAe,IAAM4F,EAAc1O,UAAW,MAAK,uBAAAF,OAE/EqG,EAAauI,EAAchD,QAAUtD,EAAeU,cAAgB4F,EAAchD,QAAUtD,EAAeU,aAAc,EAAI,KAAM,MAAK,gBAAAhJ,OAElIsI,EAAeiB,kBAAoB,GAAE,cAAAvJ,OAC1B8L,EAAC,gDACQ,OAAbqD,EACF,QAAAnP,OACL4O,EAAc3O,aAAY,oEAEvB,SAAQ,eAAAD,OAGX0L,SAASlB,GAAiBmB,QAAU,EAChC,kBAAoBD,SAASlB,GAAiBmB,QAAU,GAAK,KAC7D,GAAE,aAAA3L,OAENqG,EAAaiC,EAAeU,aAAe,IAAM4F,EAAc1O,UAAW,MAAK,sBAAAF,OAE/EqG,EAAauI,EAAchD,QAAUtD,EAAeU,cAAiB4F,EAAchD,QAAUtD,EAAeU,aAAc,EAAI,KAAM,MAAK,cAAAhJ,OAEzIsI,EAAeiB,kBAAoB,GAAE,eAAAvJ,OACzB8L,EAAC,uCAEL,0BAEkB,IAA1B8C,EAAcpD,QAEhBV,GAAe,CACbC,YAAa6D,EAAc/C,gBAAkB,GAC7CzI,QAASA,SAGR,GAA8B,IAA3BoH,GAAiBgB,QAAY,CACnC,IAAI/J,GAAIpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOmL,IAAoB4E,GAAW,IAAEC,QAASvD,GAAMxD,GAC/DgD,GAAe7J,EACjB,CAEA,IAAI6N,EAAY,CACdC,SAAW/E,GAAiBmB,QAE1ByD,EAAY,CACd7F,iBAAkBjB,EAAeiB,kBAgBnC,GAbAnC,GAAiB/H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIuP,GAAiBU,GAAchH,IACtDhB,GAAejI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAImL,IAAoB4E,GAAW,IAAEC,QAASvD,GAAMxD,IAYjEf,EAASE,OAAQ,CACnB,IAAI+H,EAAY,CAACC,KAAK,CAAC7D,QAAQgD,EAAchD,UACzC8D,EAAU,CAACC,GAAG,CAAC/D,QAAQpB,GAAiBoB,UACxCgE,EAAW,CAACC,IAAI,CAACjE,QAAQhN,GAAegN,UACxC6D,EAAO,CAAEK,SAAUlB,EAAc3O,cACjC0P,EAAK,CAAEG,SAAUtF,GAAiBvK,cAClC4P,EAAM,CAAEC,SAAUlR,GAAeqB,cACrCgP,EAAIQ,MAAIpQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4P,EAAIQ,MAASA,GAASb,GACtCK,EAAIU,IAAEtQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4P,EAAIU,IAAOnF,IAAqBmF,GAC9CV,EAAIY,KAAGxQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4P,EAAIY,KAAQjR,IAAmBiR,GAC9CZ,EAAIrD,SAAOvM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKuQ,GAAcJ,GAAeE,GAC7C5I,EAAW,CAACmI,KAAQpI,IACpBF,EAAgBoJ,GACdA,EAAYC,IAAKC,GACXA,EAAO5P,KAAOoB,EAAKyO,kBAAkB7P,IACvChB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAKyO,mBACnBD,EAAO5P,KAAOoB,EAAK0O,mBAAmB9P,IAC/ChB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAK0O,oBACnBF,EAAO5P,KAAOoB,EAAK2O,iBAAiB/P,IAC7ChB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAK2O,kBAEvBH,GAGb,KAAO,CACL,IAAIT,EAAY,CAACC,KAAK,CAAC7D,QAAQgD,EAAchD,UACzC8D,EAAU,CAACC,GAAG,CAAC/D,QAAQpB,GAAiBoB,UACxC6D,EAAO,CAAEK,SAAUlB,EAAc3O,cACjC0P,EAAK,CAAEG,SAAUtF,GAAiBvK,cACtCgP,EAAIQ,MAAIpQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4P,EAAIQ,MAASA,GAASb,GACtCK,EAAIU,IAAEtQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4P,EAAIU,IAAOnF,IAAqBmF,GAC9CV,EAAIrD,SAAOvM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKmQ,GAAeE,GAC/B5I,EAAW,CAACmI,KAAQpI,IACpBF,EAAgBoJ,GACdA,EAAYC,IAAKC,GACXA,EAAO5P,KAAOoB,EAAK0O,mBAAmB9P,IACxChB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAK0O,oBACnBF,EAAO5P,KAAOoB,EAAK2O,iBAAiB/P,IAC7ChB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAK2O,kBAEvBH,GAGb,CACApR,GAAkB,MAClBmL,EAAsB,MACtBS,GAAoB,MAEpB1D,EAAU,CACRwH,SAAU,UACVC,KAAM,UACNC,MAAO,mCACPC,mBAAmB,EACnBC,MAAO,MAGTtG,EAAkB,CAChBgB,QAAShI,aAAaC,QAAQ,eAC9BgI,gBAAiB,GACjBN,YAAa,GACbO,iBAAkB,GAClBC,cAAe,GACfT,UAAW,GACXP,eAAgB,GAChBiB,eAAgB,GAChBN,WAAY,GACZV,gBAAiB,GACjBiB,eAAe,IAAIC,MAAOC,gBAG5Bd,EAAkB,CAChBE,YAAa,GACbC,aAAc,GACdF,UAAW,GACXG,WAAY,GACZC,WAAY,GACZC,YAAa,KAEf5B,EAAY,CACVC,QAAQ,EACRC,eAAe,EACfC,cAAc,IAEhB9I,GAAkB,MAClBmL,EAAsB,MACtBS,GAAoB,QAErBtE,MAAOiC,IAENrB,EAAU,CACRwH,SAAU,UACVC,KAAM,QACNC,MAAO,wBACPC,mBAAmB,EACnBC,MAAO,SAofWnR,UAEhBC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,gBAIxB8G,IACC7J,EAAAA,EAAAA,MAAA,SACEC,UAAU,wBACV4H,IAA0C,OAArC9D,aAAaC,QAAQ,YAAuB,MAAQ,MAAM9D,SAAA,EAE/DC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAI4S,MAAM,MAAK7S,UACbC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,UAEvB5C,EAAAA,EAAAA,KAAA,MAAI4S,MAAM,MAAK7S,UACbC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,YAEvB5C,EAAAA,EAAAA,KAAA,MAAI4S,MAAM,MAAK7S,UACbC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,cAEvB5C,EAAAA,EAAAA,KAAA,MAAI4S,MAAM,MAAK7S,UACbC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,oBAI3B/C,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAI4S,MAAM,MAAK7S,SAAC,OAChBC,EAAAA,EAAAA,KAAA,MAAAD,SAAK2J,EAAelH,gBACpBxC,EAAAA,EAAAA,KAAA,MAAIoC,MAAO,CAAE+E,MAAO,OAAQpH,SACzB2J,EAAe6B,YAAc7B,EAAejH,aAE/CzC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAG6P,QAASA,IAx1BA/B,KAE1B,GAA2B,IAAvBA,EAAWC,QAAe,CAC5B,IAAIC,EAAY,GAEdA,EADuC,OAArCpK,aAAaC,QAAQ,YACd,QAAAtB,OACPuL,EAAWtL,aAAY,oEAC2C,SAAQ,OAAAD,OAC1E0L,SAASH,EAAWI,QAAU,EAC1B,kBAAoBD,SAASH,EAAWI,QAAU,GAAK,KACvD,GAAE,aAAA3L,OAENqG,EAAakF,EAAWxC,WAAa,IAAMwC,EAAWrL,UAAU,MAAK,sBAAAF,OAErEqG,EAAaqF,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,aAAgB2C,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,YAAa,EAAI,KAAM,MAE1J,cAAA/I,OACWuL,EAAW/C,gBAAkB,GAAE,eAAAxI,OAAclC,GACxDyN,EAAW7B,eACZ,uCAC6C,OAArCrI,aAAaC,QAAQ,YACrB,QAAAtB,OAAWuL,EAAWtL,aAAY,sGAEnC,UAAS,OAAAD,OACf0L,SAASH,EAAWI,QAAU,EAC1B,cAAgBD,SAASH,EAAWgE,UAAY,GAAK,KACrD,GAAE,sBAAAvP,OAEEqG,EAAakF,EAAWxC,WAAa,IAAMwC,EAAWrL,UAAU,MAAK,kCAAAF,OAE7EqG,EAAaqF,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,aAAgB2C,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,YAAa,EAAI,KAAM,MAAK,8BAAA/I,OAElJuL,EAAW/C,gBAAkB,GAAE,sBAAAxI,OACtClC,GAAKyN,EAAW7B,eAAc,qDAG7B,SAAA1J,OAAYuL,EAAWtL,aAAY,yEAE7C,QAAO,SAAAD,OAEZ0L,SAASH,EAAWI,QAAU,EAC1B,kBAAoBD,SAASH,EAAWI,QAAU,GAAK,KACvD,GAAE,aAAA3L,OAECqG,EAAakF,EAAWxC,WAAa,IAAMwC,EAAWrL,UAAU,MAAK,uBAAAF,OAGpEqG,EAAaqF,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,aAAgB2C,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,YAAa,EAAI,KAAM,MAAK,0BAAA/I,OAEtJuL,EAAW/C,gBAAkB,GAAE,wBAAAxI,OAChClC,GAAKyN,EAAW7B,eAAc,wDAG1CoB,GAAe,CACbC,YAAaQ,EAAWM,gBAAkB,GAC1CzI,QAASqI,GAEb,GA+xBgC6E,CAAmBnJ,GAAgB3J,UACnDC,EAAAA,EAAAA,KAAA,OACE8S,IAAKC,EACLC,IAAI,WAGJ5Q,MAAO,CAAE0D,MAAO,oBAMxBjG,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAI4S,MAAM,MAAK7S,SAAC,OAChBC,EAAAA,EAAAA,KAAA,MAAAD,SAAK6J,EAAapH,gBAClBxC,EAAAA,EAAAA,KAAA,MAAIoC,MAAO,CAAE+E,MAAO,SAAUpH,SAC3B6J,EAAa0B,UAAY1B,EAAanH,aAEzCzC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAG6P,QAASA,IAAMhC,GAAejE,GAAc7J,UAC7CC,EAAAA,EAAAA,KAAA,OACE8S,IAAKC,EACLC,IAAI,WACJlT,UAAU,gBACVsC,MAAO,CAAE0D,MAAO,gCA+CtC,C,kDC1yCe,SAASmN,EAAkB7T,GAwBtC,IAxBuC,uBACzC4J,EAAsB,MACtBwG,EAAK,eACLtG,EAAc,YACdC,EAAW,QACXC,EAAO,WACPC,EAAU,OAEV6J,EAAM,UACNC,EAAS,eACTtI,EAAc,kBACdD,EAAiB,SACjBd,EAAQ,YACRC,EAAW,eACXmB,EAAc,kBACdG,EAAiB,mBACjBiB,EAAkB,iBAClBS,EAAgB,eAChB5L,EAAc,kBACdC,EAAiB,sBACjBmL,EAAqB,oBACrBS,EAAmB,kBACnBoG,EAAiB,kBACjBC,GACDjU,EACC,MAAMkK,GAAYC,EAAAA,EAAAA,KACZC,GAAWC,EAAAA,EAAAA,OACVC,EAAgBC,IAAqB/J,EAAAA,EAAAA,UAAS,OAC9CgK,EAAcC,IAAmBjK,EAAAA,EAAAA,UAAS,OAE3C,SAAEN,EAAQ,OAAE6K,EAAM,QAAEC,IAAYC,EAAAA,EAAAA,IAAa1F,GAAUA,EAAMrF,WAC5DgL,EAAUC,IAAe3K,EAAAA,EAAAA,UAAS,KAClC0T,EAAMC,IAAW3T,EAAAA,EAAAA,WAAS,IACjCuG,EAAAA,EAAAA,WAAU,KACQ,cAAZiE,GAA4B9K,EAG9BiL,EAAYjL,GAFZkK,GAASiB,EAAAA,EAAAA,QAIV,IAOH,MAAMC,EAAcC,IAClBC,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjB,CAACF,EAAEG,OAAO3G,MAAOwG,EAAEG,OAAO3K,SAExB2J,EAASG,eAAiBH,EAASI,aACf,qBAAlBS,EAAEG,OAAO3G,MACXyG,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBE,eAAgBJ,EAAEG,OAAO3K,MACzB6K,gBAAiBL,EAAEG,OAAO3K,SAGrB2J,EAASG,cACI,qBAAlBU,EAAEG,OAAO3G,MACXyG,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBE,eAAgBJ,EAAEG,OAAO3K,SAGpB2J,EAASI,cACI,qBAAlBS,EAAEG,OAAO3G,MACXyG,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBG,gBAAiBL,EAAEG,OAAO3K,UAK5B8K,EAAgBN,IAEpB,MAAMO,EAAiBP,EAAEG,OAAO3K,MAE1BgL,EAAmBD,EAAeE,QAAQ,KAAM,IAAIA,QAAQ,IAAK,IAElEtB,EAASE,QAYZqB,GAAiBzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdsJ,GAAc,IACjB,CAACP,EAAEG,OAAOlI,IAAK+H,EAAEG,OAAO3K,SAE1ByK,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjB,CAACF,EAAEG,OAAOlI,IAAKuI,OAjBjBE,GAAiBzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdsJ,GAAc,IACjBI,UAAWX,EAAEG,OAAO3K,MACpB,CAACwK,EAAEG,OAAOlI,IAAK+H,EAAEG,OAAO3K,SAE1ByK,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBS,UAAWH,EACX,CAACR,EAAEG,OAAOlI,IAAKuI,QAuBdiB,GAAiBC,KAAsBzM,EAAAA,EAAAA,aAIvCF,GAAaC,KAAkBC,EAAAA,EAAAA,UAAS8M,QACxCC,GAASC,KAAchN,EAAAA,EAAAA,UAAS8M,QAmGhCG,GAAeC,KAAoBlN,EAAAA,EAAAA,aACnCqN,GAAWC,KAAgBtN,EAAAA,EAAAA,aAuD3ByB,GAAa8L,KAAkBvN,EAAAA,EAAAA,aAC/BqB,GAASmM,KAAcxN,EAAAA,EAAAA,YAuDxByN,GAAiBpG,IAAoC,IAAnC,YAAEqG,EAAc,GAAE,QAAE3H,GAASsB,EACnD,MAAMsG,EAAmBC,mBAAmB7H,GACtC8H,EAAe,yBAAAlL,OAA4B+K,EAAW,UAAA/K,OAASgL,GAMrEG,OAAOC,SAASC,KAAOH,IAiTzBtH,EAAAA,EAAAA,WAAU,KA2BR,GAAImG,EAAoB,CACtB,IAAKO,KAAiBA,cAAa,EAAbA,GAAerC,QAAS,EAE5C,YADAtB,EAAe,IA5BD5F,WAChB,IACE,MAAM8L,QAAiB7L,EAAAA,EAAMC,IAAI,GAADjB,OAAIkB,EAAAA,EAAOC,aAAY,gBAAgB,CACrEC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CACNC,MAAO8I,GACPwC,SAAU/C,EAAmB+C,SAC7BC,GAAI,QAGRpC,GAAakC,EAASpL,MACToL,EAASpL,IAQxB,CAAE,MAAOO,GAET,GAQEgL,EAEJ,GACC,CAAC1C,MAEJ1G,EAAAA,EAAAA,WAAU,MAsBH9E,IAAeA,GAAYmJ,OAAS,EACvC4C,GAAW,IAtBK9J,WAChB,IACE,MAAM8L,QAAiB7L,EAAAA,EAAMC,IAAI,GAADjB,OAAIkB,EAAAA,EAAOC,aAAY,gBAAgB,CACrEC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CACNC,MAAO1C,GACPgO,SAAU/C,EAAmB+C,SAC7BC,GAAI,QAGRlC,GAAWgC,EAASpL,MACPoL,EAASpL,IAExB,CAAE,MAAOO,GAET,GASAgL,IAED,CAAClO,MAKJ8E,EAAAA,EAAAA,WAAU,KAEU7C,WAEhB,IAAK8I,IAAmBA,GAAgB5B,OAAS,EAC/CtB,EAAe,SAIjB,IACE,MAOMlF,SAPiBT,EAAAA,EAAMC,IAAI,GAADjB,OAAIkB,EAAAA,EAAOC,aAAY,gBAAgB,CACrEC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CAAEC,MAAOqI,GAAiBkD,GAAI,SAGlBtL,KAEtBkF,EAAelF,EAMjB,CAAE,MAAOO,GAET,GAGFgL,IACC,CAACnD,KACJ,MAAM,cAAE7K,KAAkBC,EAAAA,EAAAA,KAC1B,OACE3B,EAAAA,EAAAA,MAAA,OACEC,UAAS,6BAAAyC,OACPuH,EAASE,OAAS,gBAAkB,iBAAgB,KAAAzH,OAClDyG,EAAyB,OAAS,IACtC5G,MAAO,CACLoR,SAAU,MACV/D,UAAW,OACXC,UAAW,OACXC,OAAQ,OACRrJ,gBAAiB,UACjBM,QAAS,QACT7G,SAAA,EAEFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACzCC,EAAAA,EAAAA,KAAA,UACE4P,KAAK,SACL9P,UAAU,mCACV+P,QAASL,EACT,aAAW,aAGfxP,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBF,EAAAA,EAAAA,MAAA,MACEC,UAAU,qCACVsC,MAAO,CAAEkE,gBAAiB,iBAAkBR,MAAO,OAAQuB,SAAS,UAAUtH,SAAA,EAE9EC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,SAAU,KAC/B5C,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,uBAGvB/C,EAAAA,EAAAA,MAAA,OACEC,UAAS,eAAAyC,OACPuH,EAASE,OAAS,WAAa,YAEjCtC,IAA0C,OAArC9D,aAAaC,QAAQ,YAAuB,MAAQ,MAAM9D,SAAA,EAE/DC,EAAAA,EAAAA,KAAA,MAAIoC,MAAO,CAACiF,SAAS,QAAQtH,UAC3BC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,aAEvB5C,EAAAA,EAAAA,KAAA,SAAOF,UAAU,UAASC,UACxBC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,oBAEvB5C,EAAAA,EAAAA,KAACyQ,EAAAA,EAAS,CACRpP,YAAa+K,GACbe,eAAgBd,GAChB/K,kBAtkBmByO,IAC7BwD,GAAQ,GACRlH,GAAmB0D,IAqkBT3O,kBAAmBmL,EACnBpL,eAAgBmL,EAChBrL,QAASkI,EACTjI,SAxoBQyJ,IAelB,GAdApH,EAAAA,EACGC,IAAIC,EAAAA,EAAOC,aAAe,kBAAmB,CAC5CC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CAAEuE,MAAOsC,aAAC,EAADA,EAAGrC,WAErBC,KAAMC,IACLpH,EAAkBoH,EAAIxE,QAGvB0E,MAAOC,OAGNgC,EAAG,CACL,MAAMvF,EAAS+D,EAAY/D,OACxBoN,GAAWA,EAAOiB,UAAY9I,EAAE8I,SAEnCvG,GAAa9H,GACbgI,GAAWhI,GACXwF,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBW,aAAcb,EAAEwD,WAElB9C,GAAiBzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdsJ,GAAc,IACjBM,aAAcb,EAAEwD,UAEpB,MA6mBQnO,EAAAA,EAAAA,KAAA,SAAO0T,IAAI,QAAQ5T,UAAU,eAAcC,UACzCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,cAEvB5C,EAAAA,EAAAA,KAACgQ,EAAAA,GACC,CACApN,GAAG,cAEHqN,mBAAmB,EAEnBnQ,UAAS,gBAAAyC,OACPsI,EAAeS,UAAY,EAAI,eAAiB,eAElDnL,MAAO+K,EAAeK,YACtB5I,YAAY,IACZvC,SAAU6K,EACVvD,IAAI,SAEN1H,EAAAA,EAAAA,KAAA,SAAO0T,IAAI,QAAQ5T,UAAU,eAAcC,UACzCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,sBAEvB5C,EAAAA,EAAAA,KAACgQ,EAAAA,GAEC,CACAE,UAAU,EACVD,mBAAmB,EACnB9L,KAAK,eACLrE,UAAU,eACVK,MACE8N,SAASpD,EAAeW,cACxByC,SAASpD,EAAeU,aAE1B5I,YAAY,IACZ+E,IAAI,SAGN1H,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,cAAcH,UAAU,eAAcC,UACnDC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,mBAEvB5C,EAAAA,EAAAA,KAAA,SAEEI,SAAUsK,EACVvK,MAAO0K,EAAeiB,iBACtB8D,KAAK,OACLzL,KAAK,mBAELxB,YAAapB,GAAc,CAAEqB,GAAI,gBACjC9C,UAAU,yBACVsC,MAAO,CAAE0D,MAAO,WAElB9F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAACmQ,EAAAA,EAAmB,CAClB5Q,cAAeoN,GACftN,YA5tBO+Q,IACnB,GAAIA,EAAY,CACd,MAAM,KAAE7P,EAAI,MAAEE,EAAK,IAAEC,GAAQ0P,EAGvBC,GAFgBC,IAAAA,YAAoB/P,EAAME,EAAOC,GAE3C,IAAIwL,MACFsC,OAAO6B,EAAIxB,YAAYH,SAAS,EAAG,KACjCF,OAAO6B,EAAItB,cAAcL,SAAS,EAAG,KAGrD,MAAM6B,EAAI,IAAIrE,KAURsE,EATO,IAAItE,KACfkE,EAAW7P,KACX6P,EAAW3P,MAAQ,EACnB2P,EAAW1P,IACX6P,EAAE1B,WACF0B,EAAExB,cAImB5C,cAEvBvB,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBoB,cAAeuE,IAGnB,GAksBYhR,OAAOQ,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,SAC5BjD,eAAgBA,GAChBD,YAAaA,WAInBG,EAAAA,EAAAA,MAAA,OACEC,UAAS,eAAAyC,OACPuH,EAASE,OAAS,WAAa,YAEjCtC,IAA0C,OAArC9D,aAAaC,QAAQ,YAAuB,MAAQ,MAAM9D,SAAA,EAE/DC,EAAAA,EAAAA,KAAA,MAAIoC,MAAO,CAACiF,SAAS,QAAQtH,UAC3BC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,WAEvB5C,EAAAA,EAAAA,KAAA,SAAOF,UAAU,UAASC,UACxBC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,oBAEvB5C,EAAAA,EAAAA,KAACyQ,EAAAA,EAAS,CACRzP,YAAY,EACZK,YAAawL,GACbM,eAAgBL,GAChBxL,kBA/lBiByO,IAC3BjD,GAAiBiD,IAgmBP3O,kBAAmB4L,EACnB7L,eAAgB4L,EAChB9L,QAASgM,GACT/L,SAppBMyJ,IACZA,IACFC,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBY,WAAYd,EAAEwD,WAEhB9C,GAAiBzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdsJ,GAAc,IACjBwF,mBAAoB/F,EAAEwD,gBA+oBlBnO,EAAAA,EAAAA,KAAA,SAAO0T,IAAI,QAAQ5T,UAAU,eAAcC,UACzCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,cAEvB/C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAE3BC,EAAAA,EAAAA,KAAA,OAAK2T,MAAM,qDAAoD5T,UAC7DC,EAAAA,EAAAA,KAAA,SACE2T,MAAM,mBACN/D,KAAK,WACLhN,GAAG,SACHuB,KAAK,SACLwM,QAAS7G,EAASE,OAClB5J,SAAWuK,GACTZ,GAAWnI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIkI,GAAQ,IAAEE,OAAQW,EAAEG,OAAO6F,gBAIlD3Q,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAACgQ,EAAAA,GAAa,CACZE,UAAWpG,EAASE,OACpBiG,mBAAmB,EACnBrN,GAAG,YAEH9C,UAAS,gBAAAyC,OACPsI,EAAeS,UAAY,EACvB,eACA,eAENnL,MAAO+K,EAAeI,UACtB3I,YAAY,IACZvC,SAAU6K,EACVvD,IAAI,cAIV1H,EAAAA,EAAAA,KAAA,SAAO0T,IAAI,QAAQ5T,UAAU,eAAcC,UACzCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,sBAEvB5C,EAAAA,EAAAA,KAACgQ,EAAAA,GAEC,CACAE,UAAU,EACVD,mBAAmB,EACnB9L,KAAK,aACLrE,UAAU,eACVK,MACgC,IAA9B0K,EAAeY,WACXwC,SAASpD,EAAeY,YACxBwC,SACEnE,EAASE,OACLiE,SAASpD,EAAeY,YACtBwC,SAASpD,EAAeS,WAC1BT,EAAeU,aAErB,MACCzB,EAASE,OACNiE,SACEA,SAASpD,EAAeY,YACtBwC,SAASpD,EAAeS,YAE5BT,EAAeU,aAEzB5I,YAAY,IACZ+E,IAAI,SAGN1H,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,cAAcH,UAAU,eAAcC,UACnDC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,mBAEvB/C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAesC,MAAO,CAAEwO,aAAc,UAAW7Q,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAK2T,MAAM,qDAAoD5T,UAC7DC,EAAAA,EAAAA,KAAA,SACE2T,MAAM,mBACN/D,KAAK,WACLhN,GAAG,eACHuB,KAAK,eACLwM,QAAS7G,EAASG,cAClB7J,SAAWuK,GACTZ,GAAWnI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRkI,GAAQ,IACXG,cAAeU,EAAEG,OAAO6F,gBAKhC3Q,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,SAEEI,SAAUsK,EACVvK,MAAO0K,EAAeE,eACtBmF,UAAWpG,EAASG,cACpB2F,KAAK,OACLzL,KAAK,iBAELxB,YAAapB,GAAc,CAAEqB,GAAI,gBACjC9C,UAAU,yBACVsC,MAAO,CAAE0D,MAAO,kBAKvBgE,EAASE,SACRnK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBACf4H,IAA0C,OAArC9D,aAAaC,QAAQ,YAAuB,MAAQ,MAAM9D,SAAA,EAE7DC,EAAAA,EAAAA,KAAA,MAAIoC,MAAO,CAACiF,SAAS,QAAQtH,UAC3BC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,iBAEvB/C,EAAAA,EAAAA,MAAA,SAAOC,UAAU,UAASC,SAAA,EACxBC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,iBAAkB,QAEzC5C,EAAAA,EAAAA,KAACyQ,EAAAA,EAAS,CACRzP,YAAasL,EACbjL,YAAaA,GACb8L,eAAgBA,GAChB7L,kBAlqBayO,IACzB5C,GAAe4C,IAmqBH3O,kBAAmBA,EACnBD,eAAgBA,EAChBF,QAASA,GACTC,SAvtBEyJ,IACVA,IACFC,GAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,GAAc,IACjBc,YAAahB,EAAEwD,WAEjB9C,GAAiBzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdsJ,GAAc,IACjBM,aAAcb,EAAEwD,gBAitBVnO,EAAAA,EAAAA,KAAA,SAAO0T,IAAI,QAAQ5T,UAAU,eAAcC,UACzCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,cAEvB5C,EAAAA,EAAAA,KAACgQ,EAAAA,GAEC,CACAE,UAAU,EACVD,mBAAmB,EACnB9L,KAAK,aACLrE,UAAS,gBAAAyC,OACPsI,EAAeU,YAAcV,EAAeS,UAAY,EACpD,eACA,eAENnL,MAAO0K,EAAeU,YAAcV,EAAeS,UACnD3I,YAAY,IACZ+E,IAAI,SAIN1H,EAAAA,EAAAA,KAAA,SAAO0T,IAAI,QAAQ5T,UAAU,eAAcC,UACzCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,sBAEvB5C,EAAAA,EAAAA,KAACgQ,EAAAA,GAEC,CACAE,UAAU,EACVD,mBAAmB,EACnB9L,KAAK,cACLrE,UAAU,eACVK,MACE8N,SAASpD,EAAec,aACxBsC,SAASpD,EAAeU,aACxB0C,SAASpD,EAAeS,WAE1B5D,IAAI,MACJ/E,YAAY,OAGd3C,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,cAAcH,UAAU,eAAcC,UACnDC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,mBAEvB/C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAK2T,MAAM,qDAAoD5T,UAC7DC,EAAAA,EAAAA,KAAA,SACE2T,MAAM,mBACN/D,KAAK,WACLhN,GAAG,eACHuB,KAAK,eACLhE,MAAO2J,EAASI,aAEhByG,QAAS7G,EAASI,aAClB9J,SAAWuK,IACTZ,GAAWnI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRkI,GAAQ,IACXI,aAAcS,EAAEG,OAAO6F,iBAK/B3Q,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAAA,SAEEI,SAAUsK,EACVvK,MAAO0K,EAAeG,gBACtB4E,KAAK,OACLzL,KAAK,kBACL+L,UAAWpG,EAASI,aAEpBvH,YAAapB,GAAc,CAAEqB,GAAI,gBACjC9C,UAAU,yBACVsC,MAAO,CAAE0D,MAAO,mBAM1BjG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iDAAgDC,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UACE4P,KAAK,SACL9P,UAAU,kDACVsC,MAAO,CAAE0D,MAAO,SAChB+J,QAASL,EAAMzP,UAEfC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,cAEvB5C,EAAAA,EAAAA,KAAA,UAEE4P,KAAK,SACL9P,UAAU,8CACVsC,MAAO,CAAE0D,MAAO,SAChB+J,QA7oBGgB,KACRvE,GAAuBS,GAaxBjD,EAASE,SACXa,EAAemB,eAAiB7K,EAAeyB,IAEjDiI,EAAegB,gBAAkBS,EAAmB1J,GACpDiI,EAAekB,cAAgBgB,EAAiBnK,GAChDiI,EAAe+I,QAAQ,MACvBrQ,EAAAA,EACG6N,KACC3N,EAAAA,EAAOC,aAAe,wBAA0B0P,EAChDvI,EACA,CACElH,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CACNuN,SAAUvH,EAASE,OAAS,KAAO,KACnC6J,IAAKX,EACLY,IAAK3S,SAAAA,EAAgByB,GAAK,KAAO,QAItC2F,KAAMC,IAEL,IAAIxE,EAAOwE,EAAIxE,KACXwN,EAAMhJ,EAAIxE,KAAKyN,KACfpD,EAlFIA,KACZ,MAAMhO,EAAO,IAAI6L,KAAKmC,GACtB,IAAIC,EAAa,GAAA/L,OAAMlC,EAAKkO,cAAa,KAAAhM,OAAIiM,OAC3CnO,EAAKoO,WAAa,GAClBC,SAAS,EAAG,KAAI,KAAAnM,OAAIiM,OAAOnO,EAAKsO,WAAWD,SAAS,EAAG,MACzD,MAAME,EAAQvO,EAAKwO,WACbC,EAAUzO,EAAK0O,aAErB,IAAIC,EADSJ,GAAS,GAAK,KAAO,KAElC,MAAMK,EAAiBL,EAAQ,IAAM,GAC/BM,EAAmBJ,EAAU,GAAK,IAAMA,EAAUA,EASxD,MARyB,YAArBxP,EAAS,GAAGe,MACdqM,IAAAA,OAAc,MACdsC,EAAKJ,GAAS,GAAK,MAAQ,MAC3BN,EAAgB5B,IAAO2B,GAAGc,OAAO,kBAEjCzC,IAAAA,OAAc,MAGV,GAANnK,OAAU+L,EAAa,KAAA/L,OAAI0M,EAAc,KAAA1M,OAAI2M,EAAgB,KAAA3M,OAAIyM,IA+DrD3O,CAAKX,IACTgS,EAAW9N,aAAaC,QAAQ,YAEhC8B,EAAU,GAkDd,GA/CEA,EADe,OAAb+L,EACK,SAAAnP,OACL+J,EAAmB9J,aAAY,uFAAAD,OAE/BsI,EAAeU,YAAc,EAAI,WAAa,UAAS,iBAAAhJ,OAEvDsI,EAAeU,YAAc,IAAMe,EAAmB7J,WAAcoI,EAAeU,aAAc,EAAI,MAAO,OAAM,0BAAAhJ,OAElH+J,EAAmB6B,QAAU7B,EAAmB6B,SAAW7B,EAAmB6B,QAAU7B,EAAmBf,aAAc,EAAI,KAAM,MAAK,sBAAAhJ,OAExIsI,EAAeiB,kBAAoB,GAAE,cAAAvJ,OAC1B8L,EAAC,6CACQ,OAAbqD,EACF,QAAAnP,OACL+J,EAAmB9J,aAAY,+EAAAD,OAE/BsI,EAAeU,YAAc,EAAI,QAAU,UAAS,gBAAAhJ,OAEpDsI,EAAeU,YAAc,IAAMe,EAAmB7J,WAAcoI,EAAeU,aAAc,EAAI,MAAO,OAAM,uBAAAhJ,OAElH+J,EAAmB6B,QAAU7B,EAAmB6B,SAAW7B,EAAmB6B,QAAU7B,EAAmBf,aAAc,EAAI,KAAM,MAAK,gBAAAhJ,OAExIsI,EAAeiB,kBAAoB,GAAE,cAAAvJ,OAC1B8L,EAAC,gDACQ,OAAbqD,EACF,QAAAnP,OACL+J,EAAmB9J,aAAY,qEAAAD,OAE/BsI,EAAeU,YAAc,EAAI,SAAW,QAAO,gBAAAhJ,OAEnDsI,EAAeU,YAAc,IAAMe,EAAmB7J,WAAcoI,EAAeU,aAAc,EAAI,MAAO,OAAM,sBAAAhJ,OAElH+J,EAAmB6B,QAAU7B,EAAmB6B,SAAW7B,EAAmB6B,QAAU7B,EAAmBf,aAAc,EAAI,KAAM,MAAK,cAAAhJ,OAExIsI,EAAeiB,kBAAoB,GAAE,eAAAvJ,OACzB8L,EAAC,uCAEL,0BAEuB,IAA/B/B,EAAmByB,SAErBV,GAAe,CACbC,YAAahB,EAAmB8B,gBAAkB,GAClDzI,QAASA,IAGbgE,GAAiB/H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI0K,GAAuBzB,IAC9ChB,GAAejI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAImL,GAAgB,IAAE6E,QAASvD,GAAMxD,IAClDf,EAASE,OAAQ,CACnB,IAAIgI,EAAO,CAAEK,SAAU/F,EAAmB9J,cACtC0P,EAAK,CAAEG,SAAUtF,EAAiBvK,cAClC4P,EAAM,CAAEC,SAAUlR,EAAeqB,cACrCgP,EAAIQ,MAAIpQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4P,EAAIQ,MAAS1F,GAAuB0F,GACpDR,EAAIU,IAAEtQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4P,EAAIU,IAAOnF,GAAqBmF,GAC9CV,EAAIY,KAAGxQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4P,EAAIY,KAAQjR,GAAmBiR,GAC9C/I,EAAYiJ,GACVA,EAAYC,IAAKC,GACXA,EAAOR,KAAKpP,KAAOoB,EAAKyN,KAAKO,KAAK+B,gBACpCnS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAKyN,MAEvBe,IAGXtJ,EAAgBoJ,GACdA,EAAYC,IAAKC,GACXA,EAAO5P,KAAOoB,EAAKyO,kBAAkB7P,IACvChB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAKyO,mBACnBD,EAAO5P,KAAOoB,EAAK0O,mBAAmB9P,IAC/ChB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAK0O,oBACnBF,EAAO5P,KAAOoB,EAAK2O,iBAAiB/P,IAC7ChB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAK2O,kBAEvBH,GAGb,KAAO,CACL,IAAIR,EAAO,CAAEK,SAAU/F,EAAmB9J,cACtC0P,EAAK,CAAEG,SAAUtF,EAAiBvK,cACtCgP,EAAIQ,MAAIpQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4P,EAAIQ,MAAS1F,GAAuB0F,GACpDR,EAAIU,IAAEtQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ4P,EAAIU,IAAOnF,GAAqBmF,GAC9C7I,EAAYiJ,GACVA,EAAYC,IAAKC,GACfA,EAAOR,KAAKpP,KAAOoB,EAAKyN,KAAKO,KAAK+B,gBAAcnS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvC4Q,GAAWxO,EAAKyN,MACrBe,IAGRtJ,EAAgBoJ,GACdA,EAAYC,IAAKC,GACXA,EAAO5P,KAAOoB,EAAK0O,mBAAmB9P,IACxChB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAK0O,oBACnBF,EAAO5P,KAAOoB,EAAK2O,iBAAiB/P,IAC7ChB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY4Q,GAAWxO,EAAK2O,kBAEvBH,IAGXpR,EAAkB,MAClBmL,EAAsB,MACtBS,EAAoB,KACtB,CACA1D,EAAU,CACRwH,SAAU,UACVC,KAAM,UACNC,OAAOhR,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,qCAC5BqO,mBAAmB,EACnBC,MAAO,MAGTtG,EAAkB,CAChBgB,QAAShI,aAAaC,QAAQ,eAC9BgI,gBAAiB,KACjBN,YAAa,EACbO,iBAAkB,KAClBC,cAAe,KACfT,UAAW,EACXP,eAAgB,KAChBiB,eAAgB,KAChBN,WAAY,EACZV,gBAAiB,KACjBiB,eAAe,IAAIC,MAAOC,gBAG5Bd,EAAkB,CAChBE,YAAa,EACbC,aAAc,EACdF,UAAW,EACXG,WAAY,EACZC,WAAY,EACZC,YAAa,IAEf5B,EAAY,CACVC,QAAQ,EACRC,eAAe,EACfC,cAAc,IAEhB9I,EAAkB,MAClBmL,EAAsB,MACtBS,EAAoB,QAErBtE,MAAOiC,IAENrB,EAAU,CACRwH,SAAU,UACVC,KAAM,QACNC,OAAOhR,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,0BAC5BqO,mBAAmB,EACnBC,MAAO,SA7LX5H,EAAU,CACRwH,SAAU,UACVC,KAAM,QACNC,OACEhR,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,iDAEvBqO,mBAAmB,EACnBC,MAAO,OAooBenR,UAEhBC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,gBAGxB8G,IACC7J,EAAAA,EAAAA,MAAA,SAAOC,UAAU,kBACjB4H,IAA0C,OAArC9D,aAAaC,QAAQ,YAAuB,MAAQ,MAAM9D,SAAA,EAE7DC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAI+S,MAAM,MAAK7S,SAAA,CACZ,KACDC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,OAAQ,QAE/B/C,EAAAA,EAAAA,MAAA,MAAI+S,MAAM,MAAK7S,SAAA,CACZ,KACDC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,aAEvB/C,EAAAA,EAAAA,MAAA,MAAI+S,MAAM,MAAK7S,SAAA,CACZ,KACDC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,eAEvB/C,EAAAA,EAAAA,MAAA,MAAI+S,MAAM,MAAK7S,SAAA,CACZ,KACDC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,qBAI3B/C,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAI4S,MAAM,MAAK7S,SAAC,OAChBC,EAAAA,EAAAA,KAAA,MAAAD,SAAK2J,EAAelH,gBACpBxC,EAAAA,EAAAA,KAAA,MAAIoC,MAAO,CAAE+E,MAAO,OAAQpH,SACzB2J,EAAe6B,YAAc7B,EAAejH,aAE/CzC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAG6P,QAASA,IAxvBF/B,KAC1B,GAA2B,IAAvBA,EAAWC,QAAe,CAC5B,IACIC,EADA0D,EAAW9N,aAAaC,QAAQ,YAIlCmK,EADe,OAAb0D,EACO,cAAAnP,OAAiBuL,EAAWtL,aAAY,wFAAwF,aAAY,iBAAAD,OAAgBuL,EAAWxC,UAAY,IAAMwC,EAAWrL,WAAYqL,EAAWxC,WAAY,EAAI,MAAO,OAAM,0BAAA/I,OAAyBmH,EAAeyE,QAAUL,EAAWK,QAAO,sBAAA5L,OAAqBuL,EAAW/C,gBAAkB,GAAE,cAAAxI,OAAauL,EAAW8D,QAAO,6CAEpY,OAAbF,EACE,QAAAnP,OAAWuL,EAAWtL,aAAY,6EAA6E,SAAQ,gBAAAD,OAAeuL,EAAWxC,UAAY,IAAMwC,EAAWrL,WAAYqL,EAAWxC,WAAY,EAAI,MAAO,OAAM,uBAAA/I,OAAsBuL,EAAWK,QAAUL,EAAWK,QAASL,EAAWxC,WAAY,EAAI,MAAO,OAAM,cAAA/I,OAAauL,EAAW/C,gBAAkB,GAAE,cAAAxI,OAAauL,EAAW8D,QAAO,uCAEzY,OAAbF,EACE,QAAAnP,OAAWuL,EAAWtL,aAAY,gEAAgE,SAAQ,gBAAAD,OAAeuL,EAAWxC,UAAY,IAAMwC,EAAWrL,WAAYqL,EAAWxC,WAAY,EAAI,MAAO,OAAM,sBAAA/I,OAAqBuL,EAAWK,QAAUL,EAAWK,QAASL,EAAWxC,WAAY,EAAI,MAAO,OAAM,kBAAA/I,OAAiBuL,EAAW/C,gBAAkB,GAAE,eAAAxI,OAAcuL,EAAW8D,QAAO,oCAI3Y,QAAArP,OAAWuL,EAAWtL,aAAY,oEAAoE,SAAQ,gBAAAD,OAAeuL,EAAWxC,UAAY,IAAMwC,EAAWrL,WAAYqL,EAAWxC,WAAY,EAAI,MAAO,OAAM,sBAAA/I,OAAqBuL,EAAWK,QAAUL,EAAWK,QAASL,EAAWxC,WAAY,EAAI,MAAO,OAAM,cAAA/I,OAAauL,EAAW/C,gBAAkB,GAAE,eAAAxI,OAAcuL,EAAW8D,QAAO,uCAItZvE,GAAe,CACbC,YAAaQ,EAAWM,gBAAkB,GAC1CzI,QAASqI,GAEb,GAguBkC6E,CAAmBnJ,GAAgB3J,UACnDC,EAAAA,EAAAA,KAAA,OACE8S,IAAKC,EACLC,IAAI,WACJlT,UAAU,gBACVsC,MAAO,CAAE0D,MAAO,kBAKxBjG,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAI4S,MAAM,MAAK7S,SAAC,OAChBC,EAAAA,EAAAA,KAAA,MAAAD,SAAK6J,EAAapH,gBAClBxC,EAAAA,EAAAA,KAAA,MAAIoC,MAAO,CAAE+E,MAAO,SAAUpH,SAC3B6J,EAAa0B,UAAY1B,EAAanH,aAEzCzC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAG6P,QAASA,IAryBN/B,KACtB,GAA2B,IAAvBA,EAAWC,QAAe,CAC5B,IACIC,EADA0D,EAAW9N,aAAaC,QAAQ,YAIlCmK,EADe,OAAb0D,EACO,cAAAnP,OAAiBuL,EAAWtL,aAAY,wFAAwF,UAAS,iBAAAD,OAAgBuL,EAAWxC,UAAY,IAAMwC,EAAWrL,WAAYqL,EAAWvC,aAAc,EAAI,MAAO,OAAM,0BAAAhJ,OAAyBuL,EAAWK,QAAUL,EAAWK,SAAWF,SAASvE,EAAeyE,SAAWF,SAASH,EAAWxC,YAAa,EAAI,KAAM,MAAK,sBAAA/I,OAAqBuL,EAAW/C,gBAAkB,GAAE,cAAAxI,OAAauL,EAAW8D,QAAO,6CAEtd,OAAbF,EACE,QAAAnP,OAAWuL,EAAWtL,aAAY,6EAA6E,QAAO,gBAAAD,OAAeuL,EAAWxC,UAAY,IAAMwC,EAAWrL,WAAaqL,EAAWvC,aAAc,EAAI,MAAO,OAAM,uBAAAhJ,OAAsBuL,EAAWK,QAAUL,EAAWK,SAAWF,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,YAAa,EAAI,KAAM,MAAK,cAAA/I,OAAauL,EAAW/C,gBAAkB,GAAE,cAAAxI,OAAauL,EAAW8D,QAAO,qCAG/b,QAAArP,OAAWuL,EAAWtL,aAAY,gEAAgE,QAAO,gBAAAD,OAAeuL,EAAWxC,UAAY,IAAMwC,EAAWrL,WAAYqL,EAAWvC,aAAc,EAAI,MAAO,OAAM,sBAAAhJ,OAAqBmH,EAAeyE,QAAUL,EAAWK,SAAYF,SAASH,EAAWK,SAAWF,SAASH,EAAWxC,YAAa,EAAI,KAAM,MAAK,kBAAA/I,OAAiBuL,EAAW/C,gBAAkB,GAAE,eAAAxI,OAAcuL,EAAW8D,QAAO,oCAUrcvE,GAAe,CACbC,YAAaQ,EAAWM,gBAAkB,GAC1CzI,QAASqI,GAEb,GA2wBkCH,CAAejE,GAAc7J,UAC7CC,EAAAA,EAAAA,KAAA,OACE8S,IAAKC,EACLC,IAAI,WACJlT,UAAU,gBACVsC,MAAO,CAAE0D,MAAO,8BAYxC,C,wDCtoCA,MAAM8C,EAAgBC,GACbA,aAAM,EAANA,EAAQC,iBAEF,SAASkL,EAAe5U,GAAM,MAAHA,GACtBmK,EAAAA,EAAAA,KAAlB,MACO0K,EAAcC,IAAmBtU,EAAAA,EAAAA,aAClC,MAAEuU,EAAK,QAAEC,IAAY/J,EAAAA,EAAAA,IAAa1F,GAAUA,EAAMwP,QACjDE,EAAMC,IAAU1U,EAAAA,EAAAA,WAAS,IACzB2U,EAAQC,IAAa5U,EAAAA,EAAAA,aAErB6U,EAAWC,IAAgB9U,EAAAA,EAAAA,UAAS8N,OAAOiH,WAAa,MACxD3L,EAAwB4L,IAA6BhV,EAAAA,EAAAA,WAAS,IAC/D,SAAEN,EAAQ,OAAE6K,EAAM,QAAEC,IAAYC,EAAAA,EAAAA,IAAa1F,GAAUA,EAAMrF,WAC5D8J,EAASC,IAAczJ,EAAAA,EAAAA,UAAS,KAChC+M,EAASC,IAAchN,EAAAA,EAAAA,aACvBiV,EAAWC,IAAgBlV,EAAAA,EAAAA,UAAS8M,QACpCqI,EAAYC,IAAiBpV,EAAAA,EAAAA,WAAS,IAAIsM,MAAOC,gBACjD8I,EAAUC,IAAetV,EAAAA,EAAAA,YA+C1ByN,EAAiBpG,IAAoC,IAAnC,YAAEqG,EAAc,GAAE,QAAE3H,GAASsB,EACnD,MAAMsG,EAAmBC,mBAAmB7H,GACtC8H,EAAe,yBAAAlL,OAA4B+K,EAAW,UAAA/K,OAASgL,GAErEG,OAAOC,SAASC,KAAOH,GAGnBoF,EAAsB/E,IAC1B,GAAgC,IAA5BA,EAAWkE,KAAKjE,QAAe,CAEjC,IAAIzB,EAAmBwB,EAAWkE,KAC9BN,EAAW9N,aAAaC,QAAQ,YAEhC8B,EAAU,GAEU,IAADwP,EAAvB,GAAiB,OAAbzD,EACF/L,EAAO,SAAApD,OAAY+J,EAAmB+F,SAAQ,uFAAA9P,OAC5CuL,EAAWkE,KAAKhI,OAAS,EAAI,WAAa,UAAS,iBAAAzH,OAEnDqG,EAAakF,EAAWkE,KAAKhI,QAAU,IAAMsC,EAAmB7J,WAAaqL,EAAWkE,KAAKhI,QAAS,EAAI,MAAO,OAAM,0BAAAzH,OAEvHqG,EAAakF,EAAWK,QAAQ6D,KAAK7D,SAAWL,EAAWK,QAAQ6D,KAAK7D,SAAS,EAAG,KAAM,KAAI,sBAAA5L,OAE9FuL,EAAWkE,KAAKL,aAAe,GAAE,cAAApP,OACtBlC,GACE,QAAf8U,EAAArH,EAAWkE,YAAI,IAAAmD,OAAA,EAAfA,EAAiB9U,OAAQyN,EAAWsH,cACrC,kDACM,GAAiB,OAAb1D,EAAmB,CAAC,IAAD2D,EAC5B1P,EAAO,QAAApD,OAAW+J,EAAmB+F,SAAQ,+EAAA9P,OAC3CuL,EAAWkE,KAAKhI,OAAS,EAAI,QAAU,UAAS,gBAAAzH,OAEhDqG,EAAakF,EAAWkE,KAAKhI,QAAU,IAAMsC,EAAmB7J,WAAYqL,EAAWkE,KAAKhI,QAAS,EAAI,MAAO,OAAM,uBAAAzH,OAEtHqG,EAAakF,EAAWK,QAAQ6D,KAAK7D,SAAWL,EAAWK,QAAQ6D,KAAK7D,SAAS,EAAG,KAAM,KAAI,gBAAA5L,OAE9FuL,EAAWkE,KAAKL,aAAe,GAAE,cAAApP,OACtBlC,GACI,QAAfgV,EAAAvH,EAAWkE,YAAI,IAAAqD,OAAA,EAAfA,EAAiBhV,OAAQyN,EAAWsH,cACrC,+CACH,MAAO,GAAiB,OAAb1D,EAAmB,CAAC,IAAD4D,EAC5B3P,EAAO,QAAApD,OAAW+J,EAAmB+F,SAAQ,qEAAA9P,OAC3CuL,EAAWkE,KAAKhI,OAAS,EAAI,SAAW,QAAO,gBAAAzH,OAE/CqG,EAAakF,EAAWkE,KAAKhI,QAAU,IAAMsC,EAAmB7J,WAAYqL,EAAWkE,KAAKhI,QAAS,EAAI,MAAO,OAAM,sBAAAzH,OAEtHqG,EAAakF,EAAWK,QAAQ6D,KAAK7D,SAAWL,EAAWK,QAAQ6D,KAAK7D,SAAS,EAAG,KAAM,KAAI,cAAA5L,OAE9FuL,EAAWkE,KAAKL,aAAe,GAAE,eAAApP,OACrBlC,GACG,QAAfiV,EAAAxH,EAAWkE,YAAI,IAAAsD,OAAA,EAAfA,EAAiBjV,OAAQyN,EAAWsH,cACrC,sCACH,MACEzP,EAAU,0BAGZ0H,EAAe,CACbC,YAAaQ,EAAWkE,KAAK5D,gBAAkB,GAC/CzI,QAASA,GAEb,GAEI4P,EAAoBzH,IACxB,GAA8B,IAA1BA,EAAWoE,GAAGnE,QAAe,CAC/B,IAAI2D,EAAW9N,aAAaC,QAAQ,YAChCyI,EAAmBwB,EAAWoE,GAE9BvM,EAAU,GAEU,IAAD6P,EAAvB,GAAiB,OAAb9D,EACF/L,EAAO,SAAApD,OAAY+J,EAAmB+F,SAAQ,uFAAA9P,OAC5CuL,EAAWoE,GAAGlI,OAAS,EAAI,aAAe,UAAS,iBAAAzH,OAEnDqG,EAAakF,EAAWoE,GAAGlI,QAAU,IAAMsC,EAAmB7J,UAAS,0BAAAF,OAEvEqG,EAAakF,EAAWK,QAAQ+D,GAAG/D,SAAUL,EAAWK,QAAQ+D,GAAG/D,SAAS,EAAG,KAAM,KAAI,sBAAA5L,OAEzFuL,EAAWoE,GAAGP,aAAe,GAAE,cAAApP,OACpBlC,GACE,QAAfmV,EAAA1H,EAAWkE,YAAI,IAAAwD,OAAA,EAAfA,EAAiBnV,OAAQyN,EAAWsH,cACrC,kDACM,GAAiB,OAAb1D,EAAmB,CAAC,IAAD+D,EAC5B9P,EAAO,QAAApD,OAAW+J,EAAmB+F,SAAQ,+EAAA9P,OAC3CuL,EAAWoE,GAAGlI,OAAS,EAAI,QAAU,UAAS,gBAAAzH,OAE9CqG,EAAakF,EAAWoE,GAAGlI,QAAU,IAAMsC,EAAmB7J,UAAS,uBAAAF,OAGvEqG,EAAakF,EAAWK,QAAQ+D,GAAG/D,SAAWL,EAAWK,QAAQ+D,GAAG/D,SAAS,EAAG,KAAM,KAAI,gBAAA5L,OAE1FuL,EAAWoE,GAAGP,aAAe,GAAE,cAAApP,OACpBlC,GACI,QAAfoV,EAAA3H,EAAWkE,YAAI,IAAAyD,OAAA,EAAfA,EAAiBpV,OAAQyN,EAAWsH,cACrC,+CACH,MAAO,GAAiB,OAAb1D,EAAmB,CAAC,IAADgE,EAC5B/P,EAAO,QAAApD,OAAW+J,EAAmB+F,SAAQ,qEAAA9P,OAC3CuL,EAAWoE,GAAGlI,OAAS,EAAI,SAAW,QAAO,gBAAAzH,OAE7CqG,EAAakF,EAAWoE,GAAGlI,QAAU,IAAMsC,EAAmB7J,UAAS,sBAAAF,OAEvEqG,EAAakF,EAAWK,QAAQ+D,GAAG/D,SAAWL,EAAWK,QAAQ+D,GAAG/D,SAAS,EAAI,KAAM,KAAI,cAAA5L,OAE3FuL,EAAWoE,GAAGP,aAAe,GAAE,eAAApP,OACnBlC,GACG,QAAfqV,EAAA5H,EAAWkE,YAAI,IAAA0D,OAAA,EAAfA,EAAiBrV,OAAQyN,EAAWsH,cACrC,sCACH,MACEzP,EAAU,0BAGZ0H,EAAe,CACbC,YAAaQ,EAAWoE,GAAG9D,gBAAkB,GAC7CzI,QAASA,GAEb,GAEItF,EAAQgO,IACZ,MAAMhO,EAAO,IAAI6L,KAAKmC,GAEtB,IAAIC,EAAa,GAAA/L,OAAMlC,EAAKkO,cAAa,KAAAhM,OAAIiM,OAC3CnO,EAAKoO,WAAa,GAClBC,SAAS,EAAG,KAAI,KAAAnM,OAAIiM,OAAOnO,EAAKsO,WAAWD,SAAS,EAAG,MACzD,MAAME,EAAQvO,EAAKwO,WACbC,EAAUzO,EAAK0O,aAErB,IAAIC,EADSJ,GAAS,GAAK,KAAO,KAElC,MAAMK,EAAiBL,EAAQ,IAAM,GAC/BM,EAAmBJ,EAAU,GAAK,IAAMA,EAAUA,EASxD,MARyB,YAArBxP,EAAS,GAAGe,MACdqM,IAAAA,OAAc,MACdsC,EAAKJ,GAAS,GAAK,MAAQ,MAC3BN,EAAgB5B,IAAO2B,GAAGc,OAAO,kBAEjCzC,IAAAA,OAAc,MAGV,GAANnK,OAAU+L,EAAa,KAAA/L,OAAI0M,EAAc,KAAA1M,OAAI2M,EAAgB,KAAA3M,OAAIyM,KAoF5D2G,EAASC,KAAchW,EAAAA,EAAAA,aACvBiW,GAAWC,KAAgBlW,EAAAA,EAAAA,WAAS,IAEpCsL,GAAgBG,KAAqBzL,EAAAA,EAAAA,UAAS,CACnD2L,YAAa,KACbC,aAAc,KACdF,UAAW,KACXG,WAAY,KACZC,WAAY,KACZC,YAAa,QAER7B,GAAUC,KAAenK,EAAAA,EAAAA,UAAS,CACvCoK,QAAQ,EACRC,eAAe,EACfC,cAAc,KAETW,GAAgBD,KAAqBhL,EAAAA,EAAAA,UAAS,CACnDgM,QAAShI,aAAaC,QAAQ,eAC9BgI,gBAAiB,KACjBN,YAAa,EACbC,aAAa,EACbM,iBAAkB,KAClBC,cAAe,KACfT,UAAW,EACXG,WAAW,EACXV,eAAgB,KAChBiB,eAAgB,KAChBN,WAAY,EACZC,YAAY,EACZX,gBAAiB,KACjBiB,cAAe,QAEV9K,GAAgBC,KAAqBxB,EAAAA,EAAAA,aACrCmN,GAAkBC,KAAuBpN,EAAAA,EAAAA,aACzC0M,GAAoBC,KAAyB3M,EAAAA,EAAAA,aAC7CwT,GAAmB2C,KAAwBnW,EAAAA,EAAAA,UAAS,IACpDsT,GAAQC,KAAavT,EAAAA,EAAAA,UAAS,MAC/BoW,GAAeC,IAAS,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC3BtB,GAAqBE,EAAIjE,KAAKpP,IAC9BkT,IAAa,GACbF,GAAWK,GACX9C,GAAU8C,EAAI7D,IAAM,KAAO,MAC3B/G,IAAiBzJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdsJ,IAAc,IACjBK,YAAqB,QAAV2K,EAAED,EAAIjE,YAAI,IAAAkE,OAAA,EAARA,EAAUlM,OACvBwB,aAAyB,QAAb2K,EAAEF,EAAI9H,eAAO,IAAAgI,OAAA,EAAXA,EAAanE,KAC3B1G,UAAiB,QAAR8K,EAAEH,EAAI/D,UAAE,IAAAkE,OAAA,EAANA,EAAQpM,OACnByB,WAAuB,QAAb4K,EAAEJ,EAAI9H,eAAO,IAAAkI,OAAA,EAAXA,EAAanE,GACzBxG,WAAmB,QAAT4K,EAAEL,EAAI7D,WAAG,IAAAkE,OAAA,EAAPA,EAAStM,OACrB2B,YAAasK,aAAG,EAAHA,EAAK7D,OAEpBrI,GAAY,CACVC,SAAQiM,EAAI7D,IACZnI,eAAe,EACfC,cAAc,IAGhBU,IAAiBhJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACdiJ,IAAc,IACjBe,QAASqK,EAAIjE,KAAKsF,KAClBzL,gBAAiBoK,EAAIjE,KAAKuF,QAC1B/L,aAAayK,EAAI9H,QAAQ6D,KAAK7D,QAC9B5C,YAAa0K,EAAIjE,KAAKhI,OACtB8B,iBAAkBmK,EAAIjE,KAAKwF,YAC3BzL,cAAekK,EAAI/D,GAAGqF,QACtBjM,UAAW2K,EAAI/D,GAAGlI,OAClByB,WAAWwK,EAAI9H,QAAQ+D,GAAG/D,QAC1BpD,eAAgBkL,EAAI/D,GAAGsF,YACvBxL,eAAuB,QAATuK,EAAEN,EAAI7D,WAAG,IAAAmE,OAAA,EAAPA,EAASgB,QACzB5L,YAAYsK,SAAY,QAATO,EAAHP,EAAK9H,eAAO,IAAAqI,GAAK,QAALC,EAAZD,EAAcpE,WAAG,IAAAqE,OAAd,EAAHA,EAAmBtI,QAC/BzC,WAAmB,QAATgL,EAAET,EAAI7D,WAAG,IAAAsE,OAAA,EAAPA,EAAS1M,OACrBgB,gBAAwB,QAAT2L,EAAEV,EAAI7D,WAAG,IAAAuE,OAAA,EAAPA,EAASa,YAC1BvL,cAAegK,EAAIjE,KAAK3R,QAE1Be,GAAkB,CAChBwB,GAAW,QAATgU,EAAEX,EAAI7D,WAAG,IAAAwE,OAAA,EAAPA,EAASW,QACb/U,aAAqB,QAATqU,EAAEZ,EAAI7D,WAAG,IAAAyE,OAAA,EAAPA,EAASxE,SACvBjE,eAAuB,QAAT0I,EAAEb,EAAI7D,WAAG,IAAA0E,OAAA,EAAPA,EAAS1I,eACzBL,QAAgB,QAATgJ,EAAEd,EAAI7D,WAAG,IAAA2E,OAAA,EAAPA,EAAShJ,QAClBI,QAAoB,QAAb6I,EAAEf,EAAI9H,eAAO,IAAA6I,OAAA,EAAXA,EAAa5E,IACtB3P,UAAkB,QAATwU,EAAEhB,EAAI7D,WAAG,IAAA6E,OAAA,EAAPA,EAASxU,YAEtB8J,GAAsB,CACpB3J,GAAIqT,EAAIjE,KAAKuF,QACb/U,aAAcyT,EAAIjE,KAAKK,SACvBjE,eAAwB,QAAV8I,EAAEjB,EAAIjE,YAAI,IAAAkF,OAAA,EAARA,EAAU9I,eAC1BL,QAAiB,QAAVoJ,EAAElB,EAAIjE,YAAI,IAAAmF,OAAA,EAARA,EAAUpJ,QACnBI,QAAS8H,EAAI9H,QAAQ6D,KACrBvP,UAAWwT,EAAIjE,KAAKvP,YAEtBuK,GAAoB,CAClBpK,GAAIqT,EAAI/D,GAAGqF,QACX/U,aAAcyT,EAAI/D,GAAGG,SACrBjE,eAAsB,QAARgJ,EAAEnB,EAAI/D,UAAE,IAAAkF,OAAA,EAANA,EAAQhJ,eACxBL,QAAe,QAARsJ,EAAEpB,EAAI/D,UAAE,IAAAmF,OAAA,EAANA,EAAQtJ,QACjBI,QAAS8H,EAAI9H,QAAQ+D,GACrBzP,UAAWwT,EAAI/D,GAAGzP,aAIhBgV,GAAuB,CAC3B,CACEtT,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBACd2X,SAAWzB,GAAQA,EAAIjE,KAAKK,SAC5BjQ,MAAO,CACLwE,QAAS,WACT+Q,eAAgB,OAChB9Q,UAAW,WAIf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBACd2X,SAAWzB,GAAQrN,EAAaqN,EAAIjE,KAAKhI,SAE3C,CACE7F,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eACd2X,SAAWzB,GAAQA,EAAI/D,GAAGG,UAE5B,CACElO,MAAMnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,SAAC,cAC3C2X,SAAWzB,GAAQrN,EAAaqN,EAAI/D,GAAGlI,QACvC5H,MAAO,CACLyE,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,SAAC,gBAC3C2X,SAAWzB,GAAQA,EAAIjE,KAAKwF,YAE5BpV,MAAO,CACLyE,UAAW,WAIf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,uBACd2X,SAAWzB,GAASA,EAAI7D,IAAM6D,EAAI7D,IAAIC,SAAW,QAEnD,CACElO,MAAMnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,SAAC,sBAC3C2X,SAAWzB,GAAQrN,EAAaqN,EAAI7D,IAAM6D,EAAI7D,IAAIpI,OAAS,GAE3D5H,MAAO,CACLyE,UAAW,WAIf,CACE1C,MACEnE,EAAAA,EAAAA,KAAA,UACEoC,MAAO,CAAEwV,SAAU,QAASpE,SAAU,QAAS1N,MAAO,SAAU/F,SACjE,iBAIH2X,SAAWzB,IAAG,IAAA4B,EAAA,OAAKxX,GAAa,QAARwX,EAAA5B,EAAIjE,YAAI,IAAA6F,OAAA,EAARA,EAAUxX,OAAQ4V,EAAIjE,KAAKoD,eAEnDhT,MAAO,CACLwV,SAAU,kBACVpE,SAAU,WAIVsE,GAAW,CACf,CACE3T,MACEnE,EAAAA,EAAAA,KAAA,UACEoC,MAAO,CAAEwV,SAAU,QAASpE,SAAU,QAAS1N,MAAO,SAAU/F,UAEhEC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,mBAGzB8U,SAAWzB,IAAG,IAAA8B,EAAAC,EAAA,OAAK3X,GAAa,QAAR0X,EAAA9B,EAAIjE,YAAI,IAAA+F,OAAA,EAARA,EAAU1X,QAAgB,QAAZ2X,EAAI/B,EAAIjE,YAAI,IAAAgG,OAAA,EAARA,EAAU5C,gBAEpDhT,MAAO,CACLwV,SAAU,kBACVpE,SAAU,UAGd,CACErP,MACEnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,UAClCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,iBAGzB8U,SAAWzB,IACTjW,EAAAA,EAAAA,KAAA,QAAM0H,IAAI,MAAK3H,SAAE6I,EAAaqN,EAAI7D,IAAM6D,EAAI7D,IAAIpI,OAAS,KAG3D5H,MAAO,CACLyE,UAAW,WAKf,CACE1C,MACEnE,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,yBAGzB8U,SAAWzB,GAASA,EAAI7D,IAAM6D,EAAI7D,IAAIC,SAAW,QAEnD,CACElO,MACEnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,UAClCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,kBAGzB8U,SAAWzB,IAAG,IAAAgC,EAAA,OAAa,QAAbA,EAAKhC,EAAIjE,YAAI,IAAAiG,OAAA,EAARA,EAAUT,aAC7BpV,MAAO,CACLyE,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,UACZC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,eAEfsV,KAAOjC,IACLjW,EAAAA,EAAAA,KAAA,KAAG6P,QAASA,IAAM0F,EAAiBU,GAAKlW,UACtCC,EAAAA,EAAAA,KAAA,OACE8S,IAAKC,EACLC,IAAI,WACJlT,UAAU,gBACVsC,MAAO,CAAE0D,MAAO,YAItB1D,MAAO,CACLwV,SAAU,QACVpE,SAAU,QACV3M,UAAW,WAGf,CACE1C,MACEnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,UAClCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,gBAGxB8U,SAAWzB,IAAG,IAAAkC,EAAA,OACbnY,EAAAA,EAAAA,KAAA,QAAM0H,IAAI,MAAK3H,SAAE6I,EAAmB,QAAPuP,EAAClC,EAAI/D,UAAE,IAAAiG,OAAA,EAANA,EAAQnO,WAExC5H,MAAO,CACLyE,UAAW,WAIf,CACE1C,MACEnE,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,iBAGzB8U,SAAWzB,IAAG,IAAAmC,EAAA,OAAU,QAAVA,EAAInC,EAAI/D,UAAE,IAAAkG,OAAA,EAANA,EAAQ/F,WAE5B,CACElO,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,UACZC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,eAEfsV,KAAOjC,IACLjW,EAAAA,EAAAA,KAAA,KAAG6P,QAASA,IAAMgD,EAAmBoD,GAAKlW,UACxCC,EAAAA,EAAAA,KAAA,OACE8S,IAAKC,EACLC,IAAI,WACJlT,UAAU,gBACVsC,MAAO,CAAE0D,MAAO,YAItB1D,MAAO,CACLwV,SAAU,QACVpE,SAAU,QACV3M,UAAW,WAGf,CACE1C,MACEnE,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,kBAIzB8U,SAAWzB,IAAG,IAAAoC,EAAA,OACZrY,EAAAA,EAAAA,KAAA,QAAM0H,IAAI,MAAK3H,SAAE6I,EAAqB,QAATyP,EAACpC,EAAIjE,YAAI,IAAAqG,OAAA,EAARA,EAAUrO,YAI5C,CACE7F,MACEnE,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,mBAGzB8U,SAAWzB,IAAG,IAAAqC,EAAA,OAAa,QAAbA,EAAKrC,EAAIjE,YAAI,IAAAsG,OAAA,EAARA,EAAUjG,UAC7BjQ,MAAO,CACLwE,QAAS,WACT+Q,eAAgB,OAChB9Q,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,OAAMC,UAC1BC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,WAEzBsV,KAAOjC,IACLjW,EAAAA,EAAAA,KAAA,KAAG6P,QAASA,IAAMmG,GAAYC,GAAKlW,UACjCC,EAAAA,EAAAA,KAAA,OACE8S,IAAKyF,EACLvF,IAAI,OACJlT,UAAU,YACVsC,MAAO,CAAE0D,MAAO,YAItB1D,MAAO,CACLwV,SAAU,OACVpE,SAAU,OACV3M,UAAW,YAIX2R,GAAgB,CACpB,CACErU,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBACd2X,SAAWzB,GAAQA,EAAI/D,GAAGG,SAC1BjQ,MAAO,CACLwE,QAAS,WACT+Q,eAAgB,OAChB9Q,UAAW,WAIf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBACd2X,SAAWzB,GAAQrN,EAAaqN,EAAIjE,KAAKhI,SAI3C,CACE7F,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eACd2X,SAAWzB,IAAG,IAAAwC,EAAAC,EAAA,OACZzC,EAAI/D,GAAGqF,QAAgC,QAAzBkB,EAAGxC,EAAI/D,GAAGqF,QAAQA,eAAO,IAAAkB,OAAA,EAAtBA,EAAwBtU,KAAa,QAATuU,EAAGzC,EAAI/D,UAAE,IAAAwG,OAAA,EAANA,EAAQlW,eAE5D,CACE2B,MAAMnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,cAAaC,SAAC,cACtC2X,SAAWzB,GAAQrN,EAAaqN,EAAIjE,KAAKhI,QACzC5H,MAAO,CACLyE,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,SAAC,gBAC3C2X,SAAWzB,GAAQA,EAAIjE,KAAKwF,YAC5BpV,MAAO,CACLyE,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,uBACd2X,SAAWzB,GAASA,EAAI7D,IAAM6D,EAAI7D,IAAIC,SAAW,QAEnD,CACElO,MAAMnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,SAAC,sBAC3C2X,SAAWzB,GAAQrN,EAAaqN,EAAI7D,IAAM6D,EAAI7D,IAAIpI,OAAS,GAC3D5H,MAAO,CACLyE,UAAW,WAGf,CACE1C,MACEnE,EAAAA,EAAAA,KAAA,UACEoC,MAAO,CAAEwV,SAAU,QAASpE,SAAU,QAAS1N,MAAO,SAAU/F,SACjE,iBAIH2X,SAAWzB,IAAG,IAAA0C,EAAA,OAAKtY,GAAa,QAARsY,EAAA1C,EAAIjE,YAAI,IAAA2G,OAAA,EAARA,EAAUtY,OAAQ4V,EAAIjE,KAAKoD,iBAGjDwD,GAAiB,CACrB,CACEzU,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBACd2X,SAAWzB,GAAQA,EAAIjE,KAAKK,SAC5BjQ,MAAO,CACLwV,SAAU,QACVpE,SAAU,QACV3M,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBACd2X,SAAWzB,GACTrN,EAAaqN,EAAIjE,KAAKhI,QAAU,IAAMiM,EAAIjE,KAAKvP,UACjDL,MAAO,CACL+E,MAAO,MACPyQ,SAAU,QACVpE,SAAU,QACV3M,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aACdmY,KAAOjC,IACLjW,EAAAA,EAAAA,KAAA,KAAG6P,QAASA,IAAMgD,EAAmBoD,GAAKlW,UACxCC,EAAAA,EAAAA,KAAA,OACE8S,IAAKC,EACLC,IAAI,WACJlT,UAAU,gBACVsC,MAAO,CAAE0D,MAAO,YAItB1D,MAAO,CACLwV,SAAU,QACVpE,SAAU,QACV3M,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eACd2X,SAAWzB,IAAG,IAAA4C,EAAA,OAAW,QAAXA,EAAK5C,EAAI/D,UAAE,IAAA2G,OAAA,EAANA,EAAQxG,UAC3BjQ,MAAO,CACLwV,SAAU,QACVpE,SAAU,QACV3M,UAAW,SAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cACd2X,SAAWzB,IAAG,IAAA6C,EAAA,OAAKlQ,EAAmB,QAAPkQ,EAAC7C,EAAI/D,UAAE,IAAA4G,OAAA,EAANA,EAAQ9O,QAAU,IAAMiM,EAAIjE,KAAKvP,WACjEL,MAAO,CACL+E,MAAO,QACPyQ,SAAU,QACVpE,SAAU,QACV3M,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aACdmY,KAAOjC,IACLjW,EAAAA,EAAAA,KAAA,KAAG6P,QAASA,IAAM0F,EAAiBU,GAAKlW,UACtCC,EAAAA,EAAAA,KAAA,OACE8S,IAAKC,EACLC,IAAI,WACJlT,UAAU,gBACVsC,MAAO,CAAE0D,MAAO,YAItB1D,MAAO,CACLwV,SAAU,QACVpE,SAAU,QACV3M,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBACd2X,SAAWzB,GAAQA,EAAIjE,KAAKwF,YAC5BpV,MAAO,CACLwV,SAAU,QACVpE,SAAU,QACV3M,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,uBACd2X,SAAWzB,GAASA,EAAI7D,IAAM6D,EAAI7D,IAAIC,SAAW,OACjDjQ,MAAO,CACLwV,SAAU,QACVpE,SAAU,QACV3M,UAAW,SAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,sBACd2X,SAAWzB,GACTrN,EAAaqN,EAAI7D,IAAM6D,EAAI7D,IAAIpI,OAAS,GAAK,IAAMiM,EAAIjE,KAAKvP,UAC9DL,MAAO,CACLwV,SAAU,QACVpE,SAAU,QACV3M,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,QAAOC,SAAC,iBAChC2X,SAAWzB,IAAG,IAAA8C,EAAA,OAAK1Y,GAAa,QAAR0Y,EAAA9C,EAAIjE,YAAI,IAAA+G,OAAA,EAARA,EAAU1Y,OAAQ4V,EAAIjE,KAAKoD,eACnDhT,MAAO,CACLwV,SAAU,QACVpE,SAAU,QACV3M,UAAW,WAGf,CACE1C,MAAMnE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,OAAMC,SAAC,SAC/BmY,KAAOjC,IACLjW,EAAAA,EAAAA,KAAA,KAAG6P,QAASA,IAAMmG,GAAYC,GAAKlW,UACjCC,EAAAA,EAAAA,KAAA,OACE8S,IAAKyF,EACLvF,IAAI,OACJlT,UAAU,YACVsC,MAAO,CAAE0D,MAAO,YAItB1D,MAAO,CACLwV,SAAU,OACVpE,SAAU,OACV3M,UAAW,YAKXmS,IAAUC,EAAAA,EAAAA,SAAQ,IAEiB,OAArCrV,aAAaC,QAAQ,aACgB,OAArCD,aAAaC,QAAQ,YAEdiU,GAELrD,EAE+C,UAA1C7Q,aAAaC,QAAQ,iBACxB+U,GACAnB,GAGCe,GACN,CAAC/D,KAEGyE,GAAWC,KAAgBvZ,EAAAA,EAAAA,UAAS,IACpC0E,GAAS8U,KAAcxZ,EAAAA,EAAAA,WAAS,IAChCyZ,GAAaC,KAAkB1Z,EAAAA,EAAAA,UAAS,IACxC2Z,GAASC,KAAc5Z,EAAAA,EAAAA,UAAS,IAoCjC6Z,GAAe,CACnBC,WAAY,CAERC,aAAY3Z,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,mBACnCgX,UAAU5Z,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,aAC/BiX,MAAM7Z,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,SAC3BkX,MAAM9Z,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,YAItBmX,GAAaC,KAAkBpa,EAAAA,EAAAA,WAAS,IAC1Cqa,GAAYC,KAAiBta,EAAAA,EAAAA,UAAS,KACtCua,GAAkBC,KAAuBxa,EAAAA,EAAAA,UAAS,KAClDya,GAASC,KAAc1a,EAAAA,EAAAA,WAAS,IAChCka,GAAMS,KAAW3a,EAAAA,EAAAA,UAAS,GAE3B4a,IAAeC,EAAAA,EAAAA,aAAYnX,UAC/B0W,IAAe,GACf,IACE,MAAM5K,QAAiB7L,EAAAA,EAAMC,IAC3BC,EAAAA,EAAOC,aAAe,uBACtB,CACEC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CACN4W,IAAK,KACL9O,QAASqI,aAAY,EAAZA,EAAcrR,GACvB+X,SAAU,EACV9F,UAAWA,GAAaE,EACxBpI,QAASA,GAAWsI,EACpBV,OAAQA,SAAAA,EAAQ/J,OAAS+J,EAAS,WAKxC2F,GAAc9K,EAASpL,KAAKA,MAC5BoW,GAAoBhL,EAASpL,KAAKA,KAAK4W,MAAM,EAtB/B,KAuBdN,GAAWlL,EAASpL,KAAKA,KAAKwG,OAvBhB,IAwBdwP,IAAe,EACjB,CAAE,MAAOzV,GAEPyV,IAAe,EACjB,GACC,CAAC/F,EAAcY,EAAWlI,EAAS4H,IAEhCsG,GAAkBA,MAClBd,IAAgBM,KAEpBL,IAAe,GACfc,WAAW,KACT,MAAMC,EAAWjB,GAAO,EAClBkB,EAAcf,GAAWW,MAAM,EArCvB,GAqC0BG,GAExCX,GAAoBY,GACpBT,GAAQQ,GACRT,GAAWU,EAAYxQ,OAASyP,GAAWzP,QAC3CwP,IAAe,IACd,OA+CCiB,IAAeR,EAAAA,EAAAA,aAAY,KAC/B,IAAKpG,GAAS0F,KAAgBM,GAAS,OAEvC,MAAMa,EAAQhY,SAASiY,cAAc,cACrC,IAAKD,EAAO,OAEZ,MAAM,UAAEE,EAAS,aAAEC,EAAY,aAAEC,GAAiBJ,EAC7BG,GAAgBD,EAAYE,GAAgB,KAG/DT,MAED,CAACxG,EAAO0F,GAAaM,GAASQ,MAEjC1U,EAAAA,EAAAA,WAAU,KACR,MAAM+U,EAAQhY,SAASiY,cAAc,cACrC,GAAID,GAAS7G,EAEX,OADA6G,EAAMK,iBAAiB,SAAUN,IAC1B,IAAMC,EAAMM,oBAAoB,SAAUP,KAElD,CAAC5G,EAAO4G,MAEX9U,EAAAA,EAAAA,WAAU,KACJkO,EACFmG,KApEuBlX,OAAOwW,EAAM2B,KACtCzB,IAAe,GACf,IACE,MAAM5K,QAAiB7L,EAAAA,EAAMC,IAC3BC,EAAAA,EAAOC,aAAe,uBACtB,CACEC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CACN8H,QAASqI,aAAY,EAAZA,EAAcrR,GACvBkX,KAAMA,EACNP,QAASkC,EACTd,SAAU,EACV9F,UAAWA,GAAaE,EACxBpI,QAASA,GAAWsI,EACpBV,OAAQA,SAAAA,EAAQ/J,OAAS+J,EAAS,WAKpCnF,EAASpL,KAAKA,KAAKwG,QAAU,GAC/BnB,EAAW+F,EAASpL,KAAKA,MACzBmV,GAAa/J,EAASpL,KAAK0X,SAE3BrS,EAAW,IACX8P,GAAa,IAEfa,IAAe,EACjB,CAAE,MAAOzV,GAEPyV,IAAe,EACjB,GAsCE2B,CAAmBtC,GAAaE,KAEjC,CAAClF,EAAOgF,GAAaE,GAAS5M,EAASkI,EAAWZ,EAAcM,EAAQiG,KAG3E,MAAMoB,GAAeA,KACnB/b,EAAAA,EAAAA,MAACgc,EAAAA,EAAG,CAACxZ,QAAQ,OAAOsV,eAAe,SAASrV,WAAW,SAASwZ,EAAG,EAAE/b,SAAA,EACnEC,EAAAA,EAAAA,KAAC+b,EAAAA,EAAgB,CAAC/T,KAAM,MACxBhI,EAAAA,EAAAA,KAAC6b,EAAAA,EAAG,CAACG,GAAI,EAAEjc,SAAC,gCAIhBoG,EAAAA,EAAAA,WAAU,KAjLQ7C,OAAOwW,EAAM2B,KAC7BrC,IAAW,GACX,IACE,MAAMhK,QAAiB7L,EAAAA,EAAMC,IAC3BC,EAAAA,EAAOC,aAAe,uBACtB,CACEC,QAAS,CACPyE,cAAc,UAAD7F,OAAYqB,aAAaC,QAAQ,YAEhDC,OAAQ,CACN4W,IAAIrG,GAAS,KACbzI,QAASqI,aAAY,EAAZA,EAAcrR,GACvBkX,KAAMA,EACNP,QAASkC,EACTd,SAAU,EACV9F,UAAWA,GAAaE,EACxBpI,QAASA,GAAWsI,EACpBV,OAAQA,SAAAA,EAAQ/J,OAAS+J,EAAS,WAIpCnF,EAASpL,KAAKA,KAAKwG,QAAQ,GAC7BnB,EAAW+F,EAASpL,KAAKA,MACzBmV,GAAa/J,EAASpL,KAAK0X,SAE3BrS,EAAW,IACX8P,GAAa,IAEfC,IAAW,EACb,CAAE,MAAO7U,GAEP6U,IAAW,EACb,GAkJA7J,CAAU8J,GAAaE,KACtB,CAACF,GAAaE,GAAS5M,EAASkI,EAAWZ,EAAcM,EAAOF,IACnE,MAAOlL,GAAaD,KAAkBtJ,EAAAA,EAAAA,UAAS,KAIzC,cAAE2B,KAAkBC,EAAAA,EAAAA,KAC1B,OACE3B,EAAAA,EAAAA,MAAA,OACE6H,IAA0C,OAArC9D,aAAaC,QAAQ,YAAuB,MAAQ,MACzD/D,UAAU,wBACVsC,MAAO,CAAE0D,MAAO,OAChB+J,QAAUlF,IAEiB,+BAAvBA,EAAEG,OAAOhL,WACT6K,EAAEG,OAAOhL,WAIXC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UACE4P,KAAK,SACL9P,UAAU,wBACVsC,MAAO,CAAE0D,MAAO,SAChB+J,QAASA,KACP+E,GAA0B,IAC1B7U,UAEFC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,WAEvB/C,EAAAA,EAAAA,MAAA,OACEC,UAAU,6GACVsC,MAAO,CAAE6Z,UAAW,qBAAsBlc,SAAA,EAE1CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAAkBC,UAACC,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,uBAEtD/C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yEAAwEC,SAAA,EACnFC,EAAAA,EAAAA,KAACkc,EAAAA,EAAgB,CACf9V,SAASpG,EAAAA,EAAAA,KAACmc,EAAAA,EAAM,CAACxL,QAAS0D,EAAOjU,SAAWuK,GAAM2J,EAAS3J,EAAEG,OAAO6F,WACpEyL,OAAOpc,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,QAC5ByZ,GAAI,CAAEzE,SAAU,QAEpB5X,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,UACzCC,EAAAA,EAAAA,KAACmQ,EAAAA,EAAmB,CAClB5Q,cAAesV,EACfxV,YAhgCS+Q,IACnB,GAAIA,EAAY,CACd,MAAM,KAAE7P,EAAI,MAAEE,EAAK,IAAEC,GAAQ0P,EAGvBC,GAFgBC,IAAAA,YAAoB/P,EAAME,EAAOC,GAE3C,IAAIwL,MACFsC,OAAO6B,EAAIxB,YAAYH,SAAS,EAAG,KACjCF,OAAO6B,EAAItB,cAAcL,SAAS,EAAG,KAGrD,MAAM6B,EAAI,IAAIrE,KAQRsE,EAPO,IAAItE,KACfkE,EAAW7P,KACX6P,EAAW3P,MAAQ,EACnB2P,EAAW1P,IACX6P,EAAE1B,WACF0B,EAAExB,cAEmB5C,cACvB6I,EAAcxE,EAChB,GA6+BUhR,OAAOQ,EAAAA,EAAAA,KAACiG,EAAAA,EAAgB,CAACrD,GAAG,SAC5BjD,eAAgBmV,EAChBpV,YAAamV,OAGjB7U,EAAAA,EAAAA,KAAC6F,EAAAA,EAAO,CACN5E,QAASkT,EACThT,eAAgB8S,EAChB7S,kBAAmB8S,QAGvBlU,EAAAA,EAAAA,KAAA,SACNF,UAAU,6BACVsC,MAAO,CAAE0D,MAAO,OAAQ0N,SAAU,SAClC5D,KAAK,SACLxP,SA3DoBuK,IAClB6J,EAAU7J,EAAEG,OAAO3K,QA2DrBA,MAAOoU,EACP5R,YAAapB,GAAc,CAAEqB,GAAI,WACjC,aAAW,cAiBNyR,GACCrU,EAAAA,EAAAA,KAACsc,EAAAA,GAAS,CACRtD,QAASA,GACThV,KAAMmW,GACNoC,gBAAiBxC,GACjByC,SAAO,EACPC,YAAU,EACVC,kBAAgB,EAChBC,UAAQ,EACRC,mBAAmB5c,EAAAA,EAAAA,KAAC4b,GAAY,IAChCxZ,MAAO,CACLuN,OAAQ,sBACRD,UAAW,WAIf1P,EAAAA,EAAAA,KAACsc,EAAAA,GAAS,CACRtD,QAASA,GACThV,KAAMoF,EACNmT,gBAAiBxC,GACjByC,SAAO,EACPC,YAAU,EACVC,kBAAgB,EAChBhD,YAAU,EACVmD,kBAAgB,EAChBC,oBAAqB5D,GACrB6D,aAvJkBjD,IACxBR,GAAeQ,IAuJTkD,oBA7JoB1Z,MAAO2Z,EAAYnD,KAC7CN,GAAWyD,GACX3D,GAAeQ,IA4JTL,aAAcA,MAGlBzZ,EAAAA,EAAAA,KAAC+I,EAAiB,CAChBK,QAASA,EACTC,WAAYA,EACZL,uBAAwBA,EACxBE,eAAgBA,GAChBC,YAAaA,GACbF,YAAaA,IAAM2L,GAA0B,MAE/C5U,EAAAA,EAAAA,KAACiT,EAAkB,CACjBC,OAAQA,GACRC,UAAWA,GACXtI,eAAgBA,GAChBD,kBAAmBA,GACnBd,SAAUA,GACVC,YAAaA,GACbmB,eAAgBA,GAChBG,kBAAmBA,GACnBiB,mBAAoBA,GACpBS,iBAAkBA,GAClB5L,eAAgBA,GAChBC,kBAAmBA,GACnBmL,sBAAuBnL,GACvB4L,oBAAqBA,GACrBoG,kBAAmBA,GACnBC,kBAAmB0C,GACnBJ,QAASA,EACTG,aAAcF,GACdpG,MAAOA,IAAMsG,IAAa,GAC1B1M,QAASA,EACTC,WAAYA,EACZL,uBAAwB6M,GACxB3M,eAAgBA,GAChBC,YAAaA,OAIrB,C,oGChpCe,SAAS+T,EAAmB9d,GAAmG,IAAlG,YAAEC,EAAW,cAACE,EAAa,MAAEC,EAAK,eAACG,EAAc,YAACD,EAAW,UAACD,EAAS,MAACuF,EAAM,kBAAiB5F,EACzI,MAAM,SAAEE,EAAQ,OAAE6K,EAAM,QAAEC,IAAYC,EAAAA,EAAAA,IAAa1F,GAAUA,EAAMrF,UAQnE,OACEO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA2BsC,MAAO,CAACP,OAAOmD,GAAOjF,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,GAAGH,UAAU,kBAAiBC,SAAEP,KAC/CQ,EAAAA,EAAAA,KAACE,EAAAA,gBACD,CACEJ,UAAU,oBACVL,UAAWA,EACXU,MAAOT,EACP2c,GAAI,CACFhW,WAAY,0BACZ,wBAAyB,CACvBA,WAAY,uCAGhB8W,WAAY,CACV/a,MAAO,CACLiE,WAAY,gBAGhB+W,YAAa,CACX/W,WAAY,4BAEZ,+BAAgC,CAC9BA,WAAY,wCAEd,kCAAmC,CACjCA,WAAY,wCAEd,6BAA8B,CAC5BA,WAAY,wCAEd,+BAAgC,CAC9BA,WAAY,wCAEd,MAAO,CACLA,WAAY,yCAGhBjG,SA7CoBC,IAEpB,GADJV,EAAeU,GACF,MAANA,EAAW,CACd,MAAMC,EAAM,CAACC,KAAKF,EAAKG,GAAG,GAAGC,MAAMJ,EAAKG,GAAG,GAAG,EAAEE,IAAIL,EAAKG,GAAG,IAE9DnB,EAAYiB,EACV,GAwCAK,iBAAuC,YAArBrB,EAAS,GAAGe,KAAqB,qBAAuB,iBAC1EO,OAA6B,YAArBtB,EAAS,GAAGe,KAAqB,KAAO,KAEhDQ,aAAa,UACbC,YAAa,CAAEP,KAAM,KAAME,MAAO,GAAIC,IAAK,IAC3CK,YAAa,CAAER,KAAM,EAAGE,MAAO,EAAGC,IAAK,OAI/C,C,8FC7DA,MA8CA,EA9CiBtB,IAAyG,IAAxG,WAAC4B,GAAW,EAAK,KAACmD,EAAI,QAAElD,EAAO,KAAC2O,EAAI,SAAC1O,EAAQ,eAACC,EAAc,kBAACC,EAAiB,mBAACic,GAAmBje,EA0BlH,OACEY,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACL3B,MAAOgB,EACPf,SA7BgBe,IAClBC,EAAkBD,GAClBD,EAASC,IA4BPF,QAASA,EACTiB,eAAiBC,IACfnC,EAAAA,EAAAA,KAAA,OAAKoC,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAAWvC,UACpDC,EAAAA,EAAAA,KAAA,QAAAD,SAAA,GAAAwC,OAAUJ,EAAOK,aAAY,KAAAD,OAAIJ,EAAOM,eAE5CC,eAAiBP,GAAM,GAAAI,OAAQJ,EAAOK,aAAY,KAAAD,OAAIJ,EAAOM,WAC7DE,YAAY,YACZE,aAAW,EACX8E,WAAY,CAAE2V,SAlCEC,IAEpB1d,EAAAA,EAAAA,MAAC8H,EAAAA,EAAW2V,UAAQ1b,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK2b,GAAK,IAAAxd,SAAA,CAC3Bwd,EAAMxd,SACP6P,IAAO5P,EAAAA,EAAAA,KAAA,OACLoC,MAAO,CACLC,QAAS,OACTsV,eAAgB,SAChB/Q,QAAS,OACTqV,UAAW,oBACX7U,OAAQ,UACRd,gBAAiB,WAEnBuJ,QAASA,IAAIwN,GAAmB,GAAMtd,UAGtCC,EAAAA,EAAAA,KAAA,UAAAD,SAASoE,WAmBTrB,cAAY,M","sources":["pages/forms/Datepicker.js","pages/Transformations/ComboBoxT.js","pages/Redux/reportSlice.js","pages/forms/ListBox.js","pages/Transformations/ComboBoxTo.js","pages/Transformations/AddTransformation.js","pages/Transformations/EditTransformation.js","pages/Transformations/Transformations.js","pages/forms/Datepicker_customer.js","pages/forms/ComboBox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"jalaali-react-date-picker/lib/styles/index.css\";\r\nimport { InputDatePicker } from \"jalaali-react-date-picker\";\r\nimport moment, { months } from 'moment-timezone';\r\n\r\nexport default function Datepicker({ handle_date, settings,default_value ,lebal,onKeyDown}) {\r\n  const [selectedDay, setSelectedDay] = useState();\r\n  const handleDateChange = (date) => {\r\n    setSelectedDay(date);\r\n        if(date!=null){\r\n        const handl={year:date._a[0],month:date._a[1]+1,day:date._a[2]}\r\n      handle_date(handl);\r\n        }\r\n    };\r\n  return (\r\n    <div className=\"col-3 m-2 mt-3\"\r\n    >\r\n      <label htmlFor=\"\" className='p-0 m-0'>{lebal}</label>\r\n      <InputDatePicker\r\n      onKeyDown={onKeyDown}\r\n        value={selectedDay}\r\n        onChange={handleDateChange}\r\n        inputPlaceholder={settings[0].date === 'Persian' ? 'تاریخ را وارد کنید' : 'Enter the date'}\r\n        locale={settings[0].date === 'Persian' ? 'fa' : 'en'}\r\n        colorPrimary=\"#0fbcf9\"\r\n        maximumDate={{ year: 9999, month: 12, day: 31 }}\r\n        minimumDate={{ year: 1, month: 1, day: 1 }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\n\r\nconst Combo_Customer = ({ \r\n  isEditable = false, \r\n  options, \r\n  Onsearch, \r\n  selectedOption, \r\n  setSelectedOption, \r\n  searchQuery, \r\n  handleInputChange \r\n}) => {\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n    Onsearch(selectedOption);\r\n  };\r\n\r\n  const { formatMessage } = useIntl();\r\n\r\n    const customStyles = {\r\n      menuPortal: (base) => ({ ...base, zIndex: 9999,  ...( {\r\n        // fontSize: '0.1rem!important',\r\n      }) }),\r\n      // control: (provided, state) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem!important',\r\n      //   padding: '0',\r\n      //   minHeight: 'calc(0.5em + 0.5rem + 2px)',\r\n      //   borderRadius: '2px',\r\n      //   borderColor: state.isFocused ? '#2684FF' : '#ced4da',\r\n      //   boxShadow: state.isFocused ? '0 0 0 1px #2684FF' : 'none',\r\n      //   '&:hover': {\r\n      //     borderColor: state.isFocused ? '#2684FF' : '#adb5bd'\r\n      //   }\r\n      // }),\r\n      // input: (provided) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem',\r\n      //   margin: '0!important',\r\n      //   padding: '0!important',\r\n      // }),\r\n      // option: (provided, state) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem!important',\r\n      //   padding: '0',\r\n      //   backgroundColor: state.isSelected ? '#2684FF' : state.isFocused ? '#f8f9fa' : 'white',\r\n      //   color: state.isSelected ? 'white' : '#212529',\r\n      //   '&:active': {\r\n      //     backgroundColor: '#dee2e6'\r\n      //   }\r\n      // }),\r\n      // menu: (provided) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem',\r\n      //   zIndex: 10000000,\r\n      //   marginTop: '0.25rem'\r\n      // }),\r\n      // singleValue: (provided) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem'\r\n      // }),\r\n      // placeholder: (provided) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem',\r\n      //   color: '#6c757d'\r\n      // }),\r\n      // dropdownIndicator: (provided) => ({\r\n      //   ...provided,\r\n      //   padding: '0'\r\n      // }),\r\n      // clearIndicator: (provided) => ({\r\n      //   ...provided,\r\n      //   padding: '0rem'\r\n      // }),\r\n      // valueContainer: (provided) => ({\r\n      //   ...provided,\r\n      //   padding: '0'\r\n      // })\r\n    };\r\n\r\n  return (\r\n    <div className=\"w-100\">\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        inputValue={searchQuery}\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={options}\r\n        onInputChange={handleInputChange}\r\n        getOptionLabel={(option) => (\r\n          <div style={{ display: 'flex', alignItems: 'center' }} className='afgFont'>\r\n            <span>{`${option.account_name} ${option.moneyType}`}</span>\r\n          </div>\r\n        )}\r\n        getOptionValue={(option) => `${option.account_name} ${option.moneyType}`}\r\n        placeholder={formatMessage({ id: \"Search...\" })}\r\n        isClearable\r\n        isSearchable\r\n        isDisabled={isEditable}\r\n        styles={customStyles}\r\n        menuPortalTarget={document.body}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Combo_Customer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport Source from '../../Source';\r\n\r\n// اکشن برای دریافت گزارش‌ها از API\r\nexport const getReports = createAsyncThunk('reports/getReports', async () => {\r\n  const response = await axios.get(Source.getAddress() + '/api/belance', {\r\n    headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n    },\r\n    params: { query: 'search' },\r\n  });\r\n  return response.data;\r\n});\r\n\r\n// تعریف سلایس گزارش‌ها\r\nconst reportSlice = createSlice({\r\n  name: 'reports',\r\n  initialState: {\r\n    reports: [],\r\n    loading: false,\r\n    error: null,\r\n    statusr:null,\r\n  },\r\n  reducers: {\r\n    addReportToCache: (state, action) => {\r\n      // اضافه کردن یک گزارش جدید به کش\r\n      state.reports.push(action.payload);\r\n    },\r\n    updateReportInCache: (state, action) => {\r\n      // به‌روزرسانی یک گزارش در کش\r\n      const index = state.reports.findIndex((report) => report.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.reports[index] = action.payload;\r\n      }\r\n    },\r\n    deleteReportFromCache: (state, action) => {\r\n      // حذف یک گزارش از کش\r\n      state.reports = state.reports.filter((report) => report.id !== action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getReports.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n        state.statusr='loading'\r\n      })\r\n      .addCase(getReports.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.reports = action.payload;\r\n        state.statusr='succeeded'\r\n      })\r\n      .addCase(getReports.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n        state.statusr='rejected'\r\n      });\r\n  },\r\n});\r\n\r\n// اکشن‌های مربوط به عملیات CRUD\r\nexport const { addReportToCache, updateReportInCache, deleteReportFromCache } = reportSlice.actions;\r\n\r\n// خروجی ردیوسر سلایس\r\nexport default reportSlice.reducer;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport { ChevronDown } from 'lucide-react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\nconst ListBox = ({\r\n  isDisabled = false,\r\n  options = [],\r\n  selectedOption,\r\n  setSelectedOption,\r\n  width = '100%',\r\n}) => {\r\n  const { formatMessage, locale } = useIntl();\r\n  const isRTL = locale === 'fa'; // Assuming 'fa' is your Persian locale code\r\n  \r\n  const allUsersOption = { \r\n    name: <FormattedMessage id=\"All Users\" />, \r\n    id: 0 \r\n  };\r\n  \r\n  const updatedOptions = [allUsersOption, ...options];\r\n\r\n  useEffect(() => {\r\n    if (!selectedOption) {\r\n      setSelectedOption(allUsersOption);\r\n    }\r\n  }, [selectedOption, setSelectedOption, allUsersOption]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      backgroundColor: '#fff',\r\n      zIndex: 1,\r\n      borderRadius: '8px',\r\n      border: state.isFocused ? '2px solid #4f46e5' : '1px solid #d1d5db',\r\n      boxShadow: state.isFocused ? '0 0 5px rgba(79, 70, 229, 0.5)' : 'none',\r\n      '&:hover': {\r\n        border: '1px solid #4f46e5',\r\n      },\r\n      minHeight: '39px',\r\n      padding: '4px 8px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    menu: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      borderRadius: '8px',\r\n      boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',\r\n      overflow: 'hidden',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    option: (base, { isFocused, isSelected }) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      backgroundColor: isSelected ? '#4f46e5' : isFocused ? '#e0e7ff' : '#fff',\r\n      color: isSelected ? '#fff' : '#111827',\r\n      padding: isRTL ? '12px 16px 12px 8px' : '12px 8px 12px 16px',\r\n      cursor: 'pointer',\r\n      fontSize: '14px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      '&:active': {\r\n        backgroundColor: '#4338ca',\r\n      },\r\n    }),\r\n    singleValue: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      fontWeight: 'bold',\r\n      color: '#4f46e5',\r\n      fontSize: '14px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    placeholder: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      fontSize: '14px',\r\n      color: '#6b7280',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    dropdownIndicator: (base) => ({\r\n      ...base,\r\n      fontFamily:localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      padding: '8px',\r\n    }),\r\n    menuPortal: (base) => ({ ...base, zIndex: 10000 }),\r\n    input: (base) => ({\r\n      ...base,\r\n      fontFamily:localStorage.getItem(\"language\") !== \"en\" && \"'CustomFont1', sans-serif\",\r\n      textAlign: isRTL ? 'right' : 'left',\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`mt-3`} \r\n      style={{ width }}\r\n      dir={isRTL ? 'rtl' : 'ltr'}\r\n    >\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={updatedOptions}\r\n        getOptionLabel={(option) => option.name}\r\n        getOptionValue={(option) => option.id}\r\n        placeholder={formatMessage({ id: 'select.placeholder' }) || (isRTL ? 'انتخاب کنید...' : 'Select...')}\r\n        isClearable={false}\r\n        isSearchable={false}\r\n        isDisabled={isDisabled}\r\n        menuPortalTarget={document.body}\r\n        styles={customStyles}\r\n        components={{\r\n          DropdownIndicator: ({ innerProps }) => (\r\n            <div {...innerProps} className={isRTL ? 'pl-2 text-gray-500' : 'pr-2 text-gray-500'}>\r\n              <ChevronDown size={20} />\r\n            </div>\r\n          ),\r\n          ClearIndicator: null,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nListBox.propTypes = {\r\n  isDisabled: PropTypes.bool,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      name: PropTypes.node.isRequired,\r\n    })\r\n  ),\r\n  selectedOption: PropTypes.object,\r\n  setSelectedOption: PropTypes.func.isRequired,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nListBox.defaultProps = {\r\n  isDisabled: false,\r\n  options: [],\r\n  selectedOption: null,\r\n  width: '100%',\r\n};\r\n\r\nexport default ListBox;","import React from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport axios from 'axios';\r\nimport Source from '../../Source';\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport './Tstyle.css';\r\nimport { px } from 'framer-motion';\r\nimport { fontSize, height, width } from '@mui/system';\r\nconst Combo_Customer = ({ \r\n  isEditable = false, \r\n  options, \r\n  Onsearch, \r\n  selectedOption, \r\n  // readOnly, \r\n  setSelectedOption, \r\n  searchQuery, \r\n  handleInputChange \r\n}) => {\r\n  const handleChange = (sselectedOption) => {\r\n    setSelectedOption(sselectedOption);\r\n    // if(selectedOption){\r\n    if(sselectedOption){\r\n      console.log(sselectedOption)\r\n      axios.get(Source.getAddress()+'/api/commession',\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: { money: sselectedOption.moneyId }, // ارسال پارامتر جستجو به سرور\r\n      }\r\n    ).then((res)=>{\r\n        Onsearch((prev)=>res.data[0]);\r\n        // console.log(res);\r\n      })\r\n      .catch((er)=>{\r\n        // console.log(er);\r\n      });\r\n    }\r\n      \r\n    // }\r\n    // Onsearch(sselectedOption);\r\n  };\r\n\r\n//   const CustomMenuList = (props) => (\r\n//     <components.MenuList {...props}>\r\n//       {props.children}\r\n//       {type && (\r\n//         <div\r\n//           style={{\r\n//             display: \"flex\",\r\n//             justifyContent: \"center\",\r\n//             padding: \"10px\",\r\n//             borderTop: \"1px solid #eaeaea\",\r\n//             cursor: \"pointer\",\r\n//             backgroundColor: \"#f9f9f9\",\r\n//           }}\r\n//           onClick={() => setAddAccountModal(searchQuery)}\r\n//         >\r\n//           <strong>{name}</strong>\r\n//         </div>\r\n//       )}\r\n//     </components.MenuList>\r\n//   );\r\n\r\nconst customStyles = {\r\n  menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n  // سایر استایل‌ها در صورت نیاز...\r\n};\r\nconst { formatMessage } = useIntl();\r\n\r\n  // console.log(searchQuery);\r\n  return (\r\n    <div className=\"w-40\">\r\n      <Select\r\n        classNamePrefix=\"custom-select form-control-sm\"\r\n        inputValue={searchQuery}\r\n        value={selectedOption}\r\n        style={{padding: '0!important'}}\r\n        onChange={handleChange}\r\n        options={options}\r\n        onInputChange={handleInputChange}\r\n        getOptionLabel={(option) => (\r\n            <div     dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n            style={{ display: 'flex', alignItems: 'center' ,}}>\r\n              <span>{`${option.account_name} ${option.moneyType}`}</span>\r\n            </div>)}\r\n        getOptionValue={(option) => `${option.account_name} ${option.moneyType}`}\r\n        // placeholder=\"Search...\"\r\n        placeholder={formatMessage({ id: \"Search...\" })}\r\n        isClearable\r\n        // components={{ MenuList: CustomMenuList }}\r\n        isSearchable\r\n        isDisabled={isEditable}\r\n        menuPortalTarget={document.body} // انتقال منو به `body`\r\n        styles={customStyles} // تنظیم `z-index`\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Combo_Customer;","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\n// import Source from \"../Source\";\r\nimport axios from \"axios\";\r\n// import Swal from \"sweetalert2\";\r\n// import { showAlert } from \"../../warrper.js\";\r\nimport ComboBoxT from \"./ComboBoxT\";\r\nimport ComboBoxTo from \"./ComboBoxTo\";\r\nimport Source from \"../../Source\";\r\nimport { NumericFormat } from \"react-number-format\";\r\nimport { useModel } from \"react-model\";\r\nimport moment from \"moment-jalaali\";\r\nimport jalaali from \"jalaali-js\";\r\nimport Datepicker_Customer from \"../forms/Datepicker_customer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { useSelector, useDispatch } from 'react-redux';\r\nimport { getReports, updateReportInCache } from \"../Redux/reportSlice.js\";\r\nimport { getBelances, updateBelanceInCache } from \"../Redux/belanceSlice.js\";\r\nimport { getSettings } from \"../Redux/settingSlice.js\";\r\nimport Whatsupimg from \"../../assets/icon/whatsup.png\";\r\n// import { FormattedMessage } from \"react-intl\";\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\nimport { useShowAlert } from \"../../warrper\";\r\nconst formatNumber = (number) => {\r\n  return number?.toLocaleString(); // Formats number with thousand separators\r\n};\r\nexport default function AddTransformation({\r\n  AddTransformationModal,\r\n  closeDialog,\r\n  setOptionsFrom,\r\n  optionsFrom,\r\n  records,\r\n  setRecords,\r\n}) {\r\n\r\n  const showAlert = useShowAlert();\r\n  const dispatch = useDispatch();\r\n  const [tempRecordfrom, settempRecordfrom] = useState(null);\r\n  const [tempRecordto, settempRecordto] = useState(null);\r\n\r\n  const [Checkbox, setCheckbox] = useState({\r\n    amount: false,\r\n    Todescription: false,\r\n    Cdescription: false,\r\n  });\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n  const [Settings, Setsettings] = useState([]);\r\n  // console.log(settings);\r\n  useEffect(() => {\r\n    if (statuss !== \"succeeded\" && settings.length > 0) {\r\n      dispatch(getSettings());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (settings.length > 0) {\r\n      Setsettings(settings);\r\n    }\r\n  }, [settings]);\r\n\r\n  const handleform = (e) => {\r\n    setTransformation({\r\n      ...Transformation,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    if (Checkbox.Todescription && Checkbox.Cdescription) {\r\n      if (e.target.name === \"from_description\") {\r\n        setTransformation({\r\n          ...Transformation,\r\n          to_description: e.target.value,\r\n          com_description: e.target.value,\r\n        });\r\n      }\r\n    } else if (Checkbox.Todescription) {\r\n      if (e.target.name === \"from_description\") {\r\n        setTransformation({\r\n          ...Transformation,\r\n          to_description: e.target.value,\r\n        });\r\n      }\r\n    } else if (Checkbox.Cdescription) {\r\n      if (e.target.name === \"from_description\") {\r\n        setTransformation({\r\n          ...Transformation,\r\n          com_description: e.target.value,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    // console.log(e.target.id);\r\n    const formattedValue = e.target.value;\r\n    // Remove the thousand separators (commas)\r\n    const unformattedValue = formattedValue.replace(/,/g, \"\").replace(\"$\", \"\");\r\n\r\n    if (!Checkbox.amount) {\r\n      setFormattedValue({\r\n        ...formattedValue,\r\n        to_amount: e.target.value,\r\n        [e.target.id]: e.target.value,\r\n      });\r\n      setTransformation({\r\n        ...Transformation,\r\n        to_amount: unformattedValue,\r\n        [e.target.id]: unformattedValue,\r\n      });\r\n    } else {\r\n      setFormattedValue({\r\n        ...formattedValue,\r\n        [e.target.id]: e.target.value,\r\n      });\r\n      setTransformation({\r\n        ...Transformation,\r\n        [e.target.id]: unformattedValue,\r\n      });\r\n    }\r\n  };\r\n  const [formattedValue, setFormattedValue] = useState({\r\n    from_amount: null,\r\n    from_balance: null,\r\n    to_amount: null,\r\n    to_balance: null,\r\n    com_amount: null,\r\n    com_balance: null,\r\n  });\r\n\r\n  //\r\n  const [Transformation, setTransformation] = useState({\r\n    user_id: localStorage.getItem(\"userTokenid\"),\r\n    from_account_id: '',\r\n    from_amount: 0,\r\n    from_description: '',\r\n    to_account_id: '',\r\n    to_amount: 0,\r\n    to_description: '',\r\n    com_account_id: '',\r\n    com_amount: 0,\r\n    com_description: '',\r\n    date_creation: new Date().toISOString(),\r\n  });\r\n\r\n  // from account\r\n  const [searchQueryFrom, setSearchQueryFrom] = useState();\r\n  const [selectedOptionFrom, setSelectedOptionFrom] = useState();\r\n\r\n  // const [optionsFrom, setOptionsFrom] = useState();\r\n  const [msgDescription,setmsgDescription]=useState(false);\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  const [EndDate, setEndDate] = useState(moment());\r\n  const handle_date = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setTransformation({\r\n        ...Transformation,\r\n        date_creation: isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n\r\n  // const handleFrom = (e) => {\r\n  //   if (e) {\r\n  //     const filter = optionsFrom.filter(\r\n  //       (record) => record.type_id === e.type_id\r\n  //     );\r\n  //     setOptionsTo(filter);\r\n  //     setOptions(filter);\r\n  //     setTransformation({\r\n  //       ...Transformation,\r\n  //       from_balance: e.belance,\r\n  //     });\r\n  //     setFormattedValue({\r\n  //       ...formattedValue,\r\n  //       from_balance: e.belance,\r\n  //     });\r\n  //   }\r\n  // };\r\n  const handleSearchFrom = async (query) => {\r\n    if (query.length < 1) {\r\n      setOptionsFrom([]);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: { query: query }, // ارسال پارامتر جستجو به سرور\r\n      });\r\n      // setOptionsFrom(response.data);\r\n      const data = response.data;\r\n      // console.log(data);\r\n      // تبدیل داده‌ها به فرمت مناسب برای react-select\r\n      let formattedOptions = data;\r\n\r\n      if (formattedOptions && formattedOptions.length() === 0) {\r\n        if (query) {\r\n          // setAddItem({\r\n          //   ...AddItem,\r\n          //   temp_customer: query,\r\n          // });\r\n          setSelectedOptionFrom({ id: 0, name: query });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  const handleInputChangeFrom = (newValue) => {\r\n    setSearchQueryFrom(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    // handleSearchFrom(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  // to account\r\n  const [searchQueryTo, setSearchQueryTo] = useState();\r\n  const [selectedOptionTo, setSelectedOptionTo] = useState();\r\n  const [optionsTo, setOptionsTo] = useState();\r\n  const handleTo = (e) => {\r\n    if (e) {\r\n      setTransformation({\r\n        ...Transformation,\r\n        to_balance: e.belance,\r\n      });\r\n      setFormattedValue({\r\n        ...formattedValue,\r\n        to_balance_balance: e.belance,\r\n      });\r\n    }\r\n  };\r\n  // const handleSearchTo = async (query) => {\r\n  //   if (query.length < 3) {\r\n  //     setOptionsTo([]);\r\n  //     return;\r\n  //   }\r\n  //   try {\r\n  //     const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n  //       },\r\n  //       params: {\r\n  //         query: query,\r\n  //         money_id: selectedOptionFrom.type.id,\r\n  //       }, // ارسال پارامتر جستجو به سرور\r\n  //     });\r\n  //     // console.log(query);\r\n  //     const data = response.data;\r\n  //     // console.log(response);\r\n  //     // تبدیل داده‌ها به فرمت مناسب برای react-select\r\n  //     let formattedOptions = data;\r\n  //     setOptionsTo(formattedOptions);\r\n\r\n  //     if (formattedOptions && formattedOptions.length() === 0) {\r\n  //       if (query) {\r\n  //         // setAddItem({\r\n  //         //   ...AddItem,\r\n  //         //   temp_customer: query,\r\n  //         // });\r\n  //         setSelectedOptionTo({ id: 0, name: query });\r\n  //       }\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching data:\", error);\r\n  //   } finally {\r\n  //   }\r\n  // };\r\n  const handleInputChangeTo = (newValue) => {\r\n    setSearchQueryTo(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    // handleSearchTo(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n\r\n  // comsion\r\n  const [searchQuery, setSearchQuery] = useState();\r\n  // console.log(searchQuery);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [options, setOptions] = useState();\r\n  const handle = (e) => {\r\n    if (e) {\r\n      setTransformation({\r\n        ...Transformation,\r\n        com_balance: e.belance,\r\n      });\r\n      setFormattedValue({\r\n        ...formattedValue,\r\n        from_balance: e.belance,\r\n      });\r\n    }\r\n  };\r\n  const handleSearch = async (query) => {\r\n    if (query.length < 3) {\r\n      setOptions([]);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {\r\n          query: query,\r\n          money_id: selectedOptionFrom.type.id || \"false\",\r\n        }, // ارسال پارامتر جستجو به سرور\r\n      });\r\n      // console.log(query);\r\n      const data = response.data;\r\n      // console.log(response);\r\n      // تبدیل داده‌ها به فرمت مناسب برای react-select\r\n      let formattedOptions = data;\r\n      setOptions(formattedOptions);\r\n\r\n      // if (formattedOptions && formattedOptions.length() === 0) {\r\n      //   if (query) {\r\n      //     // setAddItem({\r\n      //     //   ...AddItem,\r\n      //     //   temp_customer: query,\r\n      //     // });\r\n      //     setSelectedOption({ id: 0, name: query });\r\n      //   }\r\n      // }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n    }\r\n  };\r\n  const handleInputChange = (newValue) => {\r\n    setSearchQuery(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    // handleSearch(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  // const dispatch = useDispatch();\r\n  const WhatsAppButton = ({ phoneNumber = \"\", message }) => {\r\n    const formattedMessage = encodeURIComponent(message);\r\n    const whatsappAppLink = `whatsapp://send?phone=${phoneNumber}&text=${formattedMessage}`;\r\n\r\n    // لینک پیش‌فرض وب واتساپ در صورتی که پروتکل whatsapp:// کار نکند\r\n    // const whatsappWebLink = `https://wa.me/${phoneNumber}?text=${formattedMessage}`;\r\n\r\n    // تلاش برای باز کردن اپلیکیشن واتساپ\r\n    window.location.href = whatsappAppLink;\r\n\r\n    // اگر لینک بالا اجرا نشد، بعد از 2 ثانیه واتساپ وب باز شود\r\n    // setTimeout(() => {\r\n    //   window.open(whatsappWebLink, \"_blank\");\r\n    // }, 2000);\r\n  };\r\n  const handlleWhatsup = (tempRecord) => {\r\n    // console.log(tempRecord);\r\n    if (tempRecord.whatsup === 1) {\r\n      let tomessege = \"not avilable\";\r\n      if (localStorage.getItem(\"language\") === \"en\") {\r\n        tomessege = `Dear ${\r\n          tempRecord.account_name\r\n        },\\n💼 Your recent transaction has been successfully recorded in the system.\\nType: ${\"Deposit\"} 💰${\r\n          parseInt(tempRecord.serial) > 0\r\n            ? \"\\nSerial: \" + (parseInt(tempRecord.serial) + 1) + \"🔖\"\r\n            : \"\"\r\n        }\\nAmount: ${\r\n          formatNumber(tempRecord.to_amount) + \" \" + tempRecord.moneyType +' 🟢'\r\n        } 💵\\nCurrent Balance: ${\r\n          formatNumber(parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount))+ ((parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount) >=0) ?\"🟢\" :'🔴')\r\n        } 📊\\nDescription: ${msgDescription ? tempRecord.to_description||\"\" :   tempRecord.from_description || \"\"} ✍\\nDate: ${date(\r\n          tempRecord.date_creation\r\n        )} 📅\\nThank you for choosing our services!`;\r\n      } else if (localStorage.getItem(\"language\") === \"pa\") {\r\n        tomessege = `ګرانو ${\r\n          tempRecord.account_name\r\n        },\\n💼 ستاسو وروستي معامله په برياليتوب سره په سیستم کي ثبت سوه.\\nډول: ${\"واریز\"} 💰${\r\n          parseInt(tempRecord.serial) > 0\r\n            ? \"\\nسریال نمبر: \" + (parseInt(tempRecord.serial) + 1) + \"🔖\"\r\n            : \"\"\r\n        }\\nمقدار: ${\r\n          formatNumber(tempRecord.to_amount) + \" \" + tempRecord.moneyType+((tempRecord.from_amount >=0) ?\" 🟢\" :' 🔴')\r\n        } 💵\\nاوسني بیلانس: ${\r\n          formatNumber(parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount)) + ((parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount) >=0) ?\"🟢\" :'🔴')\r\n        } 📊\\nتفصیل: ${msgDescription ? (tempRecord.to_description||\"\") :  ( tempRecord.from_description || \"\")} ✍\\nنېټه: ${date(\r\n          tempRecord.date_creation\r\n        )} 📅\\nزموږ د خدمتونو د انتخاب له امله مننه!`;\r\n      } else {\r\n        tomessege = `سلام ${\r\n          tempRecord.account_name\r\n        } عزیز،\\n💼 معامله اخیر شما با موفقیت در سیستم ثبت شده است.\\nنوع: ${\"واریز\"} 💰 ${\r\n          parseInt(tempRecord.serial) !== 0 ?\r\n          (\"\\nسریال نمبر: \" + (parseInt(tempRecord.serial) + 1) + \"🔖\") : \"\"\r\n        }\\nمقدار: ${\r\n          formatNumber(tempRecord.to_amount) + \" \" + tempRecord.moneyType+((tempRecord.from_amount >=0) ?\" 🟢\" :' 🔴')\r\n        } 💵\\nبیلانس فعلی: ${\r\n          formatNumber(parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount)) + ((parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount) >=0) ?\"🟢\" :'🔴')\r\n        } 📊\\nشرح: ${msgDescription ? tempRecord.to_description||\"\" :   tempRecord.from_description || \"\"} ✍\\nتاریخ: ${date(\r\n          tempRecord.date_creation\r\n        )} 📅\\nاز انتخاب خدمات ما سپاسگزاریم!`;\r\n      }\r\n      // console.log(tempRecord);\r\n      WhatsAppButton({\r\n        phoneNumber: tempRecord.whatsup_number || \"\",\r\n        message: tomessege,\r\n      });\r\n    }\r\n  };\r\n  // console.log(tempRecordfrom);\r\n  const handlleWhatsupfrom = (tempRecord) => {\r\n    // console.log(tempRecord);\r\n    if (tempRecord.whatsup === 1) {\r\n      let tomessege = \"\";\r\n      if (localStorage.getItem(\"language\") === \"da\") {\r\n        tomessege = `سلام ${\r\n          tempRecord.account_name\r\n        } عزیز،\\n💼 معامله اخیر شما با موفقیت در سیستم ثبت شده است.\\nنوع: ${\"برداشت\"} 💰${\r\n          parseInt(tempRecord.serial) > 0\r\n            ? \"\\nسریال نمبر: \" + (parseInt(tempRecord.serial) + 1) + \"🔖\"\r\n            : \"\"\r\n        }\\nمقدار: ${\r\n          formatNumber(tempRecord.to_amount) + \" \" + tempRecord.moneyType+' 🔴'\r\n        } 💵\\nبیلانس فعلی: ${\r\n          formatNumber(parseInt(tempRecord.belance) - parseInt(tempRecord.to_amount)) + ((parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount) >=0) ?\"🟢\" :'🔴')\r\n          // tempRecord.belance - parseInt(tempRecord.to_amount) + (tempRecord.belance - parseInt(tempRecord.from_amount) >=0) ?\"🟢\" :'🔴'\r\n          // parseInt(tempRecord.belance) \r\n        } 📊\\nشرح: ${tempRecord.to_description || \"\"} ✍\\nتاریخ: ${date(\r\n          tempRecord.date_creation\r\n        )} 📅\\nاز انتخاب خدمات ما سپاسگزاریم!`;\r\n      } else if (localStorage.getItem(\"language\") === \"en\") {\r\n        tomessege = `Dear ${tempRecord.account_name},\r\n        💼 Your recent transaction has been successfully recorded in the system.\r\n        Type: ${\"Deposit\"} 💰${\r\n          parseInt(tempRecord.serial) > 0\r\n            ? \"\\nSerial: \" + (parseInt(tempRecord.serialTo) + 1) + \"🔖\"\r\n            : \"\"\r\n        }\r\n        Amount: ${formatNumber(tempRecord.to_amount) + \" \" + tempRecord.moneyType+' 🔴'} 💵\r\n        Current Balance: ${\r\n          formatNumber(parseInt(tempRecord.belance) - parseInt(tempRecord.to_amount)) + ((parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount) >=0) ?\"🟢\" :'🔴')\r\n                } 📊\r\n        Description: ${tempRecord.to_description || \"\"} ✍\r\n        Date: ${date(tempRecord.date_creation)} 📅\r\n        Thank you for choosing our services!`;\r\n      } else {\r\n        tomessege = `ګرانو ${tempRecord.account_name},\r\n💼 ستاسو وروستي معامله په بریالیتوب سره په سیستم کي ثبت سوه.\r\nډول: ${\"واریز\"} 💰\r\n${\r\n  parseInt(tempRecord.serial) > 0\r\n    ? \"\\nسریال نمبر: \" + (parseInt(tempRecord.serial) + 1) + \"🔖\"\r\n    : \"\"\r\n}\r\nمقدار: ${formatNumber(tempRecord.to_amount) + \" \" + tempRecord.moneyType+' 🔴'} 💵\r\nاوسني بیلانس: ${\r\n          // parseInt(tempRecord.belance) + parseInt(tempRecord.from_amount)+ (parseInt(tempRecord.belance) - parseInt(tempRecord.from_amount) >=0) ?\"🟢\" :'🔴'\r\n          formatNumber(parseInt(tempRecord.belance) - parseInt(tempRecord.to_amount)) + ((parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount) >=0) ?\"🟢\" :'🔴')\r\n        } 📊\r\n          تفصیل: ${tempRecord.to_description || \"\"} ✍\r\n          نېټه: ${date(tempRecord.date_creation)} 📅\r\n          زموږ د خدمتونو د انتخاب له امله مننه!`;\r\n      }\r\n      WhatsAppButton({\r\n        phoneNumber: tempRecord.whatsup_number || \"\",\r\n        message: tomessege,\r\n      });\r\n    }\r\n  };\r\n  // console.log(localStorage.getItem(\"date\"));\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (settings[0].date === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n\r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n  // const Sendmsg =()=>{\r\n  //   if(!selectedOptionTo ||!Transformation.from_amount ){\r\n  //     showAlert({\r\n  //       position: \"top-end\",\r\n  //       icon: \"error\",\r\n  //       title: \"You must select from account and to account!\",\r\n  //       showConfirmButton: false,\r\n  //       timer: 1000,\r\n  //     });\r\n  //     return;\r\n  //   }\r\n  //   let tomessege = `سلام ${selectedOptionTo.account_name} عزیز،\\n💼 معامله اخیر شما با موفقیت در سیستم ثبت شده است.\\nنوع: ${\r\n  //     Transformation.to_amount > 0 ? \"واریز\" : \"برداشت\"\r\n  //   } 💰\\nمقدار: ${Transformation.to_amount + \" \" + selectedOptionTo.moneyType} 💵\\nبیلانس فعلی: ${\r\n  //     selectedOptionFrom.belance + selectedOptionTo.belance\r\n  //   } 📊\\nشرح: ${Transformation.to_description || \"\"} ✍\\nتاریخ: ${selectedDay} 📅\\nاز انتخاب خدمات ما سپاسگزاریم!`;\r\n  // console.log(tomessege);\r\n  //   WhatsAppButton({\r\n  //     phoneNumber: selectedOptionTo.whatsup_number || '',\r\n  //     message: tomessege,\r\n  //   });\r\n  // }\r\n  const Submit = () => {\r\n    if (!selectedOptionFrom || !selectedOptionTo ) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title: (\r\n          <FormattedMessage id=\"You must select from account and to account!\" />\r\n        ),\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    if (Checkbox.amount) {\r\n      Transformation.com_account_id = selectedOption.id;\r\n    }\r\n    Transformation.from_account_id = selectedOptionFrom.id;\r\n    Transformation.to_account_id = selectedOptionTo.id;\r\n    let fromselection=selectedOptionFrom;\r\n    setSelectedOptionFrom(null);\r\n    setmsgDescription(Checkbox.Todescription);\r\n    // console.log(Transformation);\r\n    axios\r\n      .post(Source.getAddress() + \"/api/transformations\", Transformation, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: { complete: Checkbox.amount ? \"ok\" : \"no\",checkto:Checkbox.Todescription ? 'ok':'no',checkco:Checkbox.Cdescription ? 'ok':'no' },\r\n      })\r\n      .then((res) => {\r\n        let data = res.data;\r\n        let add = res.data.bill;\r\n        let d = date(selectedDay);\r\n        let language = localStorage.getItem(\"language\");\r\n        let message = \"\";\r\n        if (language === \"en\") {\r\n          message = `Hello ${\r\n            fromselection.account_name\r\n          },\\n💼 Your recent transaction has been successfully recorded in the system.\\nType: ${\r\n             \"Withdraw\" \r\n          } \r\n    💰${\r\n          parseInt(selectedOptionTo.serial) > 0\r\n            ? \"\\nSerial: \" + (parseInt(selectedOptionTo.serial) + 1) + \"🔖\"\r\n            : \"\"\r\n        }\\nAmount: ${\r\n      formatNumber(Transformation.from_amount) + \" \" + fromselection.moneyType +  ' 🔴'\r\n    } 💵\r\n    \\nCurrent Balance: ${\r\n      formatNumber(fromselection.belance - Transformation.from_amount) + ((fromselection.belance - Transformation.from_amount >=0) ?\"🟢\" :'🔴')\r\n    } 📊\\nDescription: ${\r\n            Transformation.from_description || \"\"\r\n          } ✍\\nDate: ${d} 📅\\nThank you for choosing our services!`;\r\n        } else if (language === \"pa\") {\r\n          message = `سلام ${\r\n            fromselection.account_name\r\n          } ګران،\\n💼 ستاسو وروستۍ معامله په بریالیتوب سره سیسټم کې ثبت شوې ده.\\nډول: ${\r\n             \"ایستل\" \r\n          } \r\n\r\n    💰${\r\n      parseInt(selectedOptionTo.serial) > 0\r\n        ? \"\\nسریال نمبر: \" + (parseInt(selectedOptionTo.serial) + 1) + \"🔖\"\r\n        : \"\"\r\n    }\\nمقدار: ${\r\n      formatNumber(Transformation.from_amount) + \" \" + fromselection.moneyType +' 🔴'\r\n    } 💵\\nاوسنی بیلانس: ${\r\n      formatNumber(fromselection.belance - Transformation.from_amount) +((fromselection.belance - Transformation.from_amount >=0) ?\"🟢\" :'🔴')\r\n          } 📊\\nتفصیل: ${\r\n            Transformation.from_description || \"\"\r\n          } ✍\\nنیټه: ${d} 📅\\nله موږ څخه د خدماتو اخیستلو لپاره مننه!`;\r\n        } else if (language === \"da\") {\r\n          message = `سلام ${\r\n            fromselection.account_name\r\n          } عزیز،\\n💼 معامله اخیر شما با موفقیت در سیستم ثبت شده است.\\nنوع: ${\r\n               \"برداشت\" \r\n          }\r\n  💰     ${\r\n            parseInt(selectedOptionTo.serial) > 0\r\n              ? \"\\nسریال نمبر: \" + (parseInt(selectedOptionTo.serial) + 1) + \"🔖\"\r\n              : \"\"\r\n          }\\nمقدار: ${\r\n            formatNumber(Transformation.from_amount) + \" \" + fromselection.moneyType +' 🔴'\r\n          } 💵\\nبیلانس فعلی: ${\r\n            formatNumber(fromselection.belance - Transformation.from_amount) + ((fromselection.belance - Transformation.from_amount >=0) ?\"🟢\" :'🔴')\r\n          } 📊\\nشرح: ${\r\n            Transformation.from_description || \"\"\r\n          } ✍\\nتاریخ: ${d} 📅\\nاز انتخاب خدمات ما سپاسگزاریم!`;\r\n        } else {\r\n          message = \"Language not supported!\";\r\n        } // console.log(from);\r\n        if (fromselection.whatsup === 1) {\r\n          // console.log('hi')\r\n          WhatsAppButton({\r\n            phoneNumber: fromselection.whatsup_number || \"\",\r\n            message: message,\r\n          });\r\n        }\r\n        else if(selectedOptionTo.whatsup===1){\r\n          let data= { ...selectedOptionTo,...description, msgdate: d, ...Transformation };\r\n          handlleWhatsup(data);\r\n        }\r\n        // console.log(selectedOptionTo);\r\n        let messageTo = {\r\n          serialTo : selectedOptionTo.serial\r\n        };\r\n        let description={\r\n          from_description: Transformation.from_description,\r\n        }\r\n\r\n        settempRecordfrom({ ...fromselection,...messageTo, ...Transformation });\r\n        settempRecordto({ ...selectedOptionTo,...description, msgdate: d, ...Transformation });\r\n        // if(selectedOptionTo.whatsup==='1'){\r\n        // showAlert({\r\n        //   title: \"آیا پیام دوم برای گیرنده ارسال شود؟\",\r\n        //   icon: \"question\",\r\n        //   showCancelButton: true,\r\n        //   confirmButtonText: \"بلی\",\r\n        //   cancelButtonText: \"خیر\",\r\n        // }).then((result) => {\r\n        //   if (result.isConfirmed) {\r\n        //   }\r\n        // });\r\n        if (Checkbox.amount) {\r\n          let belancefrom={from:{belance:fromselection.belance}}\r\n          let belanceto={to:{belance:selectedOptionTo.belance}}\r\n          let belancecom={com:{belance:selectedOption.belance}}\r\n          let from = { customer: fromselection.account_name };\r\n          let to = { customer: selectedOptionTo.account_name };\r\n          let com = { customer: selectedOption.account_name };\r\n          add.from = { ...add.from, ...from, ...fromselection };\r\n          add.to = { ...add.to, ...selectedOptionTo, ...to };\r\n          add.com = { ...add.com, ...selectedOption, ...com };\r\n          add.belance={...belancecom,...belancefrom,...belanceto};\r\n          setRecords([add, ...records]);\r\n          setOptionsFrom((prevRecords) =>\r\n            prevRecords.map((record) => {\r\n              if (record.id === data.belancecom_report.id) {\r\n                return { ...record, ...data.belancecom_report };\r\n              } else if (record.id === data.belancefrom_report.id) {\r\n                return { ...record, ...data.belancefrom_report };\r\n              } else if (record.id === data.belanceto_report.id) {\r\n                return { ...record, ...data.belanceto_report };\r\n              }\r\n              return record;\r\n            })\r\n          );\r\n        } else {\r\n          let belancefrom={from:{belance:fromselection.belance}}\r\n          let belanceto={to:{belance:selectedOptionTo.belance}}\r\n          let from = { customer: fromselection.account_name };\r\n          let to = { customer: selectedOptionTo.account_name };\r\n          add.from = { ...add.from, ...from, ...fromselection };\r\n          add.to = { ...add.to, ...selectedOptionTo, ...to };\r\n          add.belance={...belancefrom,...belanceto};\r\n          setRecords([add, ...records]);\r\n          setOptionsFrom((prevRecords) =>\r\n            prevRecords.map((record) => {\r\n              if (record.id === data.belancefrom_report.id) {\r\n                return { ...record, ...data.belancefrom_report };\r\n              } else if (record.id === data.belanceto_report.id) {\r\n                return { ...record, ...data.belanceto_report };\r\n              }\r\n              return record;\r\n            })\r\n          );\r\n        }\r\n        setSelectedOption(null);\r\n        setSelectedOptionFrom(null);\r\n        setSelectedOptionTo(null);\r\n\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: \"Transformation has been created!\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n\r\n        setTransformation({\r\n          user_id: localStorage.getItem(\"userTokenid\"),\r\n          from_account_id: '',\r\n          from_amount: '',\r\n          from_description: '',\r\n          to_account_id: '',\r\n          to_amount: '',\r\n          to_description: '',\r\n          com_account_id: '',\r\n          com_amount: '',\r\n          com_description: '',\r\n          date_creation: new Date().toISOString(),\r\n        });\r\n\r\n        setFormattedValue({\r\n          from_amount: '',\r\n          from_balance: '',\r\n          to_amount: '',\r\n          to_balance: '',\r\n          com_amount: '',\r\n          com_balance: '',\r\n        });\r\n        setCheckbox({\r\n          amount: false,\r\n          Todescription: false,\r\n          Cdescription: false,\r\n        });\r\n        setSelectedOption(null);\r\n        setSelectedOptionFrom(null);\r\n        setSelectedOptionTo(null);\r\n      })\r\n      .catch((e) => {\r\n        // console.log(e);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"Something went wrong!\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            query: searchQueryTo,\r\n            money_id: selectedOptionFrom.money_id,\r\n            do: \"ok\",\r\n          }, // ارسال پارامتر جستجو به سرور\r\n        });\r\n        setOptionsTo(response.data);\r\n        const data = response.data;\r\n        // console.log(data);\r\n\r\n        // if (data && data.length === 0) {\r\n        //   setSelectedOptionTo({ id: 0, name: searchQueryTo });\r\n        // } else {\r\n        //   setOptionsTo(data); // ذخیره داده‌ها برای نمایش در لیست\r\n        // }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    if (selectedOptionFrom) {\r\n      if (!searchQueryTo || searchQueryTo?.length < 3) {\r\n        setOptionsFrom([]);\r\n        return;\r\n      } else {\r\n        fetchData();\r\n      }\r\n    }\r\n  }, [searchQueryTo]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            query: searchQuery,\r\n            money_id: selectedOptionFrom.money_id,\r\n            do: \"ok\",\r\n          }, // ارسال پارامتر جستجو به سرور\r\n        });\r\n        setOptions(response.data);\r\n        const data = response.data;\r\n        // console.log(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    // if(selectedOption){\r\n    if (!searchQuery || searchQuery.length < 3) {\r\n      setOptions([]);\r\n      return;\r\n      // }\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, [searchQuery]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n\r\n  // dispatch(getReports());\r\n  // dispatch(getBelances());\r\n  // console.log(optionsFrom);\r\n  useEffect(() => {\r\n    // console.log(!searchQueryFrom );\r\n    const fetchData = async () => {\r\n      // Check if searchQueryFrom is not empty or only whitespace\r\n      if (!searchQueryFrom || searchQueryFrom.length < 3) {\r\n        setOptionsFrom([]); // Clear options if the search query is empty or just whitespace\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: { query: searchQueryFrom, do: \"ok\" }, // ارسال پارامتر جستجو به سرور\r\n        });\r\n\r\n        const data = response.data;\r\n        // console.log(data);\r\n        setOptionsFrom(data); // ذخیره داده‌ها برای نمایش در لیست\r\n\r\n        // if (data && data.length === 0) {\r\n        //   setSelectedOptionFrom({ id: 0, name: searchQueryFrom });\r\n        // } else {\r\n        // }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [searchQueryFrom]); // اضافه کردن searchQueryFrom به وابستگی‌های useEffect\r\n  // console.log(selectedOption);\r\n  const { formatMessage } = useIntl();\r\n  const close=()=>{\r\n    settempRecordfrom('');\r\n    settempRecordto('');\r\n    closeDialog();\r\n    setSelectedOption(null);\r\n    setSelectedOptionFrom(null);\r\n    setSelectedOptionTo(null);\r\n    setTransformation({\r\n      user_id: localStorage.getItem(\"userTokenid\"),\r\n      from_account_id: null,\r\n      from_amount: null,\r\n      from_description: null,\r\n      to_account_id: null,\r\n      to_amount: null,\r\n      to_description: null,\r\n      com_account_id: null,\r\n      com_amount: null,\r\n      com_description: null,\r\n      date_creation: new Date().toISOString(),\r\n    });\r\n\r\n    setFormattedValue({\r\n      from_amount: null,\r\n      from_balance: null,\r\n      to_amount: null,\r\n      to_balance: null,\r\n      com_amount: null,\r\n      com_balance: null,\r\n    });\r\n    setCheckbox({\r\n      amount: false,\r\n      Todescription: false,\r\n      Cdescription: false,\r\n    });\r\n    setSelectedOption(null);\r\n    setSelectedOptionFrom(null);\r\n    setSelectedOptionTo(null);\r\n    setmsgDescription(false);\r\n  }\r\n  return (\r\n    <div\r\n    className={`container rounded-5 popup ${\r\n      Checkbox.amount ? \"trnsformation\" : \"Ctrnsformation\"\r\n    } ${AddTransformationModal ? \"show\" : \"\"}`}\r\n    style={{\r\n      // maxWidth: \"70%\",\r\n      overflowX: \"auto\",\r\n      overflowY: \"auto\",\r\n      height: \"80vh\",\r\n      backgroundColor: \"#f8f9fa\",\r\n      padding: \"15px\",\r\n      fontSize: \"0.9rem\"\r\n    }}\r\n  >\r\n    <div className=\"d-flex justify-content-end\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-close p-2 m-1 mt-0 hover_btn\"\r\n        onClick={close}\r\n        aria-label=\"Close\"\r\n      ></button>\r\n    </div>\r\n    <div className=\"p-1 rounded-5\">\r\n      <div className=\"row\">\r\n        <h1\r\n          className=\"text-center rounded p-3 text-light\"\r\n          style={{ \r\n            backgroundColor: \"var(--bs-info)\", \r\n            width: \"100%\",\r\n            fontSize: \"1.5rem\"\r\n          }}\r\n        >\r\n          <FormattedMessage id=\"Add\" />{\" \"}\r\n          <FormattedMessage id=\"Transformation\" />\r\n        </h1>\r\n  \r\n        <div\r\n          dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n          className={`col-12 mt-1 ${\r\n            Checkbox.amount ? \"col-md-4\" : \"col-md-6\"\r\n          }`}\r\n        >\r\n          <h3 style={{ fontSize: \"1.1rem\" }}>\r\n            <FormattedMessage id=\"From:\" />\r\n          </h3>\r\n          <label className=\"fw-bold\" style={{ fontSize: \"0.9rem\" }}>\r\n            <FormattedMessage id=\"Account Name\" />\r\n          </label>\r\n          <ComboBoxTo\r\n            searchQuery={searchQueryFrom}\r\n            setSearchQuery={setSearchQueryFrom}\r\n            handleInputChange={handleInputChangeFrom}\r\n            setSelectedOption={setSelectedOptionFrom}\r\n            selectedOption={selectedOptionFrom}\r\n            options={optionsFrom}\r\n            Onsearch={setSelectedOption}\r\n            // style={{ fontSize: \"0.9rem\" }}\r\n          />\r\n          <label htmlFor=\"price\" className=\"fw-bold mt-2\" style={{ fontSize: \"0.9rem\" }}>\r\n            <FormattedMessage id=\"Amount\" />\r\n          </label>\r\n          <NumericFormat\r\n            id=\"from_amount\"\r\n            thousandSeparator={true}\r\n            className={`form-control ${\r\n              Transformation.to_amount < 0 ? \"text-success\" : \"text-danger\"\r\n            }`}\r\n            value={formattedValue.from_amount}\r\n            placeholder=\"0\"\r\n            onChange={handleChange}\r\n            dir=\"ltr\"\r\n            // style={{ fontSize: \"0.85rem\", padding: \"0.3rem 0.5rem\" }}\r\n          />\r\n          <label htmlFor=\"price\" className=\"fw-bold mt-2\" style={{ fontSize: \"0.9rem\" }}>\r\n            <FormattedMessage id=\"Remain Balance\" />\r\n          </label>\r\n          <NumericFormat\r\n            readOnly={true}\r\n            thousandSeparator={true}\r\n            name=\"from_balance\"\r\n            className=\"form-control\"\r\n            value={\r\n              parseInt(selectedOptionFrom?.belance) -\r\n              parseInt(Transformation.from_amount)\r\n            }\r\n            placeholder=\"0\"\r\n            dir=\"ltr\"\r\n            // style={{ fontSize: \"0.85rem\", padding: \"0.3rem 0.5rem\" }}\r\n          />\r\n          <label htmlFor=\"description\" className=\"fw-bold mt-2\" style={{ fontSize: \"0.9rem\" }}>\r\n            <FormattedMessage id=\"Description\" />\r\n          </label>\r\n          <input\r\n            onChange={handleform}\r\n            value={Transformation.from_description}\r\n            type=\"text\"\r\n            name=\"from_description\"\r\n            placeholder={formatMessage({ id: \"Description\" })}\r\n            className=\"form-control mb-2 \"\r\n            style={{ \r\n              width: \"100%\",\r\n              // fontSize: \"0.85rem\",\r\n              // padding: \"0.3rem 0.5rem\"\r\n            }}\r\n          />\r\n          <div className=\"date-picker-container\">\r\n            <Datepicker_Customer\r\n              default_value={EndDate}\r\n              handle_date={handle_date}\r\n              lebal={<FormattedMessage id=\"Date\" />}\r\n              setSelectedDay={setSelectedDay}\r\n              selectedDay={selectedDay}\r\n              // style={{ fontSize: \"0.85rem\" }}\r\n            ></Datepicker_Customer>\r\n          </div>\r\n        </div>\r\n        <div\r\n          dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n          className={`col-12 mt-1 ${\r\n            Checkbox.amount ? \"col-md-4\" : \"col-md-6\"\r\n          }`}\r\n        >\r\n          <h3 style={{ fontSize: \"1.1rem\" }}>\r\n            <FormattedMessage id=\"To:\" />\r\n          </h3>\r\n          <label className=\"fw-bold\" style={{ fontSize: \"0.9rem\" }}>\r\n            <FormattedMessage id=\"Account Name\" />\r\n          </label>\r\n          <ComboBoxT\r\n            isEditable={!selectedOptionFrom ? true : false}\r\n            searchQuery={searchQueryTo}\r\n            setSearchQuery={setSearchQueryTo}\r\n            handleInputChange={handleInputChangeTo}\r\n            setSelectedOption={setSelectedOptionTo}\r\n            selectedOption={selectedOptionTo}\r\n            options={optionsTo}\r\n            Onsearch={handleTo}\r\n            // style={{ fontSize: \"0.9rem\" }}\r\n          />\r\n          <label htmlFor=\"price\" className=\"fw-bold mt-2\" style={{ fontSize: \"0.9rem\" }}>\r\n            <FormattedMessage id=\"Amount\" />\r\n          </label>\r\n          <div className=\"d-flex w-100\">\r\n            <div className=\"form-check form-switch ms-0 col-md-2 d-flex center\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"amount\"\r\n                name=\"amount\"\r\n                checked={Checkbox.amount}\r\n                onChange={(e) =>\r\n                  setCheckbox({ ...Checkbox, amount: e.target.checked })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n              <NumericFormat\r\n                readOnly={!Checkbox.amount}\r\n                thousandSeparator={true}\r\n                id=\"to_amount\"\r\n                className={`form-control ${\r\n                  Transformation.to_amount > 0\r\n                    ? \"text-success\"\r\n                    : \"text-danger\"\r\n                }`}\r\n                value={formattedValue.to_amount}\r\n                placeholder=\"0\"\r\n                onChange={handleChange}\r\n                dir=\"ltr\"\r\n                // style={{ fontSize: \"0.85rem\", padding: \"0.3rem 0.5rem\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <label htmlFor=\"price\" className=\"fw-bold mt-2\" style={{ fontSize: \"0.9rem\" }}>\r\n            <FormattedMessage id=\"Remain Balance\" />\r\n          </label>\r\n          <NumericFormat\r\n            readOnly={true}\r\n            thousandSeparator={true}\r\n            name=\"to_balance\"\r\n            className=\"form-control\"\r\n            value={\r\n              Transformation.to_balance !== 0\r\n                ? parseInt(Transformation.to_balance) +\r\n                  parseInt(\r\n                    Checkbox.amount\r\n                      ? parseInt(Transformation.to_balance) +\r\n                          parseInt(Transformation.to_amount)\r\n                      : Transformation.from_amount\r\n                  )\r\n                : 0 +\r\n                  (Checkbox.amount\r\n                    ? parseInt(\r\n                        parseInt(Transformation.to_balance) +\r\n                          parseInt(Transformation.to_amount)\r\n                      )\r\n                    : Transformation.from_amount)\r\n            }\r\n            placeholder=\"0\"\r\n            dir=\"ltr\"\r\n            // style={{ fontSize: \"0.85rem\", padding: \"0.3rem 0.5rem\" }}\r\n          />\r\n          <label htmlFor=\"description\" className=\"fw-bold mt-2\" style={{ fontSize: \"0.9rem\" }}>\r\n            <FormattedMessage id=\"Description\" />\r\n          </label>\r\n          <div className=\"d-flex w-100\" style={{ marginBottom: \"3rem\" }}>\r\n            <div className=\"form-check form-switch ms-0 col-md-2 d-flex center\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"Tdescription\"\r\n                name=\"Tdescription\"\r\n                checked={Checkbox.Todescription}\r\n                onChange={(e) =>\r\n                  setCheckbox({\r\n                    ...Checkbox,\r\n                    Todescription: e.target.checked,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n              <input\r\n                onChange={handleform}\r\n                value={Transformation.to_description}\r\n                readOnly={!Checkbox.Todescription}\r\n                type=\"text\"\r\n                name=\"to_description\"\r\n                placeholder={formatMessage({ id: \"Description\" })}\r\n                className=\"form-control mb-2\"\r\n                style={{ \r\n                  width: \"100%\",\r\n                  // fontSize: \"0.85rem\",\r\n                  // padding: \"0.3rem 0.5rem\"\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {Checkbox.amount && (\r\n          <div\r\n            className=\"col-12 col-md-4 mt-1\"\r\n            dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n          >\r\n            <h3 style={{ fontSize: \"1.1rem\" }}>\r\n              <FormattedMessage id=\"Comseion:\" />\r\n            </h3>\r\n            <label className=\"fw-bold\" style={{ fontSize: \"0.9rem\" }}>\r\n              <FormattedMessage id=\"Account Name\" />\r\n            </label>\r\n            <ComboBoxT\r\n              isEditable={!selectedOptionFrom ? true : false}\r\n              searchQuery={searchQuery}\r\n              setSearchQuery={setSearchQuery}\r\n              handleInputChange={handleInputChange}\r\n              setSelectedOption={setSelectedOption}\r\n              selectedOption={selectedOption}\r\n              options={options}\r\n              Onsearch={handle}\r\n              // style={{ fontSize: \"0.9rem\" }}\r\n            />\r\n            <label htmlFor=\"price\" className=\"fw-bold mt-2\" style={{ fontSize: \"0.9rem\" }}>\r\n              <FormattedMessage id=\"Amount\" />\r\n            </label>\r\n            <NumericFormat\r\n              readOnly={true}\r\n              thousandSeparator={true}\r\n              name=\"com_amount\"\r\n              className={`form-control ${\r\n                Transformation.from_amount - Transformation.to_amount > 0\r\n                  ? \"text-success\"\r\n                  : \"text-danger\"\r\n              }`}\r\n              value={Transformation.from_amount - Transformation.to_amount}\r\n              placeholder=\"0\"\r\n              dir=\"ltr\"\r\n              // style={{ fontSize: \"0.85rem\", padding: \"0.3rem 0.5rem\" }}\r\n            />\r\n            <label htmlFor=\"price\" className=\"fw-bold mt-2\" style={{ fontSize: \"0.9rem\" }}>\r\n              <FormattedMessage id=\"Remain Balance\" />\r\n            </label>\r\n            <NumericFormat\r\n              readOnly={true}\r\n              thousandSeparator={true}\r\n              name=\"com_balance\"\r\n              className=\"form-control\"\r\n              value={\r\n                parseInt(selectedOption?.belance) +\r\n                parseInt(Transformation.from_amount) -\r\n                parseInt(Transformation.to_amount)\r\n              }\r\n              placeholder=\"0\"\r\n              dir=\"ltr\"\r\n              // style={{ fontSize: \"0.85rem\"}}\r\n            />\r\n            <label htmlFor=\"description\" className=\"fw-bold mt-2\" style={{ fontSize: \"0.9rem\" }}>\r\n              <FormattedMessage id=\"Description\" />\r\n            </label>\r\n            <div className=\"d-flex w-100\">\r\n              <div className=\"form-check form-switch ms-0 col-md-2 d-flex center\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"Cdescription\"\r\n                  name=\"Cdescription\"\r\n                  value={Checkbox.Cdescription}\r\n                  checked={Checkbox.Cdescription}\r\n                  onChange={(e) => {\r\n                    setCheckbox({\r\n                      ...Checkbox,\r\n                      Cdescription: e.target.checked,\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-10\">\r\n                <input\r\n                  onChange={handleform}\r\n                  value={Transformation.com_description}\r\n                  type=\"text\"\r\n                  name=\"com_description\"\r\n                  readOnly={!Checkbox.Cdescription}\r\n                  placeholder={formatMessage({ id: \"Description\" })}\r\n                  className=\"form-control mb-2\"\r\n                  style={{ \r\n                    width: \"100%\",\r\n                    // fontSize: \"0.85rem\",\r\n                    // padding: \"0.3rem 0.5rem\"\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"col-12 d-flex justify-content-center mt-3 mb-3\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"text-center btn btn-danger text-light me-2 ms-2\"\r\n            style={{ \r\n              width: \"120px\",\r\n            }}\r\n            onClick={close}\r\n          >\r\n            <FormattedMessage id=\"Cancel\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"text-center btn btn-success text-light ms-2\"\r\n            style={{ \r\n              width: \"120px\",\r\n            }}\r\n            onClick={Submit}\r\n          >\r\n            <FormattedMessage id=\"Submit\" />\r\n          </button>\r\n        </div>\r\n  \r\n        {tempRecordfrom && (\r\n          <table\r\n            className=\"table mt-1 mb-0 small\"\r\n            dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">\r\n                  <FormattedMessage id=\"No\" />\r\n                </th>\r\n                <th scope=\"col\">\r\n                  <FormattedMessage id=\"Name\" />\r\n                </th>\r\n                <th scope=\"col\">\r\n                  <FormattedMessage id=\"Amount\" />\r\n                </th>\r\n                <th scope=\"col\">\r\n                  <FormattedMessage id=\"Whatsup\" />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">1</th>\r\n                <td>{tempRecordfrom.account_name}</td>\r\n                <td style={{ color: \"red\" }}>\r\n                  {tempRecordfrom.from_amount + tempRecordfrom.moneyType}\r\n                </td>\r\n                <td>\r\n                  <a onClick={() => handlleWhatsupfrom(tempRecordfrom)}>\r\n                    <img\r\n                      src={Whatsupimg}\r\n                      alt=\"WhatsApp\"\r\n                      // className=\"whatsapp-icon\"\r\n                      // style={{ width: \"2rem!important\" ,maxWidth:'2rem!important' }}\r\n                      style={{ width: \"2.5rem\" }}\r\n\r\n                    />\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td>{tempRecordto.account_name}</td>\r\n                <td style={{ color: \"green\" }}>\r\n                  {tempRecordto.to_amount + tempRecordto.moneyType}\r\n                </td>\r\n                <td>\r\n                  <a onClick={() => handlleWhatsup(tempRecordto)}>\r\n                    <img\r\n                      src={Whatsupimg}\r\n                      alt=\"WhatsApp\"\r\n                      className=\"whatsapp-icon\"\r\n                      style={{ width: \"2.5rem\" }}\r\n                    />\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n    {/* <style jsx>{`\r\n    @media (max-width: 768px) {\r\n      .container {\r\n        max-width: 100% !important;\r\n        overflow-x: auto;\r\n      }\r\n    }\r\n    \r\n    .form-control, \r\n    .table,\r\n    .table th,\r\n    .table td,\r\n    .NumericFormat,\r\n    input,\r\n    .btn {\r\n      font-size: 0.85rem !important;\r\n    }\r\n    \r\n    .form-control {\r\n      padding: 0.3rem 0.5rem !important;\r\n      height: auto !important;\r\n    }\r\n    \r\n    .table {\r\n      font-size: 0.8rem !important;\r\n    }\r\n    \r\n    .btn {\r\n      padding: 0.25rem 0.5rem !important;\r\n    }\r\n    \r\n    label {\r\n      font-size: 0.9rem !important;\r\n    }\r\n  `}</style> */}\r\n  </div>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\n// import Source from \"../Source\";\r\nimport axios from \"axios\";\r\n// import Swal from \"sweetalert2\";\r\nimport { showAlert } from \"../../warrper.js\";\r\nimport ComboBoxT from \"./ComboBoxT\";\r\nimport Source from \"../../Source\";\r\nimport { NumericFormat } from \"react-number-format\";\r\nimport { useModel } from \"react-model\";\r\nimport moment from \"moment-jalaali\";\r\nimport jalaali from \"jalaali-js\";\r\nimport Datepicker_Customer from \"../forms/Datepicker_customer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { useSelector, useDispatch } from 'react-redux';\r\nimport { getReports, updateReportInCache } from \"../Redux/reportSlice.js\";\r\nimport { getBelances, updateBelanceInCache } from \"../Redux/belanceSlice.js\";\r\nimport { getSettings } from \"../Redux/settingSlice.js\";\r\nimport Whatsupimg from \"../../assets/icon/whatsup.png\";\r\n// import { FormattedMessage } from \"react-intl\";\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\nimport { useShowAlert } from \"../../warrper\";\r\nexport default function EditTransformation({\r\n  AddTransformationModal,\r\n  close,\r\n  setOptionsFrom,\r\n  optionsFrom,\r\n  records,\r\n  setRecords,\r\n  //\r\n  oldCom,\r\n  setOldCom,\r\n  Transformation,\r\n  setTransformation,\r\n  Checkbox,\r\n  setCheckbox,\r\n  formattedValue,\r\n  setFormattedValue,\r\n  selectedOptionFrom,\r\n  selectedOptionTo,\r\n  selectedOption,\r\n  setSelectedOption,\r\n  setSelectedOptionFrom,\r\n  setSelectedOptionTo,\r\n  oldTransformation,\r\n  setoldTransformat,\r\n}) {\r\n  const showAlert = useShowAlert();\r\n  const dispatch = useDispatch();\r\n  const [tempRecordfrom, settempRecordfrom] = useState(null);\r\n  const [tempRecordto, settempRecordto] = useState(null);\r\n\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n  const [Settings, Setsettings] = useState([]);\r\n  const [ToOk, setToOk] = useState(false);\r\n  useEffect(() => {\r\n    if (statuss !== \"succeeded\" && !settings) {\r\n      dispatch(getSettings());\r\n    } else {\r\n      Setsettings(settings);\r\n    }\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (settings.length > 0) {\r\n  //   }\r\n  // }, [settings]);\r\n\r\n  const handleform = (e) => {\r\n    setTransformation({\r\n      ...Transformation,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    if (Checkbox.Todescription && Checkbox.Cdescription) {\r\n      if (e.target.name === \"from_description\") {\r\n        setTransformation({\r\n          ...Transformation,\r\n          to_description: e.target.value,\r\n          com_description: e.target.value,\r\n        });\r\n      }\r\n    } else if (Checkbox.Todescription) {\r\n      if (e.target.name === \"from_description\") {\r\n        setTransformation({\r\n          ...Transformation,\r\n          to_description: e.target.value,\r\n        });\r\n      }\r\n    } else if (Checkbox.Cdescription) {\r\n      if (e.target.name === \"from_description\") {\r\n        setTransformation({\r\n          ...Transformation,\r\n          com_description: e.target.value,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    // console.log(e.target.id);\r\n    const formattedValue = e.target.value;\r\n    // Remove the thousand separators (commas)\r\n    const unformattedValue = formattedValue.replace(/,/g, \"\").replace(\"$\", \"\");\r\n\r\n    if (!Checkbox.amount) {\r\n      setFormattedValue({\r\n        ...formattedValue,\r\n        to_amount: e.target.value,\r\n        [e.target.id]: e.target.value,\r\n      });\r\n      setTransformation({\r\n        ...Transformation,\r\n        to_amount: unformattedValue,\r\n        [e.target.id]: unformattedValue,\r\n      });\r\n    } else {\r\n      setFormattedValue({\r\n        ...formattedValue,\r\n        [e.target.id]: e.target.value,\r\n      });\r\n      setTransformation({\r\n        ...Transformation,\r\n        [e.target.id]: unformattedValue,\r\n      });\r\n    }\r\n  };\r\n  //   const [formattedValue, setFormattedValue] = useState({\r\n  //     from_amount: null,\r\n  //     from_balance: null,\r\n  //     to_amount: null,\r\n  //     to_balance: null,\r\n  //     com_amount: null,\r\n  //     com_balance: null,\r\n  //   });\r\n\r\n  // from account\r\n  const [searchQueryFrom, setSearchQueryFrom] = useState();\r\n\r\n  // const [optionsFrom, setOptionsFrom] = useState();\r\n\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  const [EndDate, setEndDate] = useState(moment());\r\n  const handle_date = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setTransformation({\r\n        ...Transformation,\r\n        date_creation: isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n\r\n  const handleFrom = (e) => {\r\n    axios\r\n      .get(Source.getAddress() + \"/api/commession\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: { money: e?.moneyId }, // ارسال پارامتر جستجو به سرور\r\n      })\r\n      .then((res) => {\r\n        setSelectedOption(res.data);\r\n        // console.log(res);\r\n      })\r\n      .catch((er) => {\r\n        // console.log(er);\r\n      });\r\n    if (e) {\r\n      const filter = optionsFrom.filter(\r\n        (record) => record.type_id === e.type_id\r\n      );\r\n      setOptionsTo(filter);\r\n      setOptions(filter);\r\n      setTransformation({\r\n        ...Transformation,\r\n        from_balance: e.belance,\r\n      });\r\n      setFormattedValue({\r\n        ...formattedValue,\r\n        from_balance: e.belance,\r\n      });\r\n    }\r\n  };\r\n  const handleSearchFrom = async (query) => {\r\n    if (query.length < 1) {\r\n      setOptionsFrom([]);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: { query: query }, // ارسال پارامتر جستجو به سرور\r\n      });\r\n      setOptionsFrom(response.data);\r\n      // const data = ;\r\n      // // تبدیل داده‌ها به فرمت مناسب برای react-select\r\n      // let formattedOptions = data;\r\n\r\n      // if (formattedOptions && formattedOptions.length() === 0) {\r\n      //   if (query) {\r\n      //     // setAddItem({\r\n      //     //   ...AddItem,\r\n      //     //   temp_customer: query,\r\n      //     // });\r\n      //     setSelectedOptionFrom({ id: 0, name: query });\r\n      //   }\r\n      // }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n    }\r\n  };\r\n  const handleInputChangeFrom = (newValue) => {\r\n    setToOk(true);\r\n    setSearchQueryFrom(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    // handleSearchFrom(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  // to account\r\n  const [searchQueryTo, setSearchQueryTo] = useState();\r\n  const [optionsTo, setOptionsTo] = useState();\r\n  const handleTo = (e) => {\r\n    if (e) {\r\n      setTransformation({\r\n        ...Transformation,\r\n        to_balance: e.belance,\r\n      });\r\n      setFormattedValue({\r\n        ...formattedValue,\r\n        to_balance_balance: e.belance,\r\n      });\r\n    }\r\n  };\r\n  // const handleSearchTo = async (query) => {\r\n  //   if (query.length < 3) {\r\n  //     setOptionsTo([]);\r\n  //     return;\r\n  //   }\r\n  //   try {\r\n  //     const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n  //       },\r\n  //       params: {\r\n  //         query: query,\r\n  //         money_id: selectedOptionFrom.type.id,\r\n  //       }, // ارسال پارامتر جستجو به سرور\r\n  //     });\r\n  //     // console.log(query);\r\n  //     const data = response.data;\r\n  //     // console.log(response);\r\n  //     // تبدیل داده‌ها به فرمت مناسب برای react-select\r\n  //     let formattedOptions = data;\r\n  //     setOptionsTo(formattedOptions);\r\n\r\n  //     if (formattedOptions && formattedOptions.length() === 0) {\r\n  //       if (query) {\r\n  //         // setAddItem({\r\n  //         //   ...AddItem,\r\n  //         //   temp_customer: query,\r\n  //         // });\r\n  //         setSelectedOptionTo({ id: 0, name: query });\r\n  //       }\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching data:\", error);\r\n  //   } finally {\r\n  //   }\r\n  // };\r\n  const handleInputChangeTo = (newValue) => {\r\n    setSearchQueryTo(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    // handleSearchTo(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n\r\n  // comsion\r\n  const [searchQuery, setSearchQuery] = useState();\r\n  const [options, setOptions] = useState();\r\n  const handle = (e) => {\r\n    if (e) {\r\n      setTransformation({\r\n        ...Transformation,\r\n        com_balance: e.belance,\r\n      });\r\n      setFormattedValue({\r\n        ...formattedValue,\r\n        from_balance: e.belance,\r\n      });\r\n    }\r\n  };\r\n  const handleSearch = async (query) => {\r\n    if (query.length < 3) {\r\n      setOptions([]);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {\r\n          query: query,\r\n          money_id: selectedOptionFrom.type.id || \"false\",\r\n        }, // ارسال پارامتر جستجو به سرور\r\n      });\r\n      console.log(query);\r\n      const data = response.data;\r\n      // console.log(response);\r\n      // تبدیل داده‌ها به فرمت مناسب برای react-select\r\n      let formattedOptions = data;\r\n      setOptions(formattedOptions);\r\n\r\n      if (formattedOptions && formattedOptions.length() === 0) {\r\n        if (query) {\r\n          // setAddItem({\r\n          //   ...AddItem,\r\n          //   temp_customer: query,\r\n          // });\r\n          setSelectedOption({ id: 0, name: query });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n    }\r\n  };\r\n  const handleInputChange = (newValue) => {\r\n    setSearchQuery(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    // handleSearch(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  // const dispatch = useDispatch();\r\n\r\n  const WhatsAppButton = ({ phoneNumber = \"\", message }) => {\r\n    const formattedMessage = encodeURIComponent(message);\r\n    const whatsappAppLink = `whatsapp://send?phone=${phoneNumber}&text=${formattedMessage}`;\r\n\r\n    // لینک پیش‌فرض وب واتساپ در صورتی که پروتکل whatsapp:// کار نکند\r\n    // const whatsappWebLink = `https://wa.me/${phoneNumber}?text=${formattedMessage}`;\r\n\r\n    // تلاش برای باز کردن اپلیکیشن واتساپ\r\n    window.location.href = whatsappAppLink;\r\n\r\n    // اگر لینک بالا اجرا نشد، بعد از 2 ثانیه واتساپ وب باز شود\r\n    // setTimeout(() => {\r\n    //   window.open(whatsappWebLink, \"_blank\");\r\n    // }, 2000);\r\n  };\r\n  const handlleWhatsup = (tempRecord) => {\r\n    if (tempRecord.whatsup === 1) {\r\n      let language = localStorage.getItem(\"language\");\r\n      let tomessege;\r\n      \r\n      if (language === 'en') {\r\n        tomessege = `Hello dear ${tempRecord.account_name},\\n💼 Your recent transaction has been successfully registered in the system.\\nType: ${\"Deposit\"} 💰\\nAmount: ${tempRecord.to_amount + \" \" + tempRecord.moneyType+((tempRecord.from_amount >=0) ?\" 🟢\" :' 🔴')} 💵\\nCurrent balance: ${tempRecord.belance + tempRecord.belance+ ((parseInt(tempRecordfrom.belance) + parseInt(tempRecord.to_amount) >=0) ?\"🟢\" :'🔴')} 📊\\nDescription: ${tempRecord.to_description || \"\"} ✍\\nDate: ${tempRecord.msgdate} 📅\\nThank you for choosing our services!`;\r\n      } \r\n      else if (language === 'pa') {\r\n        tomessege = `سلام ${tempRecord.account_name} عزیز،\\n💼 ستاسو وروستی معامله په سیسټم کې په بریالیتوب ثبت شوې ده.\\nډول: ${\"واریز\"} 💰\\nمقدار: ${tempRecord.to_amount + \" \" + tempRecord.moneyType +((tempRecord.from_amount >=0) ?\" 🟢\" :' 🔴')} 💵\\nاوسنی بیلانس: ${tempRecord.belance + tempRecord.belance+ ((parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount) >=0) ?\"🟢\" :'🔴')} 📊\\nشرح: ${tempRecord.to_description || \"\"} ✍\\nنېټه: ${tempRecord.msgdate} 📅\\زموږ د خدمتونو په انتخاب مننه!`;\r\n      }\r\n      else if (language === 'da') {\r\n        tomessege = `سلام ${tempRecord.account_name} عزیز،\\n💼 معامله اخیر شما در سیستم موفقانه ثبت گردید.\\nنوع: ${\"واریز\"} 💰\\nمقدار: ${tempRecord.to_amount + \" \" + tempRecord.moneyType+((tempRecord.from_amount >=0) ?\" 🟢\" :' 🔴')} 💵\\nبالانس فعلی: ${tempRecordfrom.belance + tempRecord.belance + ((parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount) >=0) ?\"🟢\" :'🔴')} 📊\\nتوضیحات: ${tempRecord.to_description || \"\"} ✍\\nتاریخ: ${tempRecord.msgdate} 📅\\nاز انتخاب خدمات ما متشکریم!`;\r\n      }\r\n      else {\r\n        tomessege = `سلام ${tempRecord.account_name} عزیز،\\n💼 معامله اخیر شما در سیستم موفقانه ثبت گردید.\\nنوع: ${\"واریز\"} 💰\\nمقدار: ${tempRecord.to_amount + \" \" + tempRecord.moneyType+((tempRecord.from_amount >=0) ?\" 🟢\" :' 🔴')} 💵\\nبالانس فعلی: ${tempRecordfrom.belance + tempRecord.belance + ((parseInt(tempRecord.belance) + parseInt(tempRecord.to_amount) >=0) ?\"🟢\" :'🔴')} 📊\\nتوضیحات: ${tempRecord.to_description || \"\"} ✍\\nتاریخ: ${tempRecord.msgdate} 📅\\nاز انتخاب خدمات ما متشکریم!`;\r\n\r\n        // Default to Persian if language not set or unknown\r\n        // tomessege = `سلام ${tempRecord.account_name} عزیز،\\n💼 معامله اخیر شما با موفقیت در سیستم ثبت شده است.\\nنوع: ${\"واریز\"} 💰\\nمقدار: ${tempRecord.to_amount + \" \" + tempRecord.moneyType} 💵\\nبیلانس فعلی: ${tempRecordfrom.belance + tempRecord.belance} 📊\\nشرح: ${tempRecord.to_description || \"\"} ✍\\nتاریخ: ${tempRecord.msgdate} 📅\\nاز انتخاب خدمات ما سپاسگزاریم!`;\r\n      }\r\n  \r\n      console.log(tempRecord);\r\n      WhatsAppButton({\r\n        phoneNumber: tempRecord.whatsup_number || \"\",\r\n        message: tomessege,\r\n      });\r\n    }\r\n  };\r\n  const handlleWhatsupfrom = (tempRecord) => {\r\n    if (tempRecord.whatsup === 1) {\r\n      let language = localStorage.getItem(\"language\");\r\n      let tomessege;\r\n  \r\n      if (language === 'en') {\r\n        tomessege = `Hello dear ${tempRecord.account_name},\\n💼 Your recent transaction has been successfully registered in the system.\\nType: ${\"Withdrawal\"} 💰\\nAmount: ${tempRecord.to_amount + \" \" + tempRecord.moneyType+((tempRecord.to_amount >=0) ?\" 🟢\" :' 🔴')} 💵\\nCurrent balance: ${tempRecordfrom.belance - tempRecord.belance} 📊\\nDescription: ${tempRecord.to_description || \"\"} ✍\\nDate: ${tempRecord.msgdate} 📅\\nThank you for choosing our services!`;\r\n      }\r\n      else if (language === 'pa') {\r\n        tomessege = `سلام ${tempRecord.account_name} عزیز،\\n💼 ستاسو وروستی معامله په سیسټم کې په بریالیتوب ثبت شوې ده.\\nډول: ${\"تیریدل\"} 💰\\nمقدار: ${tempRecord.to_amount + \" \" + tempRecord.moneyType+((tempRecord.to_amount >=0) ?\" 🟢\" :' 🔴')} 💵\\nاوسنی بیلانس: ${tempRecord.belance - tempRecord.belance((tempRecord.to_amount >=0) ?\" 🟢\" :' 🔴')} 📊\\nشرح: ${tempRecord.to_description || \"\"} ✍\\nنېټه: ${tempRecord.msgdate} 📅\\nزموږ د خدمتونو په انتخاب مننه!`;\r\n      }\r\n      else if (language === 'da') {\r\n        tomessege = `سلام ${tempRecord.account_name} عزیز،\\n💼 معامله اخیر شما در سیستم موفقانه ثبت گردید.\\nنوع: ${\"برداشت\"} 💰\\nمقدار: ${tempRecord.to_amount + \" \" + tempRecord.moneyType+((tempRecord.to_amount >=0) ?\" 🟢\" :' 🔴')} 💵\\nبالانس فعلی: ${tempRecord.belance - tempRecord.belance((tempRecord.to_amount >=0) ?\" 🟢\" :' 🔴')} 📊\\nتوضیحات: ${tempRecord.to_description || \"\"} ✍\\nتاریخ: ${tempRecord.msgdate} 📅\\nاز انتخاب خدمات ما متشکریم!`;\r\n      }\r\n      else {\r\n        // Default to Persian if language not set or unknown\r\n        tomessege = `سلام ${tempRecord.account_name} عزیز،\\n💼 معامله اخیر شما با موفقیت در سیستم ثبت شده است.\\nنوع: ${\"برداشت\"} 💰\\nمقدار: ${tempRecord.to_amount + \" \" + tempRecord.moneyType+((tempRecord.to_amount >=0) ?\" 🟢\" :' 🔴')} 💵\\nبیلانس فعلی: ${tempRecord.belance - tempRecord.belance((tempRecord.to_amount >=0) ?\" 🟢\" :' 🔴')} 📊\\nشرح: ${tempRecord.to_description || \"\"} ✍\\nتاریخ: ${tempRecord.msgdate} 📅\\nاز انتخاب خدمات ما سپاسگزاریم!`;\r\n      }\r\n  \r\n      console.log(tomessege);\r\n      WhatsAppButton({\r\n        phoneNumber: tempRecord.whatsup_number || \"\",\r\n        message: tomessege,\r\n      });\r\n    }\r\n  };\r\n\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (settings[0].date === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n\r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n  // const Sendmsg =()=>{\r\n  //   if(!selectedOptionTo ||!Transformation.from_amount ){\r\n  //     showAlert({\r\n  //       position: \"top-end\",\r\n  //       icon: \"error\",\r\n  //       title: \"You must select from account and to account!\",\r\n  //       showConfirmButton: false,\r\n  //       timer: 1000,\r\n  //     });\r\n  //     return;\r\n  //   }\r\n  //   let tomessege = `سلام ${selectedOptionTo.account_name} عزیز،\\n💼 معامله اخیر شما با موفقیت در سیستم ثبت شده است.\\nنوع: ${\r\n  //     Transformation.to_amount > 0 ? \"واریز\" : \"برداشت\"\r\n  //   } 💰\\nمقدار: ${Transformation.to_amount + \" \" + selectedOptionTo.moneyType} 💵\\nبیلانس فعلی: ${\r\n  //     selectedOptionFrom.belance + selectedOptionTo.belance\r\n  //   } 📊\\nشرح: ${Transformation.to_description || \"\"} ✍\\nتاریخ: ${selectedDay} 📅\\nاز انتخاب خدمات ما سپاسگزاریم!`;\r\n  // console.log(tomessege);\r\n  //   WhatsAppButton({\r\n  //     phoneNumber: selectedOptionTo.whatsup_number || '',\r\n  //     message: tomessege,\r\n  //   });\r\n  // }\r\n  const Submit = () => {\r\n    if (!selectedOptionFrom || !selectedOptionTo) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title: (\r\n          <FormattedMessage id=\"You must select from account and to account!\" />\r\n        ),\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (Checkbox.amount) {\r\n      Transformation.com_account_id = selectedOption.id;\r\n    }\r\n    Transformation.from_account_id = selectedOptionFrom.id;\r\n    Transformation.to_account_id = selectedOptionTo.id;\r\n    Transformation._method='put';\r\n    axios\r\n      .post(\r\n        Source.getAddress() + \"/api/transformations/\" + oldTransformation,\r\n        Transformation,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            complete: Checkbox.amount ? \"ok\" : \"no\",\r\n            old: oldCom,\r\n            new: selectedOption?.id ? \"ok\" : \"no\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        // console.log(selectedDay);\r\n        let data = res.data;\r\n        let add = res.data.bill;\r\n        let d = date(selectedDay);\r\n        let language = localStorage.getItem(\"language\");\r\n\r\n        let message = \"\";\r\n\r\n        if (language === \"en\") {\r\n          message = `Hello ${\r\n            selectedOptionFrom.account_name\r\n          },\\n💼 Your recent transaction has been successfully recorded in the system.\\nType: ${\r\n            Transformation.from_amount > 0 ? \"Withdraw\" : \"Deposit\"\r\n          } 💰\\nAmount: ${\r\n            Transformation.from_amount + \" \" + selectedOptionFrom.moneyType + ((Transformation.from_amount >=0) ?\" 🟢\" :' 🔴')\r\n          } 💵\\nCurrent Balance: ${\r\n            selectedOptionFrom.belance - selectedOptionFrom.belance +((selectedOptionFrom.belance - selectedOptionFrom.from_amount >=0) ?\"🟢\" :'🔴')\r\n          } 📊\\nDescription: ${\r\n            Transformation.from_description || \"\"\r\n          } ✍\\nDate: ${d} 📅\\nThank you for choosing our services!`;\r\n        } else if (language === \"pa\") {\r\n          message = `سلام ${\r\n            selectedOptionFrom.account_name \r\n          } ګران،\\n💼 ستاسو وروستۍ معامله په بریالیتوب سره سیسټم کې ثبت شوې ده.\\nډول: ${\r\n            Transformation.from_amount > 0 ? \"ایستل\" : \"جمع کول\"  \r\n          } 💰\\nمقدار: ${\r\n            Transformation.from_amount + \" \" + selectedOptionFrom.moneyType + ((Transformation.from_amount >=0) ?\" 🟢\" :' 🔴')\r\n          } 💵\\nاوسنی بیلانس: ${\r\n            selectedOptionFrom.belance - selectedOptionFrom.belance +((selectedOptionFrom.belance - selectedOptionFrom.from_amount >=0) ?\"🟢\" :'🔴')\r\n          } 📊\\nتفصیل: ${\r\n            Transformation.from_description || \"\"\r\n          } ✍\\nنیټه: ${d} 📅\\nله موږ څخه د خدماتو اخیستلو لپاره مننه!`;\r\n        } else if (language === \"da\") {\r\n          message = `سلام ${\r\n            selectedOptionFrom.account_name\r\n          } عزیز،\\n💼 معامله اخیر شما با موفقیت در سیستم ثبت شده است.\\nنوع: ${\r\n            Transformation.from_amount > 0 ? \"برداشت\" : \"واریز\"\r\n          } 💰\\nمقدار: ${\r\n            Transformation.from_amount + \" \" + selectedOptionFrom.moneyType + ((Transformation.from_amount >=0) ?\" 🟢\" :' 🔴')\r\n          } 💵\\nبیلانس فعلی: ${\r\n            selectedOptionFrom.belance - selectedOptionFrom.belance +((selectedOptionFrom.belance - selectedOptionFrom.from_amount >=0) ?\"🟢\" :'🔴')\r\n          } 📊\\nشرح: ${\r\n            Transformation.from_description || \"\"\r\n          } ✍\\nتاریخ: ${d} 📅\\nاز انتخاب خدمات ما سپاسگزاریم!`;\r\n        } else {\r\n          message = \"Language not supported!\";\r\n        }\r\n        if (selectedOptionFrom.whatsup === 1) {\r\n          // console.log('hi')\r\n          WhatsAppButton({\r\n            phoneNumber: selectedOptionFrom.whatsup_number || \"\",\r\n            message: message,\r\n          });\r\n        }\r\n        settempRecordfrom({ ...selectedOptionFrom, ...Transformation });\r\n        settempRecordto({ ...selectedOptionTo, msgdate: d, ...Transformation });\r\n        if (Checkbox.amount) {\r\n          let from = { customer: selectedOptionFrom.account_name };\r\n          let to = { customer: selectedOptionTo.account_name };\r\n          let com = { customer: selectedOption.account_name };\r\n          add.from = { ...add.from, ...selectedOptionFrom, ...from };\r\n          add.to = { ...add.to, ...selectedOptionTo, ...to };\r\n          add.com = { ...add.com, ...selectedOption, ...com };\r\n          setRecords((prevRecords) =>\r\n            prevRecords.map((record) => {\r\n              if (record.from.id === data.bill.from.transformation) {\r\n                return { ...record, ...data.bill };\r\n              }\r\n              return record;\r\n            })\r\n          );\r\n          setOptionsFrom((prevRecords) =>\r\n            prevRecords.map((record) => {\r\n              if (record.id === data.belancecom_report.id) {\r\n                return { ...record, ...data.belancecom_report };\r\n              } else if (record.id === data.belancefrom_report.id) {\r\n                return { ...record, ...data.belancefrom_report };\r\n              } else if (record.id === data.belanceto_report.id) {\r\n                return { ...record, ...data.belanceto_report };\r\n              }\r\n              return record;\r\n            })\r\n          );\r\n        } else {\r\n          let from = { customer: selectedOptionFrom.account_name };\r\n          let to = { customer: selectedOptionTo.account_name };\r\n          add.from = { ...add.from, ...selectedOptionFrom, ...from };\r\n          add.to = { ...add.to, ...selectedOptionTo, ...to };\r\n          setRecords((prevRecords) =>\r\n            prevRecords.map((record) =>\r\n              record.from.id === data.bill.from.transformation\r\n                ? { ...record, ...data.bill }\r\n                : record\r\n            )\r\n          );\r\n          setOptionsFrom((prevRecords) =>\r\n            prevRecords.map((record) => {\r\n              if (record.id === data.belancefrom_report.id) {\r\n                return { ...record, ...data.belancefrom_report };\r\n              } else if (record.id === data.belanceto_report.id) {\r\n                return { ...record, ...data.belanceto_report };\r\n              }\r\n              return record;\r\n            })\r\n          );\r\n          setSelectedOption(null);\r\n          setSelectedOptionFrom(null);\r\n          setSelectedOptionTo(null);\r\n        }\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: <FormattedMessage id=\"Transformation has been updated!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n\r\n        setTransformation({\r\n          user_id: localStorage.getItem(\"userTokenid\"),\r\n          from_account_id: null,\r\n          from_amount: 0,\r\n          from_description: null,\r\n          to_account_id: null,\r\n          to_amount: 0,\r\n          to_description: null,\r\n          com_account_id: null,\r\n          com_amount: 0,\r\n          com_description: null,\r\n          date_creation: new Date().toISOString(),\r\n        });\r\n\r\n        setFormattedValue({\r\n          from_amount: 0,\r\n          from_balance: 0,\r\n          to_amount: 0,\r\n          to_balance: 0,\r\n          com_amount: 0,\r\n          com_balance: 0,\r\n        });\r\n        setCheckbox({\r\n          amount: false,\r\n          Todescription: false,\r\n          Cdescription: false,\r\n        });\r\n        setSelectedOption(null);\r\n        setSelectedOptionFrom(null);\r\n        setSelectedOptionTo(null);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: <FormattedMessage id=\"Something went wrong!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // dispatch(getReports());\r\n  // dispatch(getBelances());\r\n  // console.log(optionsFrom);\r\n  // console.log(Transformation);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            query: searchQueryTo,\r\n            money_id: selectedOptionFrom.money_id,\r\n            do: \"ok\",\r\n          }, // ارسال پارامتر جستجو به سرور\r\n        });\r\n        setOptionsTo(response.data);\r\n        const data = response.data;\r\n        // console.log(data);\r\n\r\n        // if (data && data.length === 0) {\r\n        //   setSelectedOptionTo({ id: 0, name: searchQueryTo });\r\n        // } else {\r\n        //   setOptionsTo(data); // ذخیره داده‌ها برای نمایش در لیست\r\n        // }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    if (selectedOptionFrom) {\r\n      if (!searchQueryTo || searchQueryTo?.length < 3) {\r\n        setOptionsFrom([]);\r\n        return;\r\n      } else {\r\n        fetchData();\r\n      }\r\n    }\r\n  }, [searchQueryTo]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            query: searchQuery,\r\n            money_id: selectedOptionFrom.money_id,\r\n            do: \"ok\",\r\n          }, // ارسال پارامتر جستجو به سرور\r\n        });\r\n        setOptions(response.data);\r\n        const data = response.data;\r\n        // console.log(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    // if(selectedOption){\r\n    if (!searchQuery || searchQuery.length < 3) {\r\n      setOptions([]);\r\n      return;\r\n      // }\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, [searchQuery]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n\r\n  // dispatch(getReports());\r\n  // dispatch(getBelances());\r\n  // console.log(optionsFrom);\r\n  useEffect(() => {\r\n    // console.log(!searchQueryFrom );\r\n    const fetchData = async () => {\r\n      // Check if searchQueryFrom is not empty or only whitespace\r\n      if (!searchQueryFrom || searchQueryFrom.length < 3) {\r\n        setOptionsFrom([]); // Clear options if the search query is empty or just whitespace\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: { query: searchQueryFrom, do: \"ok\" }, // ارسال پارامتر جستجو به سرور\r\n        });\r\n\r\n        const data = response.data;\r\n        // console.log(data);\r\n        setOptionsFrom(data); // ذخیره داده‌ها برای نمایش در لیست\r\n\r\n        // if (data && data.length === 0) {\r\n        //   setSelectedOptionFrom({ id: 0, name: searchQueryFrom });\r\n        // } else {\r\n        // }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [searchQueryFrom]); // اضافه کردن searchQueryFrom به وابستگی‌های useEffect\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n    <div\r\n      className={`container rounded-5 popup ${\r\n        Checkbox.amount ? \"trnsformation\" : \"Ctrnsformation\"\r\n      } ${AddTransformationModal ? \"show\" : \"\"}`}\r\n      style={{\r\n        maxWidth: \"70%\",\r\n        overflowX: \"auto\",\r\n        overflowY: \"auto\",\r\n        height: \"80vh\",\r\n        backgroundColor: \"#f8f9fa\",\r\n        padding: \"20px\",\r\n      }}\r\n    >\r\n      <div className=\"d-flex justify-content-end\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close p-2 m-1 mt-0 hover_btn\"\r\n          onClick={close}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n      <div className=\"p-1 rounded-5\">\r\n        <div className=\"row\">\r\n          <h1\r\n            className=\"text-center rounded p-1 text-light\"\r\n            style={{ backgroundColor: \"var(--bs-info)\", width: \"100%\" ,fontSize:'1.8rem'}}\r\n          >\r\n            <FormattedMessage id=\"Edit\" />{\" \"}\r\n            <FormattedMessage id=\"Transformation\" />\r\n          </h1>\r\n\r\n          <div\r\n            className={`col-12 mt-2 ${\r\n              Checkbox.amount ? \"col-md-4\" : \"col-md-6\"\r\n            }`}\r\n            dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n          >\r\n            <h3 style={{fontSize:'1rem'}}>\r\n              <FormattedMessage id=\"From:\" />\r\n            </h3>\r\n            <label className=\"fw-bold\">\r\n              <FormattedMessage id=\"Account Name\" />\r\n            </label>\r\n            <ComboBoxT\r\n              searchQuery={searchQueryFrom}\r\n              setSearchQuery={setSearchQueryFrom}\r\n              handleInputChange={handleInputChangeFrom}\r\n              setSelectedOption={setSelectedOptionFrom}\r\n              selectedOption={selectedOptionFrom}\r\n              options={optionsFrom}\r\n              Onsearch={handleFrom}\r\n            />\r\n            <label for=\"price\" className=\"fw-bold mt-2\">\r\n              <FormattedMessage id=\"Amount\" />\r\n            </label>\r\n            <NumericFormat\r\n              // ref={inputRef}\r\n              id=\"from_amount\"\r\n              // onKeyDown={handleKeyDown}\r\n              thousandSeparator={true}\r\n              // name=\"from_amount\"\r\n              className={`form-control ${\r\n                Transformation.to_amount < 0 ? \"text-success\" : \"text-danger\"\r\n              }`}\r\n              value={formattedValue.from_amount}\r\n              placeholder=\"0\"\r\n              onChange={handleChange}\r\n              dir=\"ltr\"\r\n            />\r\n            <label for=\"price\" className=\"fw-bold mt-2\">\r\n              <FormattedMessage id=\"Remain Balance\" />\r\n            </label>\r\n            <NumericFormat\r\n              // ref={inputRef}\r\n              // onKeyDown={handleKeyDown}\r\n              readOnly={true}\r\n              thousandSeparator={true}\r\n              name=\"from_balance\"\r\n              className=\"form-control\"\r\n              value={\r\n                parseInt(Transformation.from_balance) -\r\n                parseInt(Transformation.from_amount)\r\n              }\r\n              placeholder=\"0\"\r\n              dir=\"ltr\"\r\n              // onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"description\" className=\"fw-bold mt-2\">\r\n              <FormattedMessage id=\"Description\" />\r\n            </label>\r\n            <input\r\n              //   onKeyDown={handleKeyDown}\r\n              onChange={handleform}\r\n              value={Transformation.from_description}\r\n              type=\"text\"\r\n              name=\"from_description\"\r\n              // placeholder=\"Description\"\r\n              placeholder={formatMessage({ id: \"Description\" })}\r\n              className=\"form-control fs-6 mb-3\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n            <div className=\"date-picker-container\">\r\n              <Datepicker_Customer\r\n                default_value={EndDate}\r\n                handle_date={handle_date}\r\n                lebal={<FormattedMessage id=\"Date\" />}\r\n                setSelectedDay={setSelectedDay}\r\n                selectedDay={selectedDay}\r\n              ></Datepicker_Customer>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={`col-12 mt-2 ${\r\n              Checkbox.amount ? \"col-md-4\" : \"col-md-6\"\r\n            }`}\r\n            dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n          >\r\n            <h3 style={{fontSize:'1rem'}}>\r\n              <FormattedMessage id=\"To:\" />\r\n            </h3>\r\n            <label className=\"fw-bold\">\r\n              <FormattedMessage id=\"Account Name\" />\r\n            </label>\r\n            <ComboBoxT\r\n              isEditable={!true}\r\n              searchQuery={searchQueryTo}\r\n              setSearchQuery={setSearchQueryTo}\r\n              handleInputChange={handleInputChangeTo}\r\n              // handleSearch={handleSearchTo}\r\n              setSelectedOption={setSelectedOptionTo}\r\n              selectedOption={selectedOptionTo}\r\n              options={optionsTo}\r\n              Onsearch={handleTo}\r\n            />\r\n\r\n            <label for=\"price\" className=\"fw-bold mt-2\">\r\n              <FormattedMessage id=\"Amount\" />\r\n            </label>\r\n            <div className=\"d-flex w-100\" \r\n            >\r\n              <div class=\"form-check form-switch ms-0 col-md-2 d-flex center\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"amount\"\r\n                  name=\"amount\"\r\n                  checked={Checkbox.amount}\r\n                  onChange={(e) =>\r\n                    setCheckbox({ ...Checkbox, amount: e.target.checked })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-md-10\">\r\n                <NumericFormat\r\n                  readOnly={!Checkbox.amount}\r\n                  thousandSeparator={true}\r\n                  id=\"to_amount\"\r\n                  // style={{ color: \"red\" }}\r\n                  className={`form-control ${\r\n                    Transformation.to_amount > 0\r\n                      ? \"text-success\"\r\n                      : \"text-danger\"\r\n                  }`}\r\n                  value={formattedValue.to_amount}\r\n                  placeholder=\"0\"\r\n                  onChange={handleChange}\r\n                  dir=\"ltr\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <label for=\"price\" className=\"fw-bold mt-2\">\r\n              <FormattedMessage id=\"Remain Balance\" />\r\n            </label>\r\n            <NumericFormat\r\n              // ref={inputRef}\r\n              // onKeyDown={handleKeyDown}\r\n              readOnly={true}\r\n              thousandSeparator={true}\r\n              name=\"to_balance\"\r\n              className=\"form-control\"\r\n              value={\r\n                Transformation.to_balance !== 0\r\n                  ? parseInt(Transformation.to_balance) +\r\n                    parseInt(\r\n                      Checkbox.amount\r\n                        ? parseInt(Transformation.to_balance) +\r\n                            parseInt(Transformation.to_amount)\r\n                        : Transformation.from_amount\r\n                    )\r\n                  : null +\r\n                    (Checkbox.amount\r\n                      ? parseInt(\r\n                          parseInt(Transformation.to_balance) +\r\n                            parseInt(Transformation.to_amount)\r\n                        )\r\n                      : Transformation.from_amount)\r\n              }\r\n              placeholder=\"0\"\r\n              dir=\"ltr\"\r\n              // onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"description\" className=\"fw-bold mt-2\">\r\n              <FormattedMessage id=\"Description\" />\r\n            </label>\r\n            <div className=\"d-flex w-100\" style={{ marginBottom: \"4.4rem\" }}>\r\n              <div class=\"form-check form-switch ms-0 col-md-2 d-flex center\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"Tdescription\"\r\n                  name=\"Tdescription\"\r\n                  checked={Checkbox.Todescription}\r\n                  onChange={(e) =>\r\n                    setCheckbox({\r\n                      ...Checkbox,\r\n                      Todescription: e.target.checked,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-md-10\">\r\n                <input\r\n                  //   onKeyDown={handleKeyDown}\r\n                  onChange={handleform}\r\n                  value={Transformation.to_description}\r\n                  readOnly={!Checkbox.Todescription}\r\n                  type=\"text\"\r\n                  name=\"to_description\"\r\n                  // placeholder={`${<FormattedMessage id=\"Description\"/>}`}\r\n                  placeholder={formatMessage({ id: \"Description\" })}\r\n                  className=\"form-control fs-6 mb-3\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {Checkbox.amount && (\r\n            <div className=\"col-12 col-md-4 mt-2\"\r\n            dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n            >\r\n              <h3 style={{fontSize:'1rem'}}>\r\n                <FormattedMessage id=\"Comseion:\" />\r\n              </h3>\r\n              <label className=\"fw-bold\">\r\n                <FormattedMessage id=\"Account Name\" />{\" \"}\r\n              </label>\r\n              <ComboBoxT\r\n                isEditable={!selectedOptionFrom ? true : false}\r\n                searchQuery={searchQuery}\r\n                setSearchQuery={setSearchQuery}\r\n                handleInputChange={handleInputChange}\r\n                // handleSearch={handleSearch}\r\n                setSelectedOption={setSelectedOption}\r\n                selectedOption={selectedOption}\r\n                options={options}\r\n                Onsearch={handle}\r\n              />\r\n              <label for=\"price\" className=\"fw-bold mt-2\">\r\n                <FormattedMessage id=\"Amount\" />\r\n              </label>\r\n              <NumericFormat\r\n                // ref={inputRef}\r\n                // onKeyDown={handleKeyDown}\r\n                readOnly={true}\r\n                thousandSeparator={true}\r\n                name=\"com_amount\"\r\n                className={`form-control ${\r\n                  Transformation.from_amount - Transformation.to_amount > 0\r\n                    ? \"text-success\"\r\n                    : \"text-danger\"\r\n                }`}\r\n                value={Transformation.from_amount - Transformation.to_amount}\r\n                placeholder=\"0\"\r\n                dir=\"ltr\"\r\n                // onChange={handleChange}\r\n                // readOnly={true}\r\n              />\r\n              <label for=\"price\" className=\"fw-bold mt-2\">\r\n                <FormattedMessage id=\"Remain Balance\" />\r\n              </label>\r\n              <NumericFormat\r\n                // ref={inputRef}\r\n                // onKeyDown={handleKeyDown}\r\n                readOnly={true}\r\n                thousandSeparator={true}\r\n                name=\"com_balance\"\r\n                className=\"form-control\"\r\n                value={\r\n                  parseInt(Transformation.com_balance) +\r\n                  parseInt(Transformation.from_amount) -\r\n                  parseInt(Transformation.to_amount)\r\n                }\r\n                dir=\"ltr\"\r\n                placeholder=\"0\"\r\n                // onChange={handleChange}\r\n              />\r\n              <label htmlFor=\"description\" className=\"fw-bold mt-2\">\r\n                <FormattedMessage id=\"Description\" />\r\n              </label>\r\n              <div className=\"d-flex w-100\">\r\n                <div class=\"form-check form-switch ms-0 col-md-2 d-flex center\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id=\"Cdescription\"\r\n                    name=\"Cdescription\"\r\n                    value={Checkbox.Cdescription}\r\n                    // readOnly={Checkbox.Cdescription}\r\n                    checked={Checkbox.Cdescription}\r\n                    onChange={(e) => {\r\n                      setCheckbox({\r\n                        ...Checkbox,\r\n                        Cdescription: e.target.checked,\r\n                      });\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                  <input\r\n                    //   onKeyDown={handleKeyDown}\r\n                    onChange={handleform}\r\n                    value={Transformation.com_description}\r\n                    type=\"text\"\r\n                    name=\"com_description\"\r\n                    readOnly={!Checkbox.Cdescription}\r\n                    // placeholder={`${<FormattedMessage id=\"Description\"/>}`}\r\n                    placeholder={formatMessage({ id: \"Description\" })}\r\n                    className=\"form-control fs-6 mb-3\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"col-12 d-flex justify-content-center mt-2 mb-2\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"text-center btn btn-danger text-light me-2 ms-2\"\r\n              style={{ width: \"100px\" }}\r\n              onClick={close}\r\n            >\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </button>\r\n            <button\r\n              //   ref={buttonRef}\r\n              type=\"button\"\r\n              className=\"text-center btn btn-success text-light ms-2\"\r\n              style={{ width: \"100px\" }}\r\n              onClick={Submit}\r\n            >\r\n              <FormattedMessage id=\"Submit\" />\r\n            </button>\r\n          </div>\r\n          {tempRecordfrom && (\r\n            <table className=\"table mt-1 mb-0\" \r\n            dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">\r\n                    {\" \"}\r\n                    <FormattedMessage id=\"No\" />{\" \"}\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    {\" \"}\r\n                    <FormattedMessage id=\"Name\" />\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    {\" \"}\r\n                    <FormattedMessage id=\"Amount\" />\r\n                  </th>\r\n                  <th scope=\"col\">\r\n                    {\" \"}\r\n                    <FormattedMessage id=\"Whatsup\" />\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">1</th>\r\n                  <td>{tempRecordfrom.account_name}</td>\r\n                  <td style={{ color: \"red\" }}>\r\n                    {tempRecordfrom.from_amount + tempRecordfrom.moneyType}\r\n                  </td>\r\n                  <td>\r\n                    <a onClick={() => handlleWhatsupfrom(tempRecordfrom)}>\r\n                      <img\r\n                        src={Whatsupimg}\r\n                        alt=\"WhatsApp\"\r\n                        className=\"whatsapp-icon\"\r\n                        style={{ width: \"3rem\" }}\r\n                      />\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">2</th>\r\n                  <td>{tempRecordto.account_name}</td>\r\n                  <td style={{ color: \"green\" }}>\r\n                    {tempRecordto.to_amount + tempRecordto.moneyType}\r\n                  </td>\r\n                  <td>\r\n                    <a onClick={() => handlleWhatsup(tempRecordto)}>\r\n                      <img\r\n                        src={Whatsupimg}\r\n                        alt=\"WhatsApp\"\r\n                        className=\"whatsapp-icon\"\r\n                        style={{ width: \"3rem\" }}\r\n                      />\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo ,useCallback } from \"react\";\r\nimport Datepicker from \"../forms/Datepicker\";\r\nimport Datepicker_start from \"../forms/Datepicker_start\";\r\nimport DataTable, { Alignment } from \"react-data-table-component\";\r\nimport Trash from \"../../assets/icon/trash.png\";\r\nimport ListBox from \"../forms/ListBox\";\r\nimport { useRef } from \"react\";\r\nimport AddTransformation from \"./AddTransformation\";\r\nimport ComboBox from \"../forms/ComboBox\";\r\nimport Swal from \"sweetalert2\";\r\nimport moment from \"moment-jalaali\";\r\nimport jalaali from \"jalaali-js\";\r\nimport { Calendar } from \"react-modern-calendar-datepicker\";\r\nimport * as shamsi from \"shamsi-date-converter\";\r\nimport { NumericFormat } from \"react-number-format\";\r\nimport { utils } from \"react-modern-calendar-datepicker\";\r\nimport Datepicker_Customer from \"../forms/Datepicker_customer\";\r\nimport axios from \"axios\";\r\nimport Source from \"../../Source\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getReports } from \"../Redux/reportSlice\";\r\nimport { getBelances } from \"../Redux/belanceSlice\";\r\nimport Whatsupimg from \"../../assets/icon/whatsup.png\";\r\nimport Pencil from \"../../assets/icon/pencil.png\";\r\nimport EditTransformation from \"./EditTransformation\";\r\nimport { getCustomers } from \"../Redux/customerSlice\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useShowAlert  } from \"../../warrper\";\r\nimport { Switch, FormControlLabel, CircularProgress, Box } from \"@mui/material\";\r\nconst formatNumber = (number) => {\r\n  return number?.toLocaleString(); \r\n};\r\nexport default function Transformations({}) {\r\n  const showAlert = useShowAlert(); \r\n  const [selecteduser, setSelecteduser] = useState();\r\n  const { users, statusu } = useSelector((state) => state.users);\r\n  const [IsAll,setIsAll]=useState(false);\r\n  const [search, setSearch] = useState();\r\n\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\r\n  const [AddTransformationModal, setAddTransformationModal] = useState(false);\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n  const [records, setRecords] = useState([]);\r\n  const [EndDate, setEndDate] = useState();\r\n  const [StartDate, setStartDate] = useState(moment());\r\n  const [Date_Start, setDate_start] = useState(new Date().toISOString());\r\n  const [Date_End, setDate_end] = useState();\r\n\r\n  const handle_date = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      setDate_start(isoString);\r\n    }\r\n  };\r\n  const handle_date_end = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      setDate_end(isoString);\r\n    }\r\n  };\r\n  const WhatsAppButton = ({ phoneNumber = \"\", message }) => {\r\n    const formattedMessage = encodeURIComponent(message);\r\n    const whatsappAppLink = `whatsapp://send?phone=${phoneNumber}&text=${formattedMessage}`;\r\n\r\n    window.location.href = whatsappAppLink;\r\n\r\n  };\r\n  const handlleWhatsupfrom = (tempRecord) => {\r\n    if (tempRecord.from.whatsup === 1) {\r\n\r\n      let selectedOptionFrom=tempRecord.from;\r\n      let language = localStorage.getItem(\"language\");\r\n\r\n      let message = \"\";\r\n      \r\n      if (language === \"en\") {\r\n        message = `Hello ${selectedOptionFrom.customer},\\n💼 Your recent transaction has been successfully recorded in the system.\\nType: ${\r\n          tempRecord.from.amount > 0 ? \"Withdraw\" : \"Deposit\"\r\n        } 💰\\nAmount: ${\r\n          formatNumber(tempRecord.from.amount) + \" \" + selectedOptionFrom.moneyType +((tempRecord.from.amount >=0) ?\" 🟢\" :' 🔴')\r\n        } 💵\\nCurrent Balance: ${\r\n          formatNumber(tempRecord.belance.from.belance) + tempRecord.belance.from.belance>=0 ?\"🟢\" :'🔴'\r\n        } 📊\\nDescription: ${\r\n          tempRecord.from.description || \"\"\r\n        } ✍\\nDate: ${date(\r\n        tempRecord.from?.date || tempRecord.date_created\r\n      )} 📅\\nThank you for choosing our services!`;\r\n      } else if (language === \"pa\") {\r\n        message = `سلام ${selectedOptionFrom.customer} ګران،\\n💼 ستاسو وروستۍ معامله په بریالیتوب سره سیسټم کې ثبت شوې ده.\\nډول: ${\r\n          tempRecord.from.amount > 0 ? \"ایستل\" : \"جمع کول\"\r\n        } 💰\\nمقدار: ${\r\n          formatNumber(tempRecord.from.amount) + \" \" + selectedOptionFrom.moneyType+((tempRecord.from.amount >=0) ?\" 🟢\" :' 🔴')\r\n        } 💵\\nاوسنی بیلانس: ${\r\n          formatNumber(tempRecord.belance.from.belance) + tempRecord.belance.from.belance>=0 ?\"🟢\" :'🔴'\r\n        } 📊\\nتفصیل: ${\r\n          tempRecord.from.description || \"\"\r\n        } ✍\\nنیټه: ${date(\r\n          tempRecord.from?.date || tempRecord.date_created\r\n        )} 📅\\nله موږ څخه د خدماتو اخیستلو لپاره مننه!`;\r\n      } else if (language === \"da\") {\r\n        message = `سلام ${selectedOptionFrom.customer} عزیز،\\n💼 معامله اخیر شما با موفقیت در سیستم ثبت شده است.\\nنوع: ${\r\n          tempRecord.from.amount > 0 ? \"برداشت\" : \"واریز\"\r\n        } 💰\\nمقدار: ${\r\n          formatNumber(tempRecord.from.amount) + \" \" + selectedOptionFrom.moneyType+((tempRecord.from.amount >=0) ?\" 🟢\" :' 🔴')\r\n        } 💵\\nبیلانس فعلی: ${\r\n          formatNumber(tempRecord.belance.from.belance) + tempRecord.belance.from.belance>=0 ?\"🟢\" :'🔴'\r\n        } 📊\\nشرح: ${\r\n          tempRecord.from.description || \"\"\r\n        } ✍\\nتاریخ: ${date(\r\n          tempRecord.from?.date || tempRecord.date_created\r\n        )} 📅\\nاز انتخاب خدمات ما سپاسگزاریم!`;\r\n      } else {\r\n        message = \"Language not supported!\";\r\n      }\r\n      \r\n      WhatsAppButton({\r\n        phoneNumber: tempRecord.from.whatsup_number || \"\",\r\n        message: message,\r\n      });\r\n    }\r\n  };\r\n  const handlleWhatsupto = (tempRecord) => {\r\n    if (tempRecord.to.whatsup === 1) {\r\n      let language = localStorage.getItem(\"language\");\r\n      let selectedOptionFrom=tempRecord.to;\r\n\r\n      let message = \"\";\r\n      \r\n      if (language === \"en\") {\r\n        message = `Hello ${selectedOptionFrom.customer},\\n💼 Your recent transaction has been successfully recorded in the system.\\nType: ${\r\n          tempRecord.to.amount > 0 ? \"Withdrawal\" : \"Deposit\"\r\n        } 💰\\nAmount: ${\r\n          formatNumber(tempRecord.to.amount) + \" \" + selectedOptionFrom.moneyType\r\n        } 💵\\nCurrent Balance: ${\r\n          formatNumber(tempRecord.belance.to.belance)+ tempRecord.belance.to.belance>=0 ?\"🟢\" :'🔴'\r\n        } 📊\\nDescription: ${\r\n          tempRecord.to.description || \"\"\r\n        } ✍\\nDate: ${date(\r\n        tempRecord.from?.date || tempRecord.date_created\r\n      )} 📅\\nThank you for choosing our services!`;\r\n      } else if (language === \"pa\") {\r\n        message = `سلام ${selectedOptionFrom.customer} ګران،\\n💼 ستاسو وروستۍ معامله په بریالیتوب سره سیسټم کې ثبت شوې ده.\\nډول: ${\r\n          tempRecord.to.amount > 0 ? \"ایستل\" : \"جمع کول\"\r\n        } 💰\\nمقدار: ${\r\n          formatNumber(tempRecord.to.amount) + \" \" + selectedOptionFrom.moneyType\r\n        } 💵\\nاوسنی بیلانس: ${\r\n          // tempRecord.belance.to.belance\r\n          formatNumber(tempRecord.belance.to.belance)+  tempRecord.belance.to.belance>=0 ?\"🟢\" :'🔴'\r\n        } 📊\\nتفصیل: ${\r\n          tempRecord.to.description || \"\"\r\n        } ✍\\nنیټه: ${date(\r\n          tempRecord.from?.date || tempRecord.date_created\r\n        )} 📅\\nله موږ څخه د خدماتو اخیستلو لپاره مننه!`;\r\n      } else if (language === \"da\") {\r\n        message = `سلام ${selectedOptionFrom.customer} عزیز،\\n💼 معامله اخیر شما با موفقیت در سیستم ثبت شده است.\\nنوع: ${\r\n          tempRecord.to.amount > 0 ? \"برداشت\" : \"واریز\"\r\n        } 💰\\nمقدار: ${\r\n          formatNumber(tempRecord.to.amount) + \" \" + selectedOptionFrom.moneyType\r\n        } 💵\\nبیلانس فعلی: ${\r\n          formatNumber(tempRecord.belance.to.belance) + tempRecord.belance.to.belance>=0 ? \"🟢\" :'🔴'\r\n        } 📊\\nشرح: ${\r\n          tempRecord.to.description || \"\"\r\n        } ✍\\nتاریخ: ${date(\r\n          tempRecord.from?.date || tempRecord.date_created\r\n        )} 📅\\nاز انتخاب خدمات ما سپاسگزاریم!`;\r\n      } else {\r\n        message = \"Language not supported!\";\r\n      }\r\n\r\n      WhatsAppButton({\r\n        phoneNumber: tempRecord.to.whatsup_number || \"\",\r\n        message: message,\r\n      });\r\n    }\r\n  };\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (settings[0].date === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n\r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n  const handlleDelete = async (row) => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success\",\r\n        cancelButton: \"btn btn-danger\",\r\n      },\r\n      buttonsStyling: false,\r\n    });\r\n    const result = await swalWithBootstrapButtons.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, cancel!\",\r\n      reverseButtons: true,\r\n    });\r\n    if (result.isConfirmed) {\r\n      let com = \"no\";\r\n      let deletet = {};\r\n      if (row.com) {\r\n        deletet = {\r\n          from_account: row.from.account,\r\n          from_amount: row.from.amount,\r\n          from_id: row.from.id,\r\n          to_account: row.to.account,\r\n          to_amount: row.to.amount,\r\n          to_id: row.to.id,\r\n          com_account: row.com.account,\r\n          com_amount: row.com.amount,\r\n          com_id: row.com.id,\r\n        };\r\n        com = \"ok\";\r\n      } else {\r\n        deletet = {\r\n          from_account: row.from.account,\r\n          from_amount: row.from.amount,\r\n          from_id: row.from.id,\r\n          to_account: row.to.account,\r\n          to_amount: row.to.amount,\r\n          to_id: row.to.id,\r\n        };\r\n        com = \"no\";\r\n      }\r\n      axios\r\n        .put(\r\n          Source.getAddress() + \"/api/transformations/\" + row.from.id,\r\n          deletet,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n            },\r\n            params: { com: com, delete: \"delete\" },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          showAlert({\r\n            position: \"center\",\r\n            icon: \"success\",\r\n            title: \"Transermation record successfully deleted!\",\r\n            showConfirmButton: false,\r\n            timer: 600,\r\n          });\r\n          setRecords((prevRecords) =>\r\n            prevRecords.filter((record) => record.from.id !== row.from.id)\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      showAlert({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        text: \"Your Deposite record is safe :)\",\r\n        showConfirmButton: false,\r\n        timer: 600,\r\n      });\r\n    }\r\n  };\r\n\r\n  // edit\r\n  const [EditRow, setEditRow] = useState();\r\n  const [EditModal, setEditModal] = useState(false);\r\n\r\n  const [formattedValue, setFormattedValue] = useState({\r\n    from_amount: null,\r\n    from_balance: null,\r\n    to_amount: null,\r\n    to_balance: null,\r\n    com_amount: null,\r\n    com_balance: null,\r\n  });\r\n  const [Checkbox, setCheckbox] = useState({\r\n    amount: false,\r\n    Todescription: false,\r\n    Cdescription: false,\r\n  });\r\n  const [Transformation, setTransformation] = useState({\r\n    user_id: localStorage.getItem(\"userTokenid\"),\r\n    from_account_id: null,\r\n    from_amount: 0,\r\n    from_balance:0,\r\n    from_description: null,\r\n    to_account_id: null,\r\n    to_amount: 0,\r\n    to_balance:0,\r\n    to_description: null,\r\n    com_account_id: null,\r\n    com_amount: 0,\r\n    com_balance:0,\r\n    com_description: null,\r\n    date_creation: null,\r\n  });\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [selectedOptionTo, setSelectedOptionTo] = useState();\r\n  const [selectedOptionFrom, setSelectedOptionFrom] = useState();\r\n  const [oldTransformation, setoldTransformation] = useState(0);\r\n  const [oldCom, setOldCom] = useState(\"no\");\r\n  const handlleEdit = (row) => {\r\n    setoldTransformation(row.from.id);\r\n    setEditModal(true);\r\n    setEditRow(row);\r\n    setOldCom(row.com ? \"ok\" : \"no\");\r\n    setFormattedValue({\r\n      ...formattedValue,\r\n      from_amount: row.from?.amount,\r\n      from_balance: row.belance?.from,\r\n      to_amount: row.to?.amount,\r\n      to_balance: row.belance?.to,\r\n      com_amount: row.com?.amount,\r\n      com_balance: row?.com,\r\n    });\r\n    setCheckbox({\r\n      amount: row.com ? true : false,\r\n      Todescription: false,\r\n      Cdescription: false,\r\n    });\r\n    console.log(row);\r\n    setTransformation({\r\n      ...Transformation,\r\n      user_id: row.from.user,\r\n      from_account_id: row.from.account,\r\n      from_balance:row.belance.from.belance,\r\n      from_amount: row.from.amount,\r\n      from_description: row.from.discription,\r\n      to_account_id: row.to.account,\r\n      to_amount: row.to.amount,\r\n      to_balance:row.belance.to.belance,\r\n      to_description: row.to.discription,\r\n      com_account_id: row.com?.account,\r\n      com_balance:row?.belance?.com?.belance,\r\n      com_amount: row.com?.amount,\r\n      com_description: row.com?.discription,\r\n      date_creation: row.from.date,\r\n    });\r\n    setSelectedOption({\r\n      id: row.com?.account,\r\n      account_name: row.com?.customer,\r\n      whatsup_number: row.com?.whatsup_number,\r\n      whatsup: row.com?.whatsup,\r\n      belance: row.belance?.com,\r\n      moneyType: row.com?.moneyType,\r\n    });\r\n    setSelectedOptionFrom({\r\n      id: row.from.account,\r\n      account_name: row.from.customer,\r\n      whatsup_number: row.from?.whatsup_number,\r\n      whatsup: row.from?.whatsup,\r\n      belance: row.belance.from,\r\n      moneyType: row.from.moneyType,\r\n    });\r\n    setSelectedOptionTo({\r\n      id: row.to.account,\r\n      account_name: row.to.customer,\r\n      whatsup_number: row.to?.whatsup_number,\r\n      whatsup: row.to?.whatsup,\r\n      belance: row.belance.to,\r\n      moneyType: row.to.moneyType,\r\n    });\r\n  };\r\n  // end of edit\r\n  const columnsDesktopsimple = [\r\n    {\r\n      name: <strong>From Account</strong>,\r\n      selector: (row) => row.from.customer,\r\n      style: {\r\n        padding: \"0px 20px\",\r\n        justifyContent: \"left\",\r\n        textAlign: \"center\",\r\n      },\r\n      // sortable: true\r\n    },\r\n    {\r\n      name: <strong>From Amount</strong>,\r\n      selector: (row) => formatNumber(row.from.amount),\r\n    },\r\n    {\r\n      name: <strong>To Account</strong>,\r\n      selector: (row) => row.to.customer,\r\n    },\r\n    {\r\n      name: <strong className=\"w-50 text-center\">To Amount</strong>,\r\n      selector: (row) => formatNumber(row.to.amount),\r\n      style: {\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong className=\"w-50 text-center\">Description</strong>,\r\n      selector: (row) => row.from.discription,\r\n      //  sortable: true\r\n      style: {\r\n        textAlign: \"center\",\r\n        // minWidth:'100px',\r\n      },\r\n    },\r\n    {\r\n      name: <strong>Commission Account</strong>,\r\n      selector: (row) => (row.com ? row.com.customer : \"none\"),\r\n    },\r\n    {\r\n      name: <strong className=\"w-50 text-center\">Commission Amount</strong>,\r\n      selector: (row) => formatNumber(row.com ? row.com.amount : 0),\r\n      //  sortable: true\r\n      style: {\r\n        textAlign: \"center\",\r\n        // minWidth:'100px',\r\n      },\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"200px\", maxWidth: \"240px\", width: \"240px\" }}\r\n        >\r\n          Date Created\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.from?.date || row.from.date_created),\r\n\r\n      style: {\r\n        minWidth: \"190px!important\", // Adjust this value as needed\r\n        maxWidth: \"200px\", // Adjust this value as needed\r\n      },\r\n    },\r\n  ];\r\n  const PDcolumn = [\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"200px\", maxWidth: \"240px\", width: \"240px\" }}\r\n        >\r\n          <FormattedMessage id=\"Date Created\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.from?.date || row.from?.date_created),\r\n\r\n      style: {\r\n        minWidth: \"190px!important\", // Adjust this value as needed\r\n        maxWidth: \"200px\", // Adjust this value as needed\r\n      },\r\n    },\r\n    {\r\n      name: (\r\n        <strong className=\"w-50 text-center\">\r\n          <FormattedMessage id=\"Com Amount\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) => (\r\n        <span dir=\"ltr\">{formatNumber(row.com ? row.com.amount : 0)}</span>\r\n      ),\r\n      //  sortable: true\r\n      style: {\r\n        textAlign: \"center\",\r\n        // minWidth:'100px',\r\n      },\r\n    },\r\n  \r\n    {\r\n      name: (\r\n        <strong>\r\n          <FormattedMessage id=\"Commission Account\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) => (row.com ? row.com.customer : \"none\"),\r\n    },\r\n    {\r\n      name: (\r\n        <strong className=\"w-50 text-center\">\r\n          <FormattedMessage id=\"Description\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) => row.from?.discription,\r\n      style: {\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong>\r\n<FormattedMessage id=\"Send MSG\" />\r\n      </strong>,\r\n      cell: (row) => (\r\n        <a onClick={() => handlleWhatsupto(row)}>\r\n          <img\r\n            src={Whatsupimg}\r\n            alt=\"WhatsApp\"\r\n            className=\"whatsapp-icon\"\r\n            style={{ width: \"2rem\" }}\r\n          />\r\n        </a>\r\n      ),\r\n      style: {\r\n        minWidth: \"100px\",\r\n        maxWidth: \"120px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: (\r\n        <strong className=\"w-50 text-center\">\r\n          <FormattedMessage id=\"To Amount\" />\r\n        </strong>\r\n      ),\r\n       selector: (row) => (\r\n        <span dir=\"ltr\">{formatNumber(row.to?.amount)}</span>\r\n      ),\r\n      style: {\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n   \r\n    {\r\n      name: (\r\n        <strong>\r\n          <FormattedMessage id=\"To Account\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) =>row.to?.customer,\r\n    },\r\n    {\r\n      name: <strong>\r\n<FormattedMessage id=\"Send MSG\" />\r\n      </strong>,\r\n      cell: (row) => (\r\n        <a onClick={() => handlleWhatsupfrom(row)}>\r\n          <img\r\n            src={Whatsupimg}\r\n            alt=\"WhatsApp\"\r\n            className=\"whatsapp-icon\"\r\n            style={{ width: \"2rem\" }}\r\n          />\r\n        </a>\r\n      ),\r\n      style: {\r\n        minWidth: \"100px\",\r\n        maxWidth: \"120px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: (\r\n        <strong>\r\n          <FormattedMessage id=\"From Amount\" />\r\n        </strong>\r\n      ),\r\n      \r\n      selector: (row) => (\r\n        <span dir=\"ltr\">{formatNumber(row.from?.amount)}</span>\r\n      ),\r\n    },\r\n \r\n    {\r\n      name: (\r\n        <strong>\r\n          <FormattedMessage id=\"From Account\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) => row.from?.customer,\r\n      style: {\r\n        padding: \"0px 20px\",\r\n        justifyContent: \"left\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong className=\"ms-2\">\r\n          <FormattedMessage id=\"Edit\" />\r\n      </strong>,\r\n      cell: (row) => (\r\n        <a onClick={() => handlleEdit(row)}>\r\n          <img\r\n            src={Pencil}\r\n            alt=\"Edit\"\r\n            className=\"edit-icon\"\r\n            style={{ width: \"2rem\" }}\r\n          />\r\n        </a>\r\n      ),\r\n      style: {\r\n        minWidth: \"80px\",\r\n        maxWidth: \"80px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n  ];\r\n  const columnsTablet = [\r\n    {\r\n      name: <strong>From Account</strong>,\r\n      selector: (row) => row.to.customer,\r\n      style: {\r\n        padding: \"0px 20px\",\r\n        justifyContent: \"left\",\r\n        textAlign: \"center\",\r\n      },\r\n      // sortable: true\r\n    },\r\n    {\r\n      name: <strong>From Amount</strong>,\r\n      selector: (row) => formatNumber(row.from.amount),\r\n      //  sortable: true\r\n    },\r\n    \r\n    {\r\n      name: <strong>To Account</strong>,\r\n      selector: (row) =>\r\n        row.to.account ? row.to.account.account?.name : row.to?.account_name,\r\n    },\r\n    {\r\n      name: <strong className=\"text-center\">To Amount</strong>,\r\n      selector: (row) => formatNumber(row.from.amount),\r\n      style: {\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong className=\"w-50 text-center\">Description</strong>,\r\n      selector: (row) => row.from.discription,\r\n      style: {\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong>Commission Account</strong>,\r\n      selector: (row) => (row.com ? row.com.customer : \"none\"),\r\n    },\r\n    {\r\n      name: <strong className=\"w-50 text-center\">Commission Amount</strong>,\r\n      selector: (row) => formatNumber(row.com ? row.com.amount : 0),\r\n      style: {\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"200px\", maxWidth: \"240px\", width: \"240px\" }}\r\n        >\r\n          Date Created\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.from?.date || row.from.date_created),\r\n    },\r\n  ];\r\n  const columnsDesktop = [\r\n    {\r\n      name: <strong>From Account</strong>,\r\n      selector: (row) => row.from.customer,\r\n      style: {\r\n        minWidth: \"150px\",\r\n        maxWidth: \"150px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong>From Amount</strong>,\r\n      selector: (row) =>\r\n        formatNumber(row.from.amount) + \" \" + row.from.moneyType,\r\n      style: {\r\n        color: \"red\",\r\n        minWidth: \"150px\",\r\n        maxWidth: \"150px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong>Send Msg</strong>,\r\n      cell: (row) => (\r\n        <a onClick={() => handlleWhatsupfrom(row)}>\r\n          <img\r\n            src={Whatsupimg}\r\n            alt=\"WhatsApp\"\r\n            className=\"whatsapp-icon\"\r\n            style={{ width: \"2rem\" }}\r\n          />\r\n        </a>\r\n      ),\r\n      style: {\r\n        minWidth: \"100px\",\r\n        maxWidth: \"120px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong>To Account</strong>,\r\n      selector: (row) => row.to?.customer,\r\n      style: {\r\n        minWidth: \"150px\",\r\n        maxWidth: \"200px\",\r\n        textAlign: \"left\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong>To Amount</strong>,\r\n      selector: (row) => formatNumber(row.to?.amount) + \" \" + row.from.moneyType,\r\n      style: {\r\n        color: \"green\",\r\n        minWidth: \"120px\",\r\n        maxWidth: \"150px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong>Send Msg</strong>,\r\n      cell: (row) => (\r\n        <a onClick={() => handlleWhatsupto(row)}>\r\n          <img\r\n            src={Whatsupimg}\r\n            alt=\"WhatsApp\"\r\n            className=\"whatsapp-icon\"\r\n            style={{ width: \"2rem\" }}\r\n          />\r\n        </a>\r\n      ),\r\n      style: {\r\n        minWidth: \"100px\",\r\n        maxWidth: \"120px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong>Description</strong>,\r\n      selector: (row) => row.from.discription,\r\n      style: {\r\n        minWidth: \"200px\",\r\n        maxWidth: \"300px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong>Commission Account</strong>,\r\n      selector: (row) => (row.com ? row.com.customer : \"none\"),\r\n      style: {\r\n        minWidth: \"150px\",\r\n        maxWidth: \"200px\",\r\n        textAlign: \"left\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong>Commission Amount</strong>,\r\n      selector: (row) =>\r\n        formatNumber(row.com ? row.com.amount : 0) + \" \" + row.from.moneyType,\r\n      style: {\r\n        minWidth: \"100px\",\r\n        maxWidth: \"120px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong className=\"w-100\">Date Created</strong>,\r\n      selector: (row) => date(row.from?.date || row.from.date_created),\r\n      style: {\r\n        minWidth: \"180px\",\r\n        maxWidth: \"220px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: <strong className=\"ms-2\">Edit</strong>,\r\n      cell: (row) => (\r\n        <a onClick={() => handlleEdit(row)}>\r\n          <img\r\n            src={Pencil}\r\n            alt=\"Edit\"\r\n            className=\"edit-icon\"\r\n            style={{ width: \"2rem\" }}\r\n          />\r\n        </a>\r\n      ),\r\n      style: {\r\n        minWidth: \"80px\",\r\n        maxWidth: \"80px\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  const columns = useMemo(() => {\r\n    if (\r\n      localStorage.getItem(\"language\") === \"pa\" ||\r\n      localStorage.getItem(\"language\") === \"da\"\r\n    ) {\r\n      return PDcolumn;\r\n    }\r\n    if (isDesktop) {\r\n      // else{\r\n      return localStorage.getItem(\"userTokenname\") === \"admin\"\r\n        ? columnsDesktop\r\n        : columnsDesktopsimple;\r\n    }\r\n    // }\r\n    return columnsTablet;\r\n  }, [isDesktop]);\r\n\r\n  const [totalRows, setTotalRows] = useState(0); // تعداد کل ردیف‌ها\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1); // صفحه فعلی\r\n  const [perPage, setPerPage] = useState(10); // تعداد آیتم‌ها در هر صفحه\r\n\r\n  const fetchData = async (page, pageSize) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        Source.getAddress() + \"/api/transformations\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            all:IsAll && \"ok\",\r\n            user_id: selecteduser?.id,\r\n            page: page,\r\n            perPage: pageSize,\r\n            isdelete: 0,\r\n            StartDate: StartDate && Date_Start,\r\n            EndDate: EndDate && Date_End,\r\n            search: search?.length ? search : \"false\",\r\n          },\r\n        }\r\n      );\r\n      if (response.data.data.length>=1) {\r\n        setRecords(response.data.data); // داده‌های صفحه جاری\r\n        setTotalRows(response.data.total); // تعداد کل ردیف‌ها\r\n      } else {\r\n        setRecords([]);\r\n        setTotalRows(0);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data\", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const localization = {\r\n    pagination: {\r\n        \r\n        rowsPerPage:<FormattedMessage id=\"AddrowsPerPage\"/> , // مثلا: \"تعداد ردیف‌ها\"\r\n      previous: <FormattedMessage id=\"previous\"/>, // مثلا: \"قبلی\"\r\n      next: <FormattedMessage id=\"next\"/>, // مثلا: \"بعدی\"\r\n      page: <FormattedMessage id=\"page\"/>, // مثلا: \"صفحه\"\r\n    },\r\n    // شما می‌توانید تنظیمات بیشتر برای متون مورد نظر اضافه کنید.\r\n  };\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n  const [allRecords, setAllRecords] = useState([]);\r\n  const [displayedRecords, setDisplayedRecords] = useState([]);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const batchSize = 20;\r\n  const fetchAllData = useCallback(async () => {\r\n    setLoadingMore(true);\r\n    try {\r\n      const response = await axios.get(\r\n        Source.getAddress() + \"/api/transformations\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            all: \"ok\",\r\n            user_id: selecteduser?.id,\r\n            isdelete: 0,\r\n            StartDate: StartDate && Date_Start,\r\n            EndDate: EndDate && Date_End,\r\n            search: search?.length ? search : \"false\",\r\n          },\r\n        }\r\n      );\r\n      \r\n      setAllRecords(response.data.data);\r\n      setDisplayedRecords(response.data.data.slice(0, batchSize));\r\n      setHasMore(response.data.data.length > batchSize);\r\n      setLoadingMore(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching all data\", error);\r\n      setLoadingMore(false);\r\n    }\r\n  }, [selecteduser, StartDate, EndDate, search]);\r\n\r\n  const loadMoreRecords = () => {\r\n    if (loadingMore || !hasMore) return;\r\n    \r\n    setLoadingMore(true);\r\n    setTimeout(() => {\r\n      const nextPage = page + 1;\r\n      const nextRecords = allRecords.slice(0, nextPage * batchSize);\r\n      \r\n      setDisplayedRecords(nextRecords);\r\n      setPage(nextPage);\r\n      setHasMore(nextRecords.length < allRecords.length);\r\n      setLoadingMore(false);\r\n    }, 500);\r\n  };\r\n\r\n  const fetchPaginatedData = async (page, pageSize) => {\r\n    setLoadingMore(true);\r\n    try {\r\n      const response = await axios.get(\r\n        Source.getAddress() + \"/api/transformations\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            user_id: selecteduser?.id,\r\n            page: page,\r\n            perPage: pageSize,\r\n            isdelete: 0,\r\n            StartDate: StartDate && Date_Start,\r\n            EndDate: EndDate && Date_End,\r\n            search: search?.length ? search : \"false\",\r\n          },\r\n        }\r\n      );\r\n      \r\n      if (response.data.data.length >= 1) {\r\n        setRecords(response.data.data);\r\n        setTotalRows(response.data.total);\r\n      } else {\r\n        setRecords([]);\r\n        setTotalRows(0);\r\n      }\r\n      setLoadingMore(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching paginated data\", error);\r\n      setLoadingMore(false);\r\n    }\r\n  };\r\n\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    setPerPage(newPerPage);\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handleScroll = useCallback(() => {\r\n    if (!IsAll || loadingMore || !hasMore) return;\r\n    \r\n    const table = document.querySelector('.rdt_Table');\r\n    if (!table) return;\r\n    \r\n    const { scrollTop, scrollHeight, clientHeight } = table;\r\n    const isNearBottom = scrollHeight - (scrollTop + clientHeight) < 100;\r\n    \r\n    if (isNearBottom) {\r\n      loadMoreRecords();\r\n    }\r\n  }, [IsAll, loadingMore, hasMore, loadMoreRecords]);\r\n\r\n  useEffect(() => {\r\n    const table = document.querySelector('.rdt_Table');\r\n    if (table && IsAll) {\r\n      table.addEventListener('scroll', handleScroll);\r\n      return () => table.removeEventListener('scroll', handleScroll);\r\n    }\r\n  }, [IsAll, handleScroll]);\r\n\r\n  useEffect(() => {\r\n    if (IsAll) {\r\n      fetchAllData();\r\n    } else {\r\n      fetchPaginatedData(currentPage, perPage);\r\n    }\r\n  }, [IsAll, currentPage, perPage, EndDate, StartDate, selecteduser, search, fetchAllData]);\r\n\r\n\r\n  const CustomLoader = () => (\r\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" p={2}>\r\n      <CircularProgress size={24} />\r\n      <Box ml={2}>Loading more records...</Box>\r\n    </Box>\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchData(currentPage, perPage);\r\n  }, [currentPage, perPage, EndDate, StartDate, selecteduser, search,IsAll]);\r\n  const [optionsFrom, setOptionsFrom] = useState([]);\r\n  const handleName = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n    <div\r\n      dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n      className=\" me-1 ms-1 mt-5 h-100\"\r\n      style={{ width: \"99%\" }}\r\n      onClick={(e) => {\r\n        if (\r\n          e.target.className === \"container mt-5 w-100 h-100\" ||\r\n          e.target.className ===\r\n            \"col-12 w-100 row rounded-3 m-3 pe-5 p-1 bg-transparent\"\r\n        ) {\r\n        }\r\n      }}\r\n    >\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-info mb-1 p-1\"\r\n        style={{ width: \"100px\" }}\r\n        onClick={() => {\r\n          setAddTransformationModal(true);\r\n        }}\r\n      >\r\n        <FormattedMessage id=\"Add\"/>\r\n      </button>\r\n      <div\r\n        className=\"bg-light d-flex flex-column flex-lg-row justify-content-lg-between align-items-start align-items-lg-center\"\r\n        style={{ borderTop: \"5px solid #4a5cf2\" }}\r\n      >\r\n        <h2 className=\"m-2 fw-bold mb-4\"><FormattedMessage id=\"Transformations\"/>\r\n        </h2>\r\n        <div className=\"d-flex flex-column flex-lg-row align-items-start align-items-lg-center\">\r\n            <FormControlLabel\r\n              control={<Switch checked={IsAll} onChange={(e) => setIsAll(e.target.checked)} />}\r\n              label={<FormattedMessage id=\"All\" />}\r\n              sx={{ minWidth: 120 }}\r\n            />\r\n          <div className=\"mb-1 mb-lg-0 me-lg-2 mt-1 \">\r\n            <Datepicker_Customer\r\n              default_value={StartDate}\r\n              handle_date={handle_date}\r\n              lebal={<FormattedMessage id=\"Date\"/>}\r\n              setSelectedDay={setStartDate}\r\n              selectedDay={StartDate}\r\n            ></Datepicker_Customer>\r\n          </div>\r\n          <ListBox\r\n            options={users}\r\n            selectedOption={selecteduser}\r\n            setSelectedOption={setSelecteduser}\r\n          />\r\n        </div>\r\n        <input\r\n  className=\"form-control m-2 mb-2 mt-4\"\r\n  style={{ width: \"100%\", maxWidth: \"200px\" }}\r\n  type=\"search\"\r\n  onChange={handleName}\r\n  value={search}\r\n  placeholder={formatMessage({ id: \"Search\" })}\r\n  aria-label=\"Search\"\r\n/>\r\n      </div>\r\n      {/* <DataTable\r\n        columns={columns}\r\n        data={records}\r\n        progressPending={loading}\r\n        striped\r\n        responsive\r\n        highlightOnHover\r\n        pagination\r\n        paginationServer // فعال‌سازی صفحه‌بندی سرور ساید\r\n        paginationTotalRows={totalRows} // تعداد کل ردیف‌ها\r\n        onChangePage={handlePageChange} // تغییر صفحه\r\n        onChangeRowsPerPage={handlePerRowsChange} // تغییر تعداد ردیف‌ها در صفحه\r\n        localization={localization} // ارسال ترجمه‌ها\r\n      /> */}\r\n      {IsAll ? (\r\n        <DataTable\r\n          columns={columns}\r\n          data={displayedRecords}\r\n          progressPending={loadingMore}\r\n          striped\r\n          responsive\r\n          highlightOnHover\r\n          noHeader\r\n          progressComponent={<CustomLoader />}\r\n          style={{\r\n            height: \"calc(100vh - 250px)\",\r\n            overflowY: \"auto\",\r\n          }}\r\n        />\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={records}\r\n          progressPending={loadingMore}\r\n          striped\r\n          responsive\r\n          highlightOnHover\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          onChangePage={handlePageChange}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          localization={localization}\r\n        />\r\n      )}\r\n      <AddTransformation\r\n        records={records}\r\n        setRecords={setRecords}\r\n        AddTransformationModal={AddTransformationModal}\r\n        setOptionsFrom={setOptionsFrom}\r\n        optionsFrom={optionsFrom}\r\n        closeDialog={() => setAddTransformationModal(false)}\r\n      />\r\n      <EditTransformation\r\n        oldCom={oldCom}\r\n        setOldCom={setOldCom}\r\n        Transformation={Transformation}\r\n        setTransformation={setTransformation}\r\n        Checkbox={Checkbox}\r\n        setCheckbox={setCheckbox}\r\n        formattedValue={formattedValue}\r\n        setFormattedValue={setFormattedValue}\r\n        selectedOptionFrom={selectedOptionFrom}\r\n        selectedOptionTo={selectedOptionTo}\r\n        selectedOption={selectedOption}\r\n        setSelectedOption={setSelectedOption}\r\n        setSelectedOptionFrom={setSelectedOption}\r\n        setSelectedOptionTo={setSelectedOptionTo}\r\n        oldTransformation={oldTransformation}\r\n        setoldTransformat={setoldTransformation}\r\n        EditRow={EditRow}\r\n        setEditModal={setEditRow}\r\n        close={() => setEditModal(false)}\r\n        records={records}\r\n        setRecords={setRecords}\r\n        AddTransformationModal={EditModal}\r\n        setOptionsFrom={setOptionsFrom}\r\n        optionsFrom={optionsFrom}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport \"jalaali-react-date-picker/lib/styles/index.css\";\r\nimport { InputDatePicker } from \"jalaali-react-date-picker\";\r\nimport moment from 'moment-jalaali';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport zIndex from '@mui/material/styles/zIndex';\r\n\r\nexport default function Datepicker_customer({ handle_date,default_value ,lebal,setSelectedDay,selectedDay,onKeyDown,index=\"10000000000000\"}) {\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n  const handleDateChange = (date) => {  \r\n    setSelectedDay(date);\r\n        if(date!=null){\r\n        const handl={year:date._a[0],month:date._a[1]+1,day:date._a[2]}\r\n        // console.log(handl);\r\n      handle_date(handl);\r\n        } };\r\n  return (\r\n    <div className=\"col-3 m-2 mt-0 fw-normal\" style={{zIndex:index}}>\r\n      <label htmlFor=\"\" className='p-0 m-0 fw-bold'>{lebal}</label>\r\n      <InputDatePicker\r\n      // style={{zIndex:'10000000000000'}}\r\n        className='fw-normal afgFont'\r\n        onKeyDown={onKeyDown}\r\n        value={selectedDay}\r\n        sx={{\r\n          fontFamily: 'CustomFont1, sans-serif',\r\n          '& .MuiInputBase-input': {\r\n            fontFamily: 'CustomFont1, sans-serif !important'\r\n          }\r\n        }}\r\n        inputProps={{\r\n          style: {\r\n            fontFamily: 'CustomFont1' // ارث بری از تم\r\n          }\r\n        }}\r\n        popupStyles={{\r\n          fontFamily: \"'CustomFont1', sans-serif\",\r\n          // برای متن‌های داخل پاپ‌آپ تقویم\r\n          '& .jalaali-datepicker-header': {\r\n            fontFamily: \"'CustomFont1', sans-serif !important\",\r\n          },\r\n          '& .jalaali-datepicker-day-names': {\r\n            fontFamily: \"'CustomFont1', sans-serif !important\",\r\n          },\r\n          '& .jalaali-datepicker-days': {\r\n            fontFamily: \"'CustomFont1', sans-serif !important\",\r\n          },\r\n          '& .jalaali-datepicker-footer': {\r\n            fontFamily: \"'CustomFont1', sans-serif !important\",\r\n          },\r\n          '& *': {\r\n            fontFamily: \"'CustomFont1', sans-serif !important\",\r\n          }\r\n        }}\r\n        onChange={handleDateChange}\r\n        inputPlaceholder={settings[0].date === \"Persian\" ? 'تاریخ را وارد کنید' : 'Enter the date'}\r\n        locale={settings[0].date === \"Persian\" ? 'fa' : 'en'}\r\n        // locale='en'\r\n        colorPrimary=\"#0fbcf9\"\r\n        maximumDate={{ year: 9999, month: 12, day: 31 }}\r\n        minimumDate={{ year: 1, month: 1, day: 1 }}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState,useCallback } from 'react';\r\nimport Select ,{components}from 'react-select';\r\n\r\nconst ComboBox = ({isEditable=false,name, options,type,Onsearch,selectedOption,setSelectedOption,setAddBalanceModal}) => {\r\n  const handleChange = (selectedOption) => {\r\n      setSelectedOption(selectedOption);\r\n      Onsearch(selectedOption);\r\n};\r\nconst CustomMenuList = (props) => {\r\n  return (\r\n    <components.MenuList {...props}>\r\n      {props.children}\r\n     {type &&<div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          padding: \"10px\",\r\n          borderTop: \"1px solid #eaeaea\",\r\n          cursor: \"pointer\",\r\n          backgroundColor: \"#f9f9f9\",\r\n        }}\r\n        onClick={()=>setAddBalanceModal(true)}\r\n      >\r\n        {/* <strong>Add \"{searchQuery}\"</strong> */}\r\n        <strong>{name}</strong>\r\n      </div>}\r\n    </components.MenuList>\r\n  );\r\n};\r\n  return (\r\n    <div className='w-40'>\r\n      <Select\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={options}\r\n        getOptionLabel={(option) => (\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <span>{`${option.account_name} ${option.moneyType}`}</span>\r\n          </div>)}\r\n        getOptionValue={(option) => `${option.account_name} ${option.moneyType}`}\r\n        placeholder=\"Search...\"\r\n        isClearable\r\n        components={{ MenuList: CustomMenuList }}\r\n        isSearchable\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComboBox;\r\n"],"names":["Datepicker","_ref","handle_date","settings","default_value","lebal","onKeyDown","selectedDay","setSelectedDay","useState","_jsxs","className","children","_jsx","htmlFor","InputDatePicker","value","onChange","date","handl","year","_a","month","day","inputPlaceholder","locale","colorPrimary","maximumDate","minimumDate","isEditable","options","Onsearch","selectedOption","setSelectedOption","searchQuery","handleInputChange","formatMessage","useIntl","customStyles","menuPortal","base","_objectSpread","zIndex","Select","classNamePrefix","inputValue","onInputChange","getOptionLabel","option","style","display","alignItems","concat","account_name","moneyType","getOptionValue","placeholder","id","isClearable","isSearchable","isDisabled","styles","menuPortalTarget","document","body","getReports","createAsyncThunk","async","axios","get","Source","getAddress","headers","localStorage","getItem","params","query","data","reportSlice","createSlice","name","initialState","reports","loading","error","statusr","reducers","addReportToCache","state","action","push","payload","updateReportInCache","index","findIndex","report","deleteReportFromCache","filter","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","ListBox","width","isRTL","allUsersOption","FormattedMessage","updatedOptions","useEffect","control","fontFamily","backgroundColor","borderRadius","border","isFocused","boxShadow","minHeight","padding","textAlign","direction","menu","overflow","_ref2","isSelected","color","cursor","fontSize","singleValue","fontWeight","dropdownIndicator","input","dir","components","DropdownIndicator","_ref3","innerProps","ChevronDown","size","ClearIndicator","defaultProps","sselectedOption","Authorization","money","moneyId","then","res","prev","catch","er","formatNumber","number","toLocaleString","AddTransformation","AddTransformationModal","closeDialog","setOptionsFrom","optionsFrom","records","setRecords","showAlert","useShowAlert","dispatch","useDispatch","tempRecordfrom","settempRecordfrom","tempRecordto","settempRecordto","Checkbox","setCheckbox","amount","Todescription","Cdescription","errors","statuss","useSelector","Settings","Setsettings","length","getSettings","handleform","e","setTransformation","Transformation","target","to_description","com_description","handleChange","formattedValue","unformattedValue","replace","setFormattedValue","to_amount","from_amount","from_balance","to_balance","com_amount","com_balance","user_id","from_account_id","from_description","to_account_id","com_account_id","date_creation","Date","toISOString","searchQueryFrom","setSearchQueryFrom","selectedOptionFrom","setSelectedOptionFrom","msgDescription","setmsgDescription","moment","EndDate","setEndDate","searchQueryTo","setSearchQueryTo","selectedOptionTo","setSelectedOptionTo","optionsTo","setOptionsTo","setSearchQuery","setOptions","WhatsAppButton","phoneNumber","formattedMessage","encodeURIComponent","whatsappAppLink","window","location","href","handlleWhatsup","tempRecord","whatsup","tomessege","parseInt","serial","belance","whatsup_number","d","formattedDate","getFullYear","String","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes","aa","formattedHours","formattedMinutes","format","response","money_id","do","fetchData","close","overflowX","overflowY","height","type","onClick","ComboBoxTo","newValue","NumericFormat","thousandSeparator","readOnly","Datepicker_Customer","jalaliDate","now","jalaali","t","isoString","ComboBoxT","to_balance_balance","checked","marginBottom","Submit","position","icon","title","showConfirmButton","timer","fromselection","post","complete","checkto","checkco","add","bill","language","description","msgdate","messageTo","serialTo","belancefrom","from","belanceto","to","belancecom","com","customer","prevRecords","map","record","belancecom_report","belancefrom_report","belanceto_report","scope","handlleWhatsupfrom","src","Whatsupimg","alt","EditTransformation","oldCom","setOldCom","oldTransformation","setoldTransformat","ToOk","setToOk","maxWidth","type_id","for","class","_method","old","new","transformation","Transformations","selecteduser","setSelecteduser","users","statusu","IsAll","setIsAll","search","setSearch","isDesktop","setIsDesktop","innerWidth","setAddTransformationModal","StartDate","setStartDate","Date_Start","setDate_start","Date_End","setDate_end","_tempRecord$from","date_created","_tempRecord$from2","_tempRecord$from3","handlleWhatsupto","_tempRecord$from4","_tempRecord$from5","_tempRecord$from6","EditRow","setEditRow","EditModal","setEditModal","setoldTransformation","handlleEdit","row","_row$from","_row$belance","_row$to","_row$belance2","_row$com","_row$com2","_row$belance3","_row$belance3$com","_row$com3","_row$com4","_row$com5","_row$com6","_row$com7","_row$com8","_row$belance4","_row$com9","_row$from2","_row$from3","_row$to2","_row$to3","user","account","discription","columnsDesktopsimple","selector","justifyContent","minWidth","_row$from4","PDcolumn","_row$from5","_row$from6","_row$from7","cell","_row$to4","_row$to5","_row$from8","_row$from9","Pencil","columnsTablet","_row$to$account$accou","_row$to6","_row$from0","columnsDesktop","_row$to7","_row$to8","_row$from1","columns","useMemo","totalRows","setTotalRows","setLoading","currentPage","setCurrentPage","perPage","setPerPage","localization","pagination","rowsPerPage","previous","next","page","loadingMore","setLoadingMore","allRecords","setAllRecords","displayedRecords","setDisplayedRecords","hasMore","setHasMore","setPage","fetchAllData","useCallback","all","isdelete","slice","loadMoreRecords","setTimeout","nextPage","nextRecords","handleScroll","table","querySelector","scrollTop","scrollHeight","clientHeight","addEventListener","removeEventListener","pageSize","total","fetchPaginatedData","CustomLoader","Box","p","CircularProgress","ml","borderTop","FormControlLabel","Switch","label","sx","DataTable","progressPending","striped","responsive","highlightOnHover","noHeader","progressComponent","paginationServer","paginationTotalRows","onChangePage","onChangeRowsPerPage","newPerPage","Datepicker_customer","inputProps","popupStyles","setAddBalanceModal","MenuList","props"],"sourceRoot":""}