{"version":3,"file":"static/js/754.b029d022.chunk.js","mappings":"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","sources":["pages/forms/Belance.js","pages/CustomersEdit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Add from \"../../assets/icon/add.png\";\r\nimport axios from \"axios\";\r\nimport Source from \"../../Source\";\r\nimport Swal from \"sweetalert2\";\r\nimport { NumericFormat } from \"react-number-format\";\r\nimport { useRef } from \"react\";\r\nimport \"./Belance.css\";\r\nimport Updatemoney from \"./Updatemoney\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addBelanceToCache, getBelances ,updateBelanceInCache} from \"../Redux/belanceSlice\";\r\nimport { getMoneys ,updateMoneyInCache} from \"../Redux/moneysSlice\";\r\nimport { getCustomers } from \"../Redux/customerSlice\";\r\nimport { getReports } from \"../Redux/reportSlice\";\r\n\r\n\r\nexport default function Belance({\r\n  inputRef,\r\n  belancem,\r\n  setbelance,\r\n  close,\r\n  id,\r\n  accountbelance,\r\n  belance1,\r\n  openBelance,\r\n  setEditAccount,\r\n  moneys,\r\n  money,\r\n  setmoney,\r\n  customer,\r\n  setcustomer,\r\n  idprof,\r\n  prof,\r\n  setMoney\r\n}) {\r\n  // const dispatch = useDispatch();\r\n  // const { belances, errorb } = useSelector((state) => state.belances);\r\n  // const { moneys, errorm } = useSelector((state) => state.moneys);\r\n  // const { customers, errorc } = useSelector((state) => state.customers);\r\n \r\n  const belance = accountbelance;\r\n  // const currentTime = new Date();\r\n  // const currentHours = currentTime.getHours();\r\n  // const currentMinutes = currentTime.getMinutes();\r\n  // const currentYear = currentTime.getFullYear();\r\n  // const currentMonth = (currentTime.getMonth() + 1).toString().padStart(2, \"0\");\r\n  // const currentDay = currentTime.getDate();\r\n  // const time = \"\" + currentHours + \":\" + currentMinutes;\r\n  // const date = `${currentYear}-${currentMonth}-${currentDay}`;\r\n  const [addreport, setaddreport] = useState({\r\n    user: localStorage.getItem(\"userTokenid\"),\r\n    // delete: \"False\",\r\n    discription: \"\",\r\n    amount: \"\",\r\n    type: \"deposite\",\r\n    account: 0,\r\n    cash: 0,\r\n    date: \"\",\r\n  });\r\n  const [moneytype, setmoneytype] = useState(\"\");\r\n  const [updatebelance, setupdatebelance] = useState({\r\n    belance: 0,\r\n    account: 1,\r\n    type: 1,\r\n  });\r\n  const SendReport = () => {\r\n    if (\r\n      addreport.amount != 0 &&\r\n      addreport.amount != null &&\r\n      addreport.type != \"\" &&\r\n      moneytype != \"\"\r\n    ) {\r\n      const filteredBelance = accountbelance.filter(\r\n        (item) => item.type === Moneyid\r\n      );\r\n      if (filteredBelance.length === 0) {\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"Something went wrong !\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n        return;\r\n      }\r\n      let be1 = parseInt(filteredBelance[0].belance);\r\n      let amount = parseInt(addreport.amount);\r\n      let total = 0;\r\n      // if (addreport.type === \"deposite\") {\r\n      //   total = amount + be1;\r\n      //   filteredBelance[0][\"belance\"] = total;\r\n      // } else {\r\n      //   total = be1 - amount;\r\n      //   filteredBelance[0][\"belance\"] = total;\r\n      // }\r\n      // setupdatebelance({\r\n      //   ...updatebelance,\r\n      //   type: parseInt(filteredBelance[0][\"type\"]),\r\n      //   belance: parseInt(filteredBelance[0][\"belance\"]),\r\n      //   account: parseInt(filteredBelance[0][\"account\"]),\r\n      // });\r\n      const uploadData = new FormData();\r\n      let addRe={\r\n      user_id: localStorage.getItem(\"userTokenid\"),\r\n      discription: \"\",\r\n      amount: \"\",\r\n      type: \"deposite\",\r\n      account_id: 0,\r\n      isdelete: 0,\r\n      cash: 0,\r\n      date_created: \"\"}\r\n    addRe.discription=addreport.discription;\r\n    addRe.amount=addreport.amount;\r\n    addRe.type=addreport.type;\r\n    addRe.account_id=addreport.account;\r\n    addRe.cash=addreport.cash;\r\n    let date =new Date();\r\n    addRe.date_created=date.toISOString();\r\n    // console.log(addRe);\r\n      axios\r\n        .post(`${Source.getAddress()}/api/report/`, addRe, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`, // Add the access token here\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setmoneytype('');\r\n          setFormattedValue('');\r\n          setaddreport({\r\n            user: localStorage.getItem(\"userTokenid\"),\r\n            // delete: \"False\",\r\n            discription: \"\",\r\n            amount: \"\",\r\n            type: \"deposite\",\r\n            account: 0,\r\n            cash: 0,\r\n            date: \"\",\r\n          });\r\n          let add_cash = response.data.belance;\r\n          let update_money = response.data.moneys;\r\n          setbelance(\r\n            belance.map((a) => (a.id === add_cash.id ? add_cash : a))\r\n          );\r\n          setshowbelance(\r\n            showbelance.map((a) => (a.id === add_cash.id ? add_cash : a))\r\n          );\r\n          // dispatch(updateBelanceInCache(add_cash));\r\n          // dispatch(updateMoneyInCache(update_money));\r\n          setEditAccount(\r\n            accountbelance.map((a) => (a.id === add_cash.id ? add_cash : a))\r\n          )\r\n          \r\n          // const filteredMoney = money.filter(\r\n          //   (item) => item.id === filteredBelance[0][\"type\"]\r\n          // );\r\n          // // money\r\n          // let cash_primary = parseInt(filteredMoney[0][\"cach\"]);\r\n          // let money_update = {\r\n          //   cach: cash_primary,\r\n          // };\r\n          // if (addreport.type === \"deposite\") {\r\n          //   money_update.cach += amount;\r\n          // } else {\r\n          //   money_update.cach -= amount;\r\n          // }\r\n\r\n          // const filteredMoney = money.filter(\r\n          //   (item) => item.id === filteredBelance[0][\"type\"]\r\n          // );\r\n          // // money\r\n          // let cash_primary = parseInt(filteredMoney[0][\"cach\"]);\r\n          // let money_update = {\r\n          //   cach: cash_primary,\r\n          // };\r\n          // uploadData.append(\"user\", localStorage.getItem(\"userTokenid\"));\r\n          // uploadData.append(\"isdelete\", \"False\");\r\n          // uploadData.append(\"type\", parseInt(filteredBelance[0][\"type\"]));\r\n          // uploadData.append(\"belance\", parseInt(filteredBelance[0][\"belance\"]));\r\n          // uploadData.append(\"account\", parseInt(filteredBelance[0][\"account\"]));\r\n          // uploadData.append(\"ontransaction\", \"True\");\r\n                  Swal.fire({\r\n                    position: \"top-end\",\r\n                    icon: \"success\",\r\n                    title: \"Add successfully!\",\r\n                    showConfirmButton: false,\r\n                    timer: 600,\r\n                  });         \r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: \"something went wrong !\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title: \"You must full amount money type and type inputs !\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    }\r\n    // dispatch(getBelances());\r\n    // dispatch(getMoneys());\r\n    // dispatch(getReports());\r\n  };\r\n\r\n  const handlereport = (e) => {\r\n    setaddreport({\r\n      ...addreport,\r\n      [e.target.name]: e.target.value,\r\n      user: parseInt(localStorage.getItem(\"userTokenid\")),\r\n    });\r\n  };\r\n  const [Moneyid,setMoneyid]=useState('');\r\n  const handleType = (e) => {\r\n    const filteredBelance = belance.filter(\r\n      (item) => item.moneyType === e.target.value\r\n    );\r\n    setMoneyid(filteredBelance[0].type);\r\n    setmoneytype(e.target.value);\r\n    setaddreport({\r\n      ...addreport,\r\n      account: filteredBelance[0].id,\r\n    });\r\n  };\r\n\r\n  let Accountbelance = accountbelance;\r\n  // const [money, setmoney] = useState(moneys);\r\n  let valaidmoney = [];\r\n  const [showbelance, setshowbelance] = useState([]);\r\n  // console.log(money);\r\n  // console.log(accountbelance);\r\n  const algorithm = () => {\r\n    // بررسی اینکه آیا money آرایه‌ای معتبر است\r\n    if (Array.isArray(money) && money.length > 0) {\r\n      const valaidmoney = [];\r\n  \r\n      money.forEach((el) => {\r\n        // بررسی اینکه آیا el.id مقدار معتبر دارد\r\n        if (el && el.id !== undefined && el.id !== null) {\r\n          if (Array.isArray(accountbelance) && accountbelance.length > 0) {\r\n            // بررسی اینکه آیا el.id در accountbelance وجود دارد\r\n            const isExistInAccount = accountbelance.some(\r\n              (element) => element.type_id === el.id\r\n            );\r\n  \r\n            // اگر در accountbelance وجود نداشت، به valaidmoney اضافه شود\r\n            if (!isExistInAccount) {\r\n              valaidmoney.push(el);\r\n            }\r\n          } else {\r\n            // اگر accountbelance خالی باشد، تمام مقادیر money اضافه شوند\r\n            valaidmoney.push(el);\r\n          }\r\n        }\r\n      });\r\n  \r\n      // به‌روزرسانی state تنها در صورتی که valaidmoney دارای داده باشد\r\n      setshowbelance(valaidmoney.length > 0 ? valaidmoney : []);\r\n    } else {\r\n      console.warn(\"Invalid money array or empty array.\");\r\n    }\r\n  };\r\n  \r\n    \r\n  const [addmoneybelance, setmoneybelance] = useState({\r\n    belance: 0,\r\n    account: 0,\r\n    type: 0,\r\n    delete: \"False\",\r\n    user: 0,\r\n  });\r\n  const handleAll = (e) => {\r\n    setmoneybelance({\r\n      ...addmoneybelance,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  // useEffect(() => {\r\n  //   axios.get(Source.getAddress() + '/api/money', {\r\n  //     headers: {\r\n  //       'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //     },params: {\r\n  //       delete: 0,\r\n  //     },\r\n  //   }).then((res)=>{\r\n  //     // console.log(res);\r\n  //     setmoney(res.data);\r\n  //     // setRecords(res.data);\r\n  //   }).catch((err)=>{\r\n  //     console.log(err);\r\n  //   });\r\n    // axios\r\n    //   .get(Source.getAddress() + \"/api/money/\", {\r\n    //     headers: {\r\n    //       Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n    //     },params: {\r\n    //       delete: 0,\r\n    //     }\r\n    //   })\r\n    //   .then((res) => {\r\n    //     setmoney(res.data);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //     Swal.fire({\r\n    //       position: \"top-end\",\r\n    //       icon: \"error\",\r\n    //       title: \"System can not give the money list !\",\r\n    //       showConfirmButton: false,\r\n    //       timer: 1500,\r\n    //     });\r\n    //   });\r\n  // }, []);\r\n\r\n  const addmoney = (type_money) => {\r\n    let add = {\r\n      id: 0,\r\n      account: 1,\r\n      type: 1,\r\n      user: 0,\r\n      belance: 0,\r\n      delete: \"False\",\r\n      moneyType: \"\",\r\n    };\r\n    setmoneybelance({\r\n      ...addmoneybelance,\r\n      type: type_money.id,\r\n    });\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"isdelete\", \"False\");\r\n    uploadData.append(\"user\", localStorage.getItem(\"userTokenid\"));\r\n    uploadData.append(\"type\", type_money.id);\r\n    uploadData.append(\"account\", id);\r\n    const date = new Date();\r\n    let addbelance = {\r\n      isdelete: 0,\r\n      user_id: localStorage.getItem(\"userTokenid\"),\r\n      type_id: type_money.id,\r\n      account_id: id,\r\n      belance:\"0\",\r\n      date_created:date.toISOString()\r\n    };\r\n    axios\r\n      .post(Source.getAddress() + \"/api/belance\", addbelance, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        add = res.data.belance;\r\n        setEditAccount([...accountbelance, add]);\r\n        setshowbelance((pre) =>\r\n          pre.filter((item) => item.id !== add.id)\r\n        );\r\n        // dispatch(addBelanceToCache(add));\r\n        // let update_customer={\r\n        //   ontransaction:1\r\n        // }\r\n        // uploadData.append(\"user\", customer.user);\r\n                Swal.fire({\r\n                  position: \"top-end\",\r\n                  icon: \"success\",\r\n                  title: \"Updated successfully!\",\r\n                  showConfirmButton: false,\r\n                  timer: 600,\r\n                });         \r\n        // uploadData.append(\"name\", customer.name);\r\n        // uploadData.append(\"ontransaction\", \"True\");\r\n       })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"Something went wrong !\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n  const [formattedValue, setFormattedValue] = useState(\"\");\r\n  // const [unformattedValue, setUnformattedValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    let datetime = new Date();\r\n    const jalaliDate12 = {\r\n      year: datetime.getFullYear(),\r\n      month: datetime.getMonth() + 1,\r\n      day: datetime.getDay(),\r\n    };\r\n    const { year, month, day } = jalaliDate12;\r\n    const t = new Date();\r\n    const date = new Date();\r\n    const isoString = date.toISOString();\r\n    const formattedValue = e.target.value;\r\n    const unformattedValue = formattedValue.replace(/,/g, \"\").replace(\"$\", \"\");\r\n    setFormattedValue(formattedValue);\r\n    setaddreport({\r\n      ...addreport,\r\n      amount: unformattedValue,\r\n      date: isoString,\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      className={`container rounded-5 pe-0 ps-0 resB popup ${\r\n        openBelance ? \"show\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"d-flex justify-content-end p-0 m-0\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close align-self-end p-3 m-1 mt-0 hover_btn\"\r\n          onClick={close}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n      <div\r\n        className=\" bg-white container mt-0 p-1 pt-0 col-lg-8 rounded-5\"\r\n        style={{ width: \"94%\" }}\r\n      >\r\n        <h1\r\n          className=\"text-center rounded m-0 p-4 text-light mt-0\"\r\n          style={{ backgroundColor: \"var(--bs-info)\" }}\r\n        >\r\n          Availability\r\n        </h1>\r\n        <div className=\"balance-container row mt-4 p-4 pb-0 mb-0\">\r\n          {accountbelance &&\r\n            accountbelance.map((row) => (\r\n              <div className=\"col-12 col-md-3 mb-3\" key={row.id}>\r\n                <div\r\n                  className=\"card border-0\"\r\n                  style={{ color: \"white\", backgroundColor: \"#5394a1\" }}\r\n                >\r\n                  <div className=\"card-body py-4\">\r\n                    <h5 className=\"mb-2 fw-bold text-capitalize\">\r\n                      {row.moneyType}\r\n                    </h5>\r\n                    <p className=\"mb-2 fw-bold\">{row.belance} Available</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          <div className=\"col-12 col-md-3 mb-3\">\r\n            <div\r\n              className=\"card border-0\"\r\n              style={{ color: \"white\", backgroundColor: \"#5394a1\" }}\r\n            >\r\n              <div\r\n                className=\"btn-group dropdown\"\r\n                style={{ color: \"white\", backgroundColor: \"#5394a1\" }}\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => algorithm()}\r\n                  className=\"btn btn-secondary dropdown-toggle\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                  style={{ color: \"white\", backgroundColor: \"#5394a1\" }}\r\n                >\r\n                  <p>Add Balance</p>\r\n                  <img\r\n                    src={Add}\r\n                    alt=\"Add\"\r\n                    style={{ height: \"40%\", width: \"20%\" }}\r\n                  />\r\n                </button>\r\n                <ul className=\"dropdown-menu pe-5\">\r\n                  {showbelance.length > 0 ? (\r\n                    showbelance.map((row) => (\r\n                      <li key={row.id}>\r\n                        <button\r\n                          onClick={() => {\r\n                            addmoney(row);\r\n                          }}\r\n                          className=\"dropdown-item fw-bold\"\r\n                          type=\"button\"\r\n                        >\r\n                          {row.name}\r\n                        </button>\r\n                      </li>\r\n                    ))\r\n                  ) : (\r\n                    <li>\r\n                      <button className=\"dropdown-item fw-bold\" type=\"button\">\r\n                        Empty\r\n                      </button>\r\n                    </li>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <form className=\"form-section col-12 w-100 row rounded-3 m-3 pe-5 p-1 bg-transparent pt-0 mt-0 mb-0\">\r\n          <div className=\"col-12 col-md-4 m-2 mt-3 ps-2 p-0\">\r\n            <div className=\"form-floating\">\r\n              <textarea\r\n                name=\"discription\"\r\n                ref={inputRef}\r\n                onChange={(e) => {\r\n                  handlereport(e);\r\n                }}\r\n                value={addreport.discription}\r\n                className=\"form-control h-50 px-5\"\r\n                placeholder=\"Leave a comment here\"\r\n                id=\"floatingTextarea2\"\r\n              ></textarea>\r\n              <label htmlFor=\"floatingTextarea2\">Description</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-2 m-2 mb-3 mt-3 p-0 px-3\">\r\n            <label for=\"price\">Amount</label>\r\n            <NumericFormat\r\n              thousandSeparator={true}\r\n              name=\"amount\"\r\n              className=\"form-control\"\r\n              value={formattedValue}\r\n              placeholder=\"0\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-2 m-2 mt-3 px-3\">\r\n            <label htmlFor=\"category\">Money Type</label>\r\n            <select\r\n              name=\"type1\"\r\n              id=\"category\"\r\n              onChange={handleType}\r\n              value={moneytype}\r\n              className=\"form-select\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select\r\n              </option>\r\n              {accountbelance &&\r\n                accountbelance.map((row) => (\r\n                  <option key={row.id} value={row.moneyType}>\r\n                    {row.moneyType}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"col-12 col-md-2 m-2 mt-3 px-3\">\r\n            <label htmlFor=\"category\">Type</label>\r\n            <select\r\n              name=\"type\"\r\n              id=\"category\"\r\n              onChange={handlereport}\r\n              value={addreport.type}\r\n              className=\"form-select\"\r\n            >\r\n              <option value=\"deposite\">Deposite</option>\r\n              <option value=\"withdraw\">Withdraw</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-12 col-md-1 p-0 mt-3\">\r\n            <button\r\n              onClick={SendReport}\r\n              type=\"button\"\r\n              className=\"btn btn-success w-100 mt-4\"\r\n            >\r\n              ADD\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Source from \"../Source\";\r\nimport Swal from \"sweetalert2\";\r\nimport Profile from \"../assets/icon/profile.png\";\r\nimport IdNational from \"../assets/icon/national_id.png\";\r\nimport './edite.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addCustomerToCache, updateCustomerInCache } from \"./Redux/customerSlice\";\r\nimport { showAlert } from \"../warrper\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useShowAlert  } from \"../warrper\";\r\nexport default function CustomersEdit({\r\n  id,\r\n  close,\r\n  account,\r\n  setAccount,\r\n  edit,\r\n  records,\r\n  setRecords,\r\n  inputRef,loading,setLoading\r\n}) {\r\n  const showAlert = useShowAlert(); \r\n  const [profile_picture, setProfilePicture] = useState(null);\r\n  const [national_id_picture, setNationalIdPicture] = useState(null);\r\n  const [serial,setserial]=useState();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const fetchAndSetImage = async (url, setImage) => {\r\n      try {\r\n        // const response = await fetch(url);\r\n        const response = await fetch(url, {\r\n          mode: 'no-cors', // فعال کردن حالت CORS\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('access')}`, // اگر توکن لازم است، می‌توانید این هدر را تنظیم کنید\r\n          },\r\n        });\r\n        if(!response.ok){\r\n          console.log(response);\r\n        }\r\n        const blob = await response.blob();\r\n        const filename = url.substring(url.lastIndexOf(\"/\") + 1);\r\n        const file = new File([blob], filename, {\r\n          lastModified: new Date().getTime(),\r\n          type: blob.type,\r\n        });\r\n        console.log(file);\r\n        setImage(file);\r\n      } catch (error) {\r\n        console.error(\"Error converting URL to File:\", error);\r\n      }\r\n    };\r\n    if (\r\n      account.profile_picture &&\r\n      typeof account.profile_picture === \"string\"\r\n    ) {\r\n      fetchAndSetImage(account.profile_picture, setProfilePicture);\r\n    }\r\n    if (\r\n      account.national_id_picture &&\r\n      typeof account.national_id_picture === \"string\"\r\n    ) {\r\n      fetchAndSetImage(account.national_id_picture, setNationalIdPicture);\r\n    }\r\n  }, [account.profile_picture, account.national_id_picture]);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchAndSetImage = async (url, setImage) => {\r\n  //     try {\r\n  //       // اینجا از blob صرف نظر می‌کنیم و فقط فایل را از URL ایجاد می‌کنیم\r\n  //       const filename = url.substring(url.lastIndexOf(\"/\") + 1);\r\n\r\n  //       // ایجاد فایل جدید از URL\r\n  //       const file = new File([], filename, {\r\n  //         lastModified: new Date().getTime(),\r\n  //         type: \"image/jpeg\", // نوع فایل را اینجا مشخص می‌کنید\r\n  //       });\r\n\r\n  //       // به‌روزرسانی state با فایل\r\n  //       setImage(file);\r\n  //       console.log(file);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error converting URL to File:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   // بررسی و بازیابی تصویر پروفایل\r\n  //   if (account.profile_picture && typeof account.profile_picture === \"string\") {\r\n  //     fetchAndSetImage(account.profile_picture, setProfilePicture);\r\n  //   }\r\n\r\n  //   // بررسی و بازیابی تصویر کارت ملی\r\n  //   if (account.national_id_picture && typeof account.national_id_picture === \"string\") {\r\n  //     fetchAndSetImage(account.national_id_picture, setNationalIdPicture);\r\n  //   }\r\n  // }, []);\r\n\r\n\r\n\r\n  const [profile_picture1, setProfilePicture1] = useState(null);\r\n  const [national_id_picture1, setNationalIdPicture1] = useState(null);\r\n\r\n  const handleImageChange = (event) => {\r\n    const selectedImage = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (event.target.name === \"profile_picture\") {\r\n        setProfilePicture1(selectedImage);\r\n        setAccount((prevState) => ({\r\n          ...prevState,\r\n          profile_picture: reader.result,\r\n        }));\r\n      } else if (event.target.name === \"national_id_picture\") {\r\n        setNationalIdPicture1(selectedImage);\r\n        setAccount((prevState) => ({\r\n          ...prevState,\r\n          national_id_picture: reader.result,\r\n        }));\r\n      }\r\n    };\r\n    reader.readAsDataURL(selectedImage);\r\n  };\r\n//   const Edit_Account = () => {\r\n//     console.log(account.id);\r\n//     const uploadData = new FormData();\r\n\r\n    // let update = {\r\n    //     id: account.id,\r\n    //     isdelete: \"False\",\r\n    //     user: 0,\r\n    //     name: \"\",\r\n    //     date_created: \"\",\r\n    //     father_name: \"\",\r\n    //     national_id_number: \"\",\r\n    //     phone_number: \"\",\r\n    //     whatsup_number: 0,\r\n    //     addresss: \"\",\r\n    //     profile_picture: \"\",\r\n    //     national_id_picture: \"\",\r\n    //     user_name: \"\",\r\n    // };\r\n\r\n    // update.date_created = account.date_created;\r\n    // update.user_name = account.user_name;\r\n\r\n//     if (profile_picture1) {\r\n//         uploadData.append(\"profile_picture\", profile_picture1);\r\n//         console.log(profile_picture1);\r\n        // update.profile_picture = profile_picture1;  // Update to use new picture\r\n//     } else {\r\n        // update.profile_picture = account.profile_picture;  // Fallback to existing\r\n//     }\r\n\r\n//     if (national_id_picture1) {\r\n//         console.log(national_id_picture1);\r\n//         uploadData.append(\"national_id_picture\", national_id_picture1);\r\n        // update.national_id_picture = national_id_picture1;  // Update to use new ID picture\r\n//     } else {\r\n//         update.national_id_picture = account.national_id_picture;  // Fallback to existing\r\n//     }\r\n\r\n//     uploadData.append(\"isdelete\", 0);\r\n//     uploadData.append(\"user_id\", localStorage.getItem(\"userTokenid\"));\r\n    // update.isdelete = 0;\r\n    // update.user = account.user;\r\n    // update.national_id_number = account.national_id_number;\r\n//     uploadData.append(\"national_id_number\", account.national_id_number);\r\n    // update.addresss = account.addresss;\r\n//     uploadData.append(\"addresss\", account.addresss);\r\n    // update.whatsup_number = account.whatsup_number;\r\n//     uploadData.append(\"whatsup_number\", account.whatsup_number);\r\n    // update.name = account.name;\r\n//     uploadData.append(\"name\", account.name);\r\n    // update.father_name = account.father_name;\r\n//     uploadData.append(\"father_name\", account.father_name);\r\n    // update.phone_number = account.phone_number;\r\n//     uploadData.append(\"phone_number\", account.phone_number);\r\n\r\n//     console.log(update);\r\n\r\n//     fetch(`${Source.getAddress()}/api/customers/${account.id}/`, {\r\n//         method: \"PUT\",\r\n//         headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n            // \"Content-Type\": \"application/json\",\r\n//             // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n//         },\r\n//         body: uploadData,\r\n//     })\r\n//     .then((res) => {\r\n//         if (!res.ok) {\r\n//             throw new Error('Network response was not ok');\r\n//         }\r\n//         return res.json();\r\n//     })\r\n//     .then((data) => {\r\n//         console.log(data);\r\n//         showAlert({\r\n//             position: \"top-end\",\r\n//             icon: \"success\",\r\n//             title: \"Updated successfully!\",\r\n//             showConfirmButton: false,\r\n//             timer: 1500,\r\n//         });\r\n//         setRecords(records.map((a) => (a.id === update.id ? update : a)));\r\n//         close();\r\n//     })\r\n//     .catch((error) => { \r\n//         console.error(error);\r\n//         showAlert({\r\n//             position: \"top-end\",\r\n//             icon: \"error\",\r\n//             title: \"Something went wrong!\",\r\n//             showConfirmButton: false,\r\n//             timer: 1500,\r\n//         });\r\n//     });\r\n// };\r\n\r\n\r\n// import axios from 'axios';\r\n// import Swal from 'sweetalert2';\r\n\r\n// import axios from 'axios';\r\n// import Swal from 'sweetalert2';\r\n\r\n// const Edit_Account = () => {\r\n//   const uploadData = new FormData();\r\n\r\n//   // Gather data from the account\r\n//   const update = {\r\n//       id: account.id,\r\n//       // سایر داده‌ها\r\n//   };\r\n\r\n//   // چک کردن فیلدهای ضروری\r\n//   // const requiredFields = ['name', 'father_name', 'national_id_number', 'phone_number', 'addresss'];\r\n//   // const missingFields = requiredFields.filter(field => !update[field]);\r\n\r\n//   // if (missingFields.length > 0) {\r\n//   //     showAlert({\r\n//   //         icon: \"error\",\r\n//   //         title: \"Missing Fields\",\r\n//   //         text: `Please fill in the following fields: ${missingFields.join(', ')}`,\r\n//   //     });\r\n//   //     return;\r\n//   // }\r\n\r\n//   // اضافه کردن تصاویر به uploadData به صورت Blob\r\n//   if (profile_picture1) {\r\n//     console.log(profile_picture1);\r\n//       uploadData.append(\"profile_picture\", profile_picture1);\r\n//   }\r\n\r\n//   if (national_id_picture1) {\r\n//     console.log(national_id_picture1);\r\n//       uploadData.append(\"national_id_picture\", national_id_picture1);\r\n//   }\r\n\r\n//   // اضافه کردن سایر داده‌ها\r\n//   uploadData.append(\"name\", account.name);\r\n//   uploadData.append(\"father_name\", account.father_name);\r\n//   uploadData.append(\"national_id_number\", account.national_id_number);\r\n//   uploadData.append(\"phone_number\", account.phone_number);\r\n//   uploadData.append(\"whatsup_number\", account.whatsup_number);\r\n//   uploadData.append(\"addresss\", account.addresss);\r\n\r\n//   // Send PUT request\r\n//   axios.put(`${Source.getAddress()}/api/customers/${account.id}/`, uploadData, {\r\n//       headers: {\r\n\r\n//           Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n//       },\r\n//   })\r\n//   .then((res) => {\r\n//     console.log(res)\r\n//       showAlert({\r\n//           position: \"top-end\",\r\n//           icon: \"success\",\r\n//           title: \"Updated successfully!\",\r\n//           showConfirmButton: false,\r\n//           timer: 1500,\r\n//       });\r\n      // setRecords(records.map((a) => (a.id === update.id ? { ...update, ...res.data } : a)));\r\n//       close();\r\n//   })\r\n//   .catch((error) => {\r\n//     console.log(error);\r\n//       // خطاها را مدیریت کنید\r\n//   });\r\n// };\r\n\r\n\r\n\r\n\r\n  const Edit_Account = () => {\r\n    const uploadData = new FormData();\r\n    console.log(account);\r\n    let update = {\r\n      id: account.id,\r\n      isdelete: 0,\r\n      user: 0,\r\n      name: \"\",\r\n      date_created: \"\",\r\n      father_name: \"\",\r\n      national_id_number: \"\",\r\n      phone_number: \"\",\r\n      whatsup_number: 0,\r\n      addresss: \"\",\r\n      profile_picture: \"\",\r\n      national_id_picture: \"\",\r\n      user_name: \"\",\r\n  };\r\n  update.date_created = account.date_created;\r\n  update.user_name = account.user_name;\r\n    uploadData.append(\"_method\", 'PUT');\r\n    update.isdelete = 0;\r\n    update.user = account.user;\r\n    update.national_id_number = account.national_id_number;\r\n    update.addresss = account.addresss;\r\n    update.whatsup_number = account.whatsup_number;\r\n    update.name = account.name;\r\n    update.father_name = account.father_name;\r\n    update.phone_number = account.phone_number;\r\n\r\n    // Update fields\r\n    uploadData.append(\"isdelete\", 0);\r\n    // uploadData.append(\"user_id\", account.user.id);\r\n    account.national_id_number && uploadData.append(\"national_id_number\", account.national_id_number);\r\n    account.addresss && uploadData.append(\"addresss\", account.addresss);\r\n    account.whatsup_number && uploadData.append(\"whatsup_number\", account.whatsup_number);\r\n    account.name && uploadData.append(\"name\", account.name);\r\n    account.father_name && uploadData.append(\"father_name\", account.father_name);\r\n    account.phone_number && uploadData.append(\"phone_number\", account.phone_number);\r\n    uploadData.append(\"whatsup\", account.whatsup);\r\n    \r\n    if(account.serial){\r\n      uploadData.append(\"serial\", account.serial);\r\n      }\r\n    // Append files if they exist\r\n    if (profile_picture1) {\r\n      uploadData.append(\"profile_picture\", profile_picture1); // Ensure this is a file\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n        update.profile_picture = reader.result;  // Update to use new picture\r\n      }\r\n      reader.readAsDataURL(profile_picture1);\r\n\r\n    }\r\n  \r\n    if (national_id_picture1) {\r\n    const reader = new FileReader();\r\n      // update.national_id_picture = national_id_picture1;  // Update to use new ID picture\r\n      uploadData.append(\"national_id_picture\", national_id_picture1); // Ensure this is a file\r\n      reader.onload = () => {\r\n        update.national_id_picture = reader.result;  // Update to use new picture\r\n      }\r\n      reader.readAsDataURL(national_id_picture);\r\n      // console.log(\"National ID Picture:\", national_id_picture1);\r\n    }\r\n  \r\n    // Make the API call\r\n    axios\r\n      .post(Source.getAddress() + \"/api/customers/\" + `${account.id}`, uploadData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          // Do NOT set 'Content-Type' header here\r\n        },\r\n      })\r\n      .then((res) => {\r\n      setRecords(records.map((a) => (a.id === update.id ? res.data.customer  : a)));\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          // title: \"Updated successfully!\",\r\n               title: <FormattedMessage id=\"Updated Successfully!\"/>,\r\n          \r\n          showConfirmButton: false,\r\n          timer: 600,\r\n        });           \r\n        // setRecords(records.map((a) => (a.id === account.id ? res.data.account : a)));\r\n        close();\r\n      })  \r\n      .catch((error) => {\r\n        // console.log(\"Error:\", error);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          // title: \"Something went wrong!\",\r\n                   title: <FormattedMessage id=\"Not Updated Successfully!\"/>,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n  \r\n  const handleAll = (e) => {\r\n    setAccount({\r\n      ...account,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // const handleImageChange = (event, setImageState, setAccountImageField) => {\r\n  //   const selectedImage = event.target.files[0];\r\n  //   setImageState(selectedImage);\r\n  //   const reader = new FileReader();\r\n  //   reader.onload = () => {\r\n  //     setAccount((prevState) => ({\r\n  //       ...prevState,\r\n  //       [setAccountImageField]: reader.result,\r\n  //     }));\r\n  //   };\r\n  //   reader.readAsDataURL(selectedImage);\r\n  // };\r\n\r\n  const buttonRef = useRef(null);\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Check if the Enter key was pressed\r\n      e.preventDefault(); // Prevent default action if needed\r\n      if (buttonRef.current && edit) {\r\n        buttonRef.current.click(); // Programmatically click the button\r\n      }\r\n    }\r\n  };\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n<div\r\n  className={`container rounded-5 customer popup ${edit ? \"show\" : \"\"}`}\r\n  style={{\r\n    overflowX: \"auto\",\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#f8f9fa\",\r\n    padding: \"10px\",\r\n  }}\r\n>\r\n  <div className=\"d-flex justify-content-end\">\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn-close align-self-end p-2 h-25 m-1 mt-0 hover_btn\"\r\n      onClick={close}\r\n      aria-label=\"Close\"\r\n      style={{ fontSize: \"0.5rem\" }}\r\n    ></button>\r\n  </div>\r\n  <div\r\n    className=\"h-50 rounded-5\"\r\n    style={{ transition: \"all\", transitionDuration: 1000 }}\r\n  >\r\n    <div className=\"row\" style={{ flexWrap: \"wrap\", margin: 0 }}>\r\n      <h1\r\n        className=\"text-center rounded text-light\"\r\n        style={{ \r\n          backgroundColor: \"var(--bs-info)\", \r\n          width: \"100%\",\r\n          fontSize: '1rem',\r\n          height: '1rem',\r\n          padding: '1.5rem',\r\n        }}\r\n      >\r\n        <FormattedMessage id=\"Edit Account\" />\r\n      </h1>\r\n      <div\r\n        className=\"col-12 col-md-4 d-flex flex-column align-items-center\"\r\n        style={{ maxWidth: \"100%\", padding: \"0 10px\" }}\r\n      > \r\n        <div>\r\n          <img\r\n            className=\"td_img rounded\"\r\n            src={account.profile_picture || Profile}\r\n            style={{ height: \"100px\", width: \"100px\", objectFit: \"cover\" }}\r\n            alt=\"Profile\"\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"col-12 mt-1 mb-3\"\r\n          style={{ maxWidth: \"100%\", padding: \"0 10px\" }}\r\n        >\r\n          <label htmlFor=\"profile_picture\" style={{ fontWeight: \"bold\", fontSize: \"0.8rem\" }}>\r\n            <FormattedMessage id=\"ProFile Picture\" />\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/jpeg\"\r\n            name=\"profile_picture\"\r\n            onChange={(e) => {\r\n              handleImageChange(e);\r\n            }}\r\n            className=\"form-control\"\r\n            style={{ width: \"100%\", fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <img\r\n            className=\"td_img rounded\"\r\n            src={account.national_id_picture || IdNational}\r\n            style={{ height: \"100px\", width: \"100px\", objectFit: \"cover\" }}\r\n            alt=\"National ID\"\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"col-12 mt-1\"\r\n          style={{ maxWidth: \"100%\", padding: \"0 10px\" }}\r\n        >\r\n          <label\r\n            htmlFor=\"national_id_picture\"\r\n            style={{ fontWeight: \"bold\", fontSize: \"0.8rem\" }}\r\n          >\r\n            <FormattedMessage id=\"National Id Picture\" />\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            name=\"national_id_picture\"\r\n            onChange={(e) => {\r\n              handleImageChange(e);\r\n            }}\r\n            className=\"form-control\"\r\n            style={{ width: \"100%\", fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"col-12 col-md-4 mt-3\"\r\n        style={{ maxWidth: \"100%\", padding: \"0 10px\" }}\r\n      >\r\n        <label htmlFor=\"name\" style={{ fontWeight: \"bold\", fontSize: \"0.8rem\" }}>\r\n          <FormattedMessage id=\"Name\" />\r\n        </label>\r\n        <input\r\n          onKeyDown={handleKeyDown}\r\n          ref={inputRef}\r\n          onChange={handleAll}\r\n          value={account.name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder={formatMessage({ id:\"Name\" })}\r\n          // placeholder=\"Name\"\r\n          className=\"form-control mb-2\"\r\n          style={{ width: \"100%\", fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n        />\r\n        <label\r\n          htmlFor=\"father_name\"\r\n          style={{ fontWeight: \"bold\", fontSize: \"0.8rem\" }}\r\n        >\r\n          <FormattedMessage id=\"Father Name\" />\r\n        </label>\r\n        <input\r\n          onKeyDown={handleKeyDown}\r\n          onChange={handleAll}\r\n          value={account.father_name}\r\n          type=\"text\"\r\n          name=\"father_name\"\r\n          // placeholder=\"Father Name\"\r\n          placeholder={formatMessage({ id:\"Father Name\" })}\r\n          className=\"form-control mb-2\"\r\n          style={{ width: \"100%\", fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n        />\r\n        <label htmlFor=\"national_id_number\" style={{ fontWeight: \"bold\", fontSize: \"0.8rem\" }}>\r\n          <FormattedMessage id=\"National Id Number\" />\r\n        </label>\r\n        <input\r\n          onKeyDown={handleKeyDown}\r\n          onChange={handleAll}\r\n          value={account.national_id_number}\r\n          type=\"text\"\r\n          name=\"national_id_number\"\r\n          // placeholder=\"National Id Number\"\r\n          placeholder={formatMessage({ id:\"National Id Number\" })}\r\n          className=\"form-control mb-2\"\r\n          style={{ width: \"100%\", fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n        />\r\n        <label htmlFor=\"phone_number\" style={{ fontWeight: \"bold\", fontSize: \"0.8rem\" }}>\r\n          <FormattedMessage id=\"Phone Number\" />\r\n        </label>\r\n        <input\r\n          onKeyDown={handleKeyDown}\r\n          onChange={handleAll}\r\n          value={account.phone_number}\r\n          type=\"text\"\r\n          name=\"phone_number\"\r\n          maxLength={17}\r\n          // placeholder=\"Phone Number\"\r\n          placeholder={formatMessage({ id:\"Phone Number\" })}\r\n          className=\"form-control mb-2\"\r\n          style={{ width: \"100%\", fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n        />\r\n   \r\n      </div>\r\n      <div\r\n        className=\"col-12 col-md-4 mt-3\"\r\n        style={{ maxWidth: \"100%\", padding: \"0 10px\" }}\r\n      >\r\n             <label htmlFor=\"whatsup_number\" style={{ fontWeight: \"bold\", fontSize: \"0.8rem\" }}>\r\n          <FormattedMessage id=\"Whatsup Number\" />\r\n        </label>\r\n        <input      \r\n          onChange={handleAll}\r\n          onKeyDown={handleKeyDown}\r\n          value={account.whatsup_number}\r\n          type=\"text\"\r\n          name=\"whatsup_number\"\r\n          maxLength={17}\r\n          // placeholder=\"Whatsup Number\"\r\n          placeholder={formatMessage({ id:\"Whatsup Number\" })}\r\n          className=\"form-control mb-2\"\r\n          style={{ width: \"100%\", fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n        />\r\n        <label htmlFor=\"addresss\" style={{ fontWeight: \"bold\", fontSize: \"0.8rem\" }}>\r\n          <FormattedMessage id=\"Address\" />\r\n        </label>\r\n        <input\r\n          onKeyDown={handleKeyDown}\r\n          onChange={handleAll}\r\n          value={account.addresss}\r\n          type=\"text\"\r\n          name=\"addresss\"\r\n          placeholder={formatMessage({ id:\"Address\" })}\r\n          // placeholder=\"Address\"\r\n          className=\"form-control mb-2\"\r\n          style={{ width: \"100%\", fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n        />\r\n        <label htmlFor=\"whatsup_number\" style={{ fontWeight: \"bold\", fontSize: \"0.8rem\" }}>\r\n          <FormattedMessage id=\"Serial Number\" />\r\n        </label>\r\n        <input\r\n          onKeyDown={handleKeyDown}\r\n          onChange={handleAll}\r\n          value={account.serial}\r\n          type=\"text\"\r\n          name=\"serial\"\r\n          maxLength={17}\r\n          // placeholder=\"Serial Number\"\r\n          placeholder={formatMessage({ id:\"Serial Number\" })}\r\n          className=\"form-control mb-2\"\r\n          style={{ width: \"100%\", fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n        />\r\n        <div\r\n          className=\"form-check form-switch p-0 center d-flex ms-3\"\r\n          style={{ width: \"4rem\", height: \"1.5rem\" }}\r\n        >\r\n          <label for=\"validationServer01\" className=\"fw-bold\" style={{ fontSize: \"0.8rem\" }}>\r\n            <FormattedMessage id=\"Whatsup MSG\" />\r\n          </label>\r\n          <input\r\n            className=\"form-check-input align-bottom w-50 h-75 mt-2 ms-2 mb-1\"\r\n            type=\"checkbox\"\r\n            id=\"report\"\r\n            checked={account.whatsup}\r\n            onChange={(e) => {\r\n              setAccount({...account,\r\n                whatsup: e.target.checked ? 1 : 0\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12 d-flex flex-column flex-md-row justify-content-center mt-3 mb-1\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"text-center form-control w-100 w-md-25 btn btn-outline-danger me-1 mb-1 mb-md-0 ms-1\"\r\n          onClick={close}\r\n          style={{ fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n        >\r\n          <FormattedMessage id=\"Cancel\" />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          ref={buttonRef}\r\n          className=\"text-center form-control w-100 w-md-25 btn btn-outline-success ms-1\"\r\n          onClick={Edit_Account}\r\n          style={{ fontSize: \"0.7rem\", padding: \"0.2rem\" }}\r\n        >\r\n          <FormattedMessage id=\"Submit\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n  );\r\n}\r\n"],"names":["Belance","_ref","inputRef","belancem","setbelance","close","id","accountbelance","belance1","openBelance","setEditAccount","moneys","money","setmoney","customer","setcustomer","idprof","prof","setMoney","belance","addreport","setaddreport","useState","user","localStorage","getItem","discription","amount","type","account","cash","date","moneytype","setmoneytype","updatebelance","setupdatebelance","handlereport","e","_objectSpread","target","name","value","parseInt","Moneyid","setMoneyid","showbelance","setshowbelance","addmoneybelance","setmoneybelance","delete","formattedValue","setFormattedValue","_jsxs","className","concat","children","_jsx","onClick","style","width","backgroundColor","map","row","color","moneyType","algorithm","Array","isArray","length","valaidmoney","forEach","el","undefined","some","element","type_id","push","src","Add","alt","height","type_money","add","uploadData","FormData","append","Date","addbelance","isdelete","user_id","account_id","date_created","toISOString","axios","post","Source","getAddress","headers","Authorization","then","res","data","pre","filter","item","Swal","position","icon","title","showConfirmButton","timer","catch","error","addmoney","ref","onChange","placeholder","htmlFor","for","NumericFormat","thousandSeparator","datetime","jalaliDate12","year","getFullYear","month","getMonth","day","getDay","isoString","unformattedValue","replace","filteredBelance","disabled","SendReport","addRe","response","add_cash","a","CustomersEdit","setAccount","edit","records","setRecords","loading","setLoading","showAlert","useShowAlert","profile_picture","setProfilePicture","national_id_picture","setNationalIdPicture","serial","setserial","useDispatch","useEffect","fetchAndSetImage","async","url","setImage","fetch","mode","ok","blob","filename","substring","lastIndexOf","File","lastModified","getTime","profile_picture1","setProfilePicture1","national_id_picture1","setNationalIdPicture1","handleImageChange","event","selectedImage","files","reader","FileReader","onload","prevState","result","readAsDataURL","handleAll","buttonRef","useRef","handleKeyDown","key","preventDefault","current","click","formatMessage","useIntl","overflowX","overflowY","padding","fontSize","transition","transitionDuration","flexWrap","margin","FormattedMessage","maxWidth","Profile","objectFit","fontWeight","accept","IdNational","onKeyDown","father_name","national_id_number","phone_number","maxLength","whatsup_number","addresss","checked","whatsup","Edit_Account","update","user_name"],"sourceRoot":""}