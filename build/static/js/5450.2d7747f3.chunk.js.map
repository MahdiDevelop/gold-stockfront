{"version":3,"file":"static/js/5450.2d7747f3.chunk.js","mappings":"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","sources":["pages/Items/Returns/SellReturn.js"],"sourcesContent":["import axios from 'axios'\r\nimport { useState } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport React, { useEffect,useMemo } from 'react'\r\nimport Source from '../../../Source'\r\nimport { showAlert } from '../../../warrper';\r\nimport AddSell from '../forms/AddSell';\r\nimport Swal from 'sweetalert2';\r\nimport moment from \"moment-jalaali\";\r\nimport AddSellReturn from'./Forms/AddSellReturn';\r\nimport EditSellReturn from './Forms/EditSellReturn';\r\nimport Trash from \"../../../assets/icon/trash.png\";\r\nimport pencil from \"../../../assets/icon/pencil.png\";\r\nimport EditSell from '../forms/EditSell';\r\nimport { getSettings } from '../../Redux/settingSlice';\r\n// import { getItems } from '../Redux/itemSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { getBelances } from '../Redux/belanceSlice';\r\n// import { FormattedMessage } from \"react-intl\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useShowAlert  } from \"../../../warrper\";\r\nexport default function SellRetrun() {\r\n  // const [AddAccountModal,setAddAccountModal]=useState();\r\n  const showAlert = useShowAlert(); \r\n  const dispatch=useDispatch();\r\n  \r\n  const { moneys, errorm ,statusm} = useSelector((state) => state.moneys);\r\n  const { belances, errorb ,statusb} = useSelector((state) => state.belances);\r\n  const { customers, errorc ,statusc} = useSelector((state) => state.customers);\r\n  const [item,setitem]=useState([]);\r\n  const [customer,setcustomer]=useState(customers);  \r\n  const [belance,setbelance]=useState(belances);\r\n  const [options,setOptions]=useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [addAccountModal,setAddAccountModal]=useState(false);\r\n  const [AddSellModal,setAddSellModal] = useState(false);\r\n  const [AddBalanceModal,setAddBalanceModal]=useState(false);\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\r\n  // show and edit \r\n  const [EditSellModal,setEditSellModal] = useState(false);\r\n  const [EditSellModalm,setEditSellModalm] = useState(false);\r\n  const [MoneyEdit,setMoneyEdit] = useState([]);\r\n  const [Customer,setCustomer]=useState([]);\r\n  const [shopingcart,setShopingCart] = useState([]);\r\n  // end\r\n  //  const { moneys, errorm,statusm } = useSelector((state) => state.moneys);\r\n    const { items, errori,statusi } = useSelector((state) => state.items);\r\n    const { settings, errors,statuss } = useSelector((state) => state.settings);\r\n    const [id,setid]=useState();\r\n    const [SoldRecords,setSoldRecords]=useState([]);\r\n    const [bill,setbill]=useState({});\r\n    const [money1,setmoney1]=useState();\r\n  // const [shopingcart, setshopingcart] = useState([]);\r\n    const FindBill=(id)=>{\r\n      // console.log(id);\r\n  if(!id){\r\n    showAlert({\r\n      position: \"top-end\",\r\n      icon: \"error\",\r\n      title: \"Please fill the bill number!\",\r\n      showConfirmButton: false,\r\n      timer: 1000,\r\n    });\r\n    return;\r\n  }\r\n    else{  axios.get(Source.getAddress()+'/api/sell/'+id,{headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n      }}).then((res)=>{\r\n        console.log(res.data);\r\n        // console.log(res.data.sells);\r\n        setmoney(res.data.money);\r\n        setbill(res.data.bill);\r\n        setSoldRecords(res.data.sells);\r\n      }).catch(()=>{\r\n        setbill([]);\r\n        setSoldRecords([]);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"This bill number not found!\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      })}\r\n    }\r\n    useEffect(() => {\r\n      // بررسی و بارگذاری `belances`\r\n      // if (!statusm  && moneys?.lenght===0) {\r\n      //   dispatch(getMoneys());\r\n      // }\r\n    \r\n      // // console.log(items);\r\n      // // // بررسی و بارگذاری `moneys`\r\n      // if (!statusi  && items?.lenght===0) {\r\n      //   dispatch(getItems());\r\n      // }\r\n      if (!statuss  && settings?.lenght===0) {\r\n        dispatch(getSettings());\r\n      }\r\n    //   if (!statusc  && !customers) {\r\n    //     dispatch(getCustomers());\r\n    //   }\r\n      // if (!statusb  && belance?.lenght===0) {\r\n      //   dispatch(getBelances());\r\n      // }\r\n      // // بررسی و بارگذاری `customers`\r\n      // if (statusc === 'idle' && !customers) {\r\n      //   dispatch(getCustomers());\r\n      // }\r\n    }, [dispatch, statusm, moneys,items,statusi,settings,statuss]);\r\n    \r\n    const [setting,setsettings]=useState([]);\r\n  // useEffect(()=>{\r\n  //   axios.get(Source.getAddress() + '/api/settings', {\r\n  //     headers: {\r\n  //       'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //     },params: {\r\n  //       delete: 'False',\r\n  //     },\r\n  //   }).then((res)=>{\r\n  //     // console.log(res);\r\n  //     setsettings(res.data);\r\n  //   }).catch((err)=>{\r\n  //     console.log(err);\r\n  //   });\r\n   \r\n  // },[]);\r\n  // useEffect(()=>{\r\n  //   axios.get(Source.getAddress() + '/api/money', {\r\n  //     headers: {\r\n  //       'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //     },params: {\r\n  //       delete: 'False',\r\n  //     },\r\n  //   }).then((res)=>{\r\n  //     console.log(res);\r\n  //     setmoney(res.data);\r\n  //   }).catch((err)=>{\r\n  //     console.log(err);\r\n  //   });\r\n  //  },[AddBalanceModal]);\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n    let formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (localStorage.getItem('date') === \"Persian\") {\r\n      moment.locale('fa'); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format('jYYYY-jMM-jDD');\r\n    } else {\r\n      moment.locale('en'); // تنظیم لوکال به انگلیسی\r\n    }\r\n  \r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    setPerPage(newPerPage);\r\n    setCurrentPage(page);\r\n  };\r\n  // const [data, setData] = useState([]);\r\n  const [totalRows, setTotalRows] = useState(0); // تعداد کل ردیف‌ها\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);  // صفحه فعلی\r\n  const [perPage, setPerPage] = useState(10); // تعداد آیتم‌ها در هر صفحه\r\n\r\n  // دریافت داده‌ها از سرور\r\n  const fetchData = async (page, pageSize) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(Source.getAddress()+'/api/sellreturn', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n        },\r\n        params: {\r\n          page: page,\r\n          perPage: pageSize,\r\n          delete:0,\r\n          product:'sell'\r\n        },\r\n      });\r\n      console.log(response);\r\n      setRecords(response.data.data); // داده‌های صفحه جاری\r\n      setTotalRows(response.data.total);\r\n       // تعداد کل ردیف‌ها\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching data', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // فراخوانی داده‌ها هنگام بارگذاری صفحه یا تغییر صفحه\r\n  useEffect(() => {\r\n    fetchData(currentPage, perPage);\r\n  }, [currentPage, perPage]);\r\n\r\n  // مدیریت تغییر صفحه\r\n  const handlePageChange = page => {\r\n    setCurrentPage(page); // برو به صفحه جدید\r\n  };\r\n\r\n  const handleAdd=()=>{\r\n    setAddAccountModal(true);  \r\n    };\r\n    const [expandedRows, setExpandedRows] = useState([]);\r\n\r\n    const toggleRowDetails = (rowId) => {\r\n      setExpandedRows((prev) =>\r\n        prev.includes(rowId) ? prev.filter((id) => id !== rowId) : [...prev, rowId]\r\n      );\r\n    };\r\n    const [TotalAmount, setTotalAmount] = useState(0);\r\n    const [PaidAmount, setPaidAmount] = useState(0);\r\n\r\n  const deleteSell = async (row) => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success\",\r\n        cancelButton: \"btn btn-danger\",\r\n      },\r\n      buttonsStyling: false,\r\n    });\r\n  \r\n    const result = await swalWithBootstrapButtons.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, cancel!\",\r\n      reverseButtons: true,\r\n    });\r\n  \r\n    if (result.isConfirmed) {\r\n      const update = {\r\n        money: row.money.id,\r\n        bill: row.bill.id,\r\n        sell: row.sells[0]?.id||row.sells[0]?.e_id, // Ensure you are passing the correct 'sell' id\r\n      };\r\n  \r\n      try {\r\n        const res = await axios.put(\r\n          `${Source.getAddress()}/api/sell/${row.bill.id}`,\r\n          update,\r\n          {\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n            },\r\n            params: {\r\n              type: 'delete', // If you need additional parameters, you can add them here\r\n              // account: row.account // Uncomment and use if necessary\r\n            }\r\n          }\r\n        );\r\n  \r\n        showAlert({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Item record successfully deleted!\",\r\n          showConfirmButton: false,\r\n          timer: 600,\r\n        });\r\n  \r\n        // Remove the deleted item from the records\r\n        setRecords((prevRecords) => \r\n          prevRecords.filter((record) => record.bill.id !== row.bill.id)\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n        showAlert({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Item record not deleted\",\r\n          showConfirmButton: false,\r\n          timer: 600,\r\n        });\r\n      }\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      showAlert({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        text: \"Your item record is safe :)\",\r\n        showConfirmButton: false,\r\n        timer: 600,\r\n      });\r\n    }\r\n  };\r\n  const [returnbill,setreturnbill]=useState();\r\nconst PDcolumn = [\r\n    {\r\n      name: \"Id\",\r\n      selector: (row) => row.bill.id,\r\n      sortable: true,\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: (row) => row.bill.accounts?.account ? row.bill.accounts.account.name :row.bill.temp_customer,\r\n      sortable: true,\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"1px\",\r\n      },\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"200px\", maxWidth: \"240px\", width: \"240px\" }}\r\n        >\r\n          Date Created\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.bill.dateInsert),\r\n    },\r\n    { name: \"Currency\", selector: (row) => row.bill?.money?.name, sortable: true },\r\n    { name: \"Total Amount\", selector: (row) => row.bill.total, sortable: true },\r\n    { name: \"Paid Amount\", selector: (row) => row.bill.PaidAmount, sortable: true },\r\n    { name: \"Rmain Amount\", selector: (row) => row.bill.Remain, sortable: true },\r\n    // { name: \"Add By\", selector: (row) => row.bill.user.name, sortable: true },\r\n    \r\n    { name: (<strong\r\n      style={{\r\n        textAlign: \"center\",\r\n        backgroundColor: \"tranceparent\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      Show\r\n    </strong>),selector: (row) => (\r\n      <button\r\n        onClick={(e) => {\r\n          console.log(row);\r\n          setShopingCart(row.sells)\r\n          setTotalAmount(row.bill.total);\r\n          setPaidAmount(row.bill.PaidAmount);\r\n          setreturnbill(row.bill);\r\n          FindBill(row.bill.bill_sell);\r\n          setEditSellModalm(true);\r\n        }}\r\n        style={{\r\n          border: \"none\",\r\n          backgroundColor: \"transparent\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <img\r\n          height={\"15%\"}\r\n          width={\"15%\"}\r\n          src={pencil}\r\n          style={{ backgroundColor: \"tranceparent\" }}\r\n        />\r\n      </button>\r\n    ) },\r\n  ];\r\n  const columns = useMemo(() => {\r\n    let selectedColumns;\r\n  \r\n    if (\r\n      localStorage.getItem(\"language\") === \"pa\" ||\r\n      localStorage.getItem(\"language\") === \"da\"\r\n    ) {\r\n      selectedColumns = [...PDcolumn]; // معکوس کردن ستون‌ها\r\n    }else{\r\n      selectedColumns=PDcolumn;\r\n    }\r\n    return selectedColumns;\r\n  }, [isDesktop]);\r\n  const [money,setmoney]=useState([]);\r\n  const getcustomer=()=>{\r\n  }\r\n  const ExpandedComponent = ({ data }) => (\r\n    <div className=\"p-3\">\r\n      <h5>{data.name}</h5>\r\n      <p>Status: {data.status}</p>\r\n      <p>Registered: {data.registered}</p>\r\n      <button className=\"btn btn-info btn-sm\">Edit</button>\r\n      <button className=\"btn btn-danger btn-sm ms-2\">Delete</button>\r\n    </div>\r\n  );\r\nconst [Exesting,setExesting]=useState(false);\r\nconst { formatMessage } = useIntl();\r\nconst localization = {\r\n  pagination: {\r\n      \r\n      rowsPerPage:<FormattedMessage id=\"AddrowsPerPage\"/> , // مثلا: \"تعداد ردیف‌ها\"\r\n    previous: <FormattedMessage id=\"previous\"/>, // مثلا: \"قبلی\"\r\n    next: <FormattedMessage id=\"next\"/>, // مثلا: \"بعدی\"\r\n    page: <FormattedMessage id=\"page\"/>, // مثلا: \"صفحه\"\r\n  },\r\n  // شما می‌توانید تنظیمات بیشتر برای متون مورد نظر اضافه کنید.\r\n};\r\n  // dispatch(getCustomers());\r\n  return (\r\n    <div className={`w-100 ${\"iransans\"}`}>\r\n      <div className=\"m-auto mt-5 m-5\" style={{ height: \"100%\" ,width:\"99%\"}}>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-info mb-1 p-1\"\r\n          style={{ width: \"100px\" }}\r\n          onClick={()=>{\r\n            setAddSellModal(true);\r\n            getcustomer();\r\n          }}\r\n        >\r\n<FormattedMessage id=\"Add\"/>\r\n        </button>\r\n        <div\r\n            dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n          className=\"bg-light d-flex justify-content-lg-betweend-flex flex-column flex-lg-row justify-content-lg-between align-items-start align-items-lg-center\"\r\n          style={{ borderTop: \"5px solid #4a5cf2\" }}\r\n        >\r\n          {/* <div className=\"d-flex w-100 h-100 m-auto justify-content-between\"> */}\r\n            <h2 className=\"m-2 fw-bold mb-4\">                    <FormattedMessage id=\"Sell Return\"/>\r\n</h2>\r\n{/* <select\r\n              id=\"\"\r\n              name=\"gender\"\r\n              //   onChange={ChangeUser}\r\n              class=\"form-select h-50 m-auto\"\r\n              style={{ width: \"20%\" }}\r\n              //   value={select_user}\r\n            >\r\n              <option value={\"all users\"} selected>\r\n                All Users\r\n              </option>\r\n            </select> */}\r\n          {/* </div> */}\r\n          <input\r\n            className=\"form-control m-2 mb-4\"\r\n            style={{ width: \"100%\", maxWidth: \"200px\" }}\r\n            type=\"search\"\r\n            placeholder={formatMessage({ id: \"Search\" })}\r\n            aria-label=\"Search\"\r\n          />\r\n        </div>\r\n        <DataTable\r\n                  localization={localization} // ارسال ترجمه‌ها      \r\n      columns={columns}\r\n      data={records}\r\n      progressPending={loading}\r\n      striped\r\n        responsive\r\n        highlightOnHover\r\n      pagination\r\n      paginationServer // فعال‌سازی صفحه‌بندی سرور ساید\r\n      paginationTotalRows={totalRows} // تعداد کل ردیف‌ها\r\n      onChangePage={handlePageChange} // تغییر صفحه\r\n      onChangeRowsPerPage={handlePerRowsChange} // تغییر تعداد ردیف‌ها در صفحه\r\n      customStyles={{\r\n        headCells: {\r\n          style: {\r\n            fontWeight:'bold',\r\n          },\r\n        },\r\n      }}\r\n    />\r\n              <AddSellReturn\r\n              options1={item}\r\n              setOptions1={setitem}\r\n              customer={customer}\r\n              setcustomer={setcustomer}\r\n              settings={setting}\r\n              setsettings={setsettings}\r\n              records={records}\r\n              setRecords={setRecords}\r\n              addAccountModal={addAccountModal}\r\n              setAddAccountModal={setAddAccountModal}\r\n              moneys={money}\r\n              AddSellModal={AddSellModal}\r\n              close={()=>setAddSellModal(false)}    \r\n              setAddBalanceModal={setAddBalanceModal}\r\n              />\r\n            <EditSellReturn\r\n            PaidAmount={PaidAmount}\r\n             setPaidAmount={setPaidAmount}\r\n            TotalAmount={TotalAmount}\r\n             setTotalAmount={setTotalAmount}\r\n            returnbill={returnbill}\r\n            setreturnbill={setreturnbill}\r\n            SoldRecords={SoldRecords}\r\n            setSoldRecords={setSoldRecords}\r\n            bill={bill}\r\n            setbill={setbill}\r\n            money={money1}\r\n            setmoney={setmoney1}\r\n            Exesting={Exesting}\r\n            setExesting={setExesting}\r\n            records={records}\r\n            setRecords={setRecords}\r\n            settings={setting}\r\n            setsettings={setsettings}\r\n            AddSellModal={EditSellModalm}\r\n            close={(e)=>setEditSellModalm(false)}\r\n            // money={MoneyEdit}\r\n            moneys={money}\r\n            options1={item}\r\n             setOptions1={setitem}\r\n            customers={customer}\r\n            Customer={Customer}\r\n            setCustomer={setCustomer}\r\n            shopingcart={shopingcart}\r\n            setshopingcart={setShopingCart}\r\n            />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["SellRetrun","showAlert","useShowAlert","dispatch","useDispatch","moneys","errorm","statusm","useSelector","state","belances","errorb","statusb","customers","errorc","statusc","item","setitem","useState","customer","setcustomer","belance","setbelance","options","setOptions","records","setRecords","addAccountModal","setAddAccountModal","AddSellModal","setAddSellModal","AddBalanceModal","setAddBalanceModal","isDesktop","setIsDesktop","window","innerWidth","EditSellModal","setEditSellModal","EditSellModalm","setEditSellModalm","MoneyEdit","setMoneyEdit","Customer","setCustomer","shopingcart","setShopingCart","items","errori","statusi","settings","errors","statuss","id","setid","SoldRecords","setSoldRecords","bill","setbill","money1","setmoney1","useEffect","lenght","getSettings","setting","setsettings","totalRows","setTotalRows","loading","setLoading","currentPage","setCurrentPage","perPage","setPerPage","async","page","pageSize","response","axios","get","Source","getAddress","headers","concat","localStorage","getItem","params","delete","product","data","total","error","fetchData","expandedRows","setExpandedRows","TotalAmount","setTotalAmount","PaidAmount","setPaidAmount","returnbill","setreturnbill","PDcolumn","name","selector","row","sortable","style","width","minWidth","_row$bill$accounts","accounts","account","temp_customer","_jsx","maxWidth","children","d","date","Date","formattedDate","getFullYear","String","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes","aa","formattedHours","formattedMinutes","moment","format","dateInsert","_row$bill","_row$bill$money","money","Remain","textAlign","backgroundColor","onClick","e","sells","then","res","setmoney","catch","position","icon","title","showConfirmButton","timer","FindBill","bill_sell","border","height","src","pencil","columns","useMemo","selectedColumns","Exesting","setExesting","formatMessage","useIntl","localization","pagination","rowsPerPage","FormattedMessage","previous","next","className","_jsxs","type","dir","borderTop","placeholder","DataTable","progressPending","striped","responsive","highlightOnHover","paginationServer","paginationTotalRows","onChangePage","onChangeRowsPerPage","newPerPage","customStyles","headCells","fontWeight","AddSellReturn","options1","setOptions1","close","EditSellReturn","setshopingcart"],"sourceRoot":""}