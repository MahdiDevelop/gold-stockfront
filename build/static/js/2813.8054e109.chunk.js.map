{"version":3,"file":"static/js/2813.8054e109.chunk.js","mappings":"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","sources":["pages/Edit.js","pages/Add.js","pages/Manage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Source from \"../Source\";\r\nimport Swal from \"sweetalert2\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useShowAlert } from \"../warrper\";\r\nexport default function Edit({users,setUsers, closeEdit, edit, setUser, user, updateItem }) {\r\n  const [error, setError] = useState(false);\r\n  const showAlert = useShowAlert(); \r\n\r\n\r\n  const createUser = (user) => {\r\n    const update = {\r\n      name: user.name,\r\n      password: password,\r\n      first_name: user.first_name,\r\n      email: user.email,\r\n      category: user.category,\r\n    };\r\n    if (user.name && password) {\r\n      axios\r\n        .put(`${Source.getAddress()}/api/user/${user.id}/`, update, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          showAlert({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: <FormattedMessage id=\"User has been updated!\"/>,\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n          localStorage.setItem('userToken',user.name);\r\n          setUsers(users.map((row)=>(row.id === user.id ? user :row)));\r\n          closeEdit();\r\n          setUser({});\r\n        })\r\n        .catch((error) => {\r\n          showAlert({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: <FormattedMessage id=\"Something went wrong!\"/>,\r\n            // title: \"Something went wrong!\",\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n        });\r\n    } else {\r\n      setError(true);\r\n      showAlert({\r\n        title: \"Error\",\r\n        title: <FormattedMessage id=\"You must fill in all required fields!\"/>,\r\n        // text: \"You must fill in all required fields!\",\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]:e.target.value\r\n    });\r\n  };\r\n  const [password,setpassword]=useState();\r\n  const handlepassword=(e)=>{\r\n    setpassword(e.target.value);\r\n  }\r\n  return (\r\n    <div className={`container rounded-4 p-2  popup ${edit ? \"show\" : \"\"}`} style={{ maxWidth: '400px' }}>\r\n      <h4 className=\"text-center bg-info mt-4 p-3 text-light w-100\">\r\n        <FormattedMessage id=\"Edit User\"/>\r\n      </h4>\r\n      <div className=\"mb-3 mt-5\">\r\n        <label htmlFor=\"username\" className=\"form-label\">\r\n        <FormattedMessage id=\"User Name\"/>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          value={user.name}\r\n          className=\"form-control\"\r\n          id=\"username\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"password\" className=\"form-label\">\r\n        <FormattedMessage id=\"New Password\"/>\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={handlepassword}\r\n          value={password}\r\n          className=\"form-control\"\r\n          id=\"password\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"is_staff\" className=\"form-label\">\r\n                  <FormattedMessage id=\"Type\"/>\r\n        </label>\r\n        <select\r\n          id=\"is_staff\"\r\n          name=\"category\"\r\n          onChange={handleChange}\r\n          className=\"form-select\"\r\n          value={user.category}\r\n        >\r\n          <option value={\"admin\"}>\r\n          <FormattedMessage id=\"Admin\"/>\r\n            </option>\r\n          <option value={\"simple\"}>\r\n          <FormattedMessage id=\"Simple\"/>\r\n            </option>\r\n        </select>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"email\" className=\"form-label\">\r\n          <FormattedMessage id=\"Email\"/>\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={user.email}\r\n          className=\"form-control\"\r\n          id=\"email\"\r\n        />\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"text-light ps-2 opacity-75 rounded bg-danger font-weight-bold mt-0\">\r\n          <FormattedMessage id=\"You must fill in all required fields.\"/>\r\n        </div>\r\n      )}\r\n      <div className=\"mt-1 justify-content-around d-flex\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"col-5 m-2 mt-3 btn btn-outline-danger fw-bold\"\r\n          onClick={() => {\r\n            closeEdit();\r\n            setError(false);\r\n          }}\r\n        >\r\n          <FormattedMessage id=\"Cancel\"/>\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            createUser(user);\r\n          }}\r\n          type=\"button\"\r\n          className=\"col-5 m-2 mt-3 btn btn-outline-success fw-bold\"\r\n        >\r\n                    <FormattedMessage id=\"Save\"/>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Source from \"../Source\";\r\nimport Swal from \"sweetalert2\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useShowAlert } from \"../warrper\";\r\nexport default function Add({ closeAdd, add, setUsers, users }) {\r\n  const showAlert = useShowAlert(); \r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    category: \"simple\", // Default to false; can be toggled if necessary\r\n  });\r\n  const [error, setError] = useState(false);\r\n\r\n  const createUser = (user) => {\r\n    if (user.name && user.password) {\r\n      axios\r\n        .post(`${Source.getAddress()}/api/user/`, user, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          showAlert({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            // title: \"User has been created!\",\r\n                        title: <FormattedMessage id=\"User has been created!\"/>,\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n\r\n          const newUser = {\r\n            id: response.data.id, // Assuming the API returns the created user with an ID\r\n            name: user.name,\r\n            email: user.email,\r\n            category:user.category,\r\n          };\r\n\r\n          setUsers([newUser, ...users]);\r\n          closeAdd();\r\n          setUser({\r\n            name: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            category: \"\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n          showAlert({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            // title: \"Something went wrong!\",\r\n                        title: <FormattedMessage id=\"Something went wrong!\"/>,\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n        });\r\n    } else {\r\n      setError(true);\r\n      Swal.fire({\r\n        title: \"Error\",\r\n        // text: \"You must fill in all required fields!\",\r\n                title: <FormattedMessage id=\"You must fill in all required fields!\"/>,\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    // const { name, value, type, checked } = e.target;\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]:e.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={`container rounded-4 mx-auto p-2 mb-auto popup ${add ? \"show\" : \"\"}`} style={{ maxWidth: '400px' }}>\r\n      <h4 className=\"text-center bg-info mt-4 p-3 text-light w-100\">\r\n      <FormattedMessage id=\"Add User\"/>\r\n      </h4>\r\n      <div className=\"mb-3 mt-5\">\r\n        <label htmlFor=\"name\" className=\"form-label\">\r\n        <FormattedMessage id=\"Username\"/>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          value={user.name}\r\n          className=\"form-control\"\r\n          id=\"username\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"password\" className=\"form-label\">\r\n        <FormattedMessage id=\"Password\"/>\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n          value={user.password}\r\n          className=\"form-control\"\r\n          id=\"password\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"category\" className=\"form-label\">\r\n        <FormattedMessage id=\"Type\"/>\r\n        </label>\r\n        <select\r\n          id=\"is_staff\"\r\n          name=\"category\"\r\n          onChange={handleChange}\r\n          className=\"form-select\"\r\n          value={user.is_staff}\r\n        >\r\n          <option value={\"admin\"}>      <FormattedMessage id=\"Admin\"/>\r\n          </option>\r\n          <option value={\"simple\"}>      <FormattedMessage id=\"Sample\"/>\r\n          </option>\r\n        </select>\r\n      </div>\r\n      {/* <div className=\"mb-3\">\r\n        <label htmlFor=\"last_name\" className=\"form-label\">\r\n          Last Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"last_name\"\r\n          onChange={handleChange}\r\n          value={user.last_name}\r\n          className=\"form-control\"\r\n          id=\"last_name\"\r\n        />\r\n      </div> */}\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"email\" className=\"form-label\">\r\n<FormattedMessage id=\"Email\"/>\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={user.email}\r\n          className=\"form-control\"\r\n          id=\"email\"\r\n        />\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"text-light ps-2 opacity-75 rounded bg-danger font-weight-bold mt-0\">\r\n                    <FormattedMessage id=\"You must fill in all required fields.\"/>\r\n        </div>\r\n      )}\r\n      <div className=\"mt-1 justify-content-around d-flex\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"col-5 m-2 mt-3 btn btn-outline-danger fw-bold\"\r\n          onClick={() => {\r\n            closeAdd();\r\n            setError(false);\r\n          }}\r\n        >\r\n          <FormattedMessage id=\"Cancel\"/>\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            createUser(user);\r\n          }}\r\n          type=\"button\"\r\n          className=\"col-5 m-2 mt-3 btn btn-outline-success fw-bold\"\r\n        >\r\n          <FormattedMessage id=\"Save\"/>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Trash from \"../assets/icon/trash.png\";\r\nimport pencil from \"../assets/icon/pencil.png\";\r\nimport Swal from \"sweetalert2\";\r\nimport Edit from \"./Edit\";\r\nimport Add from \"./Add\";\r\nimport \"./manage.css\";\r\nimport Source from \"../Source\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useShowAlert  } from \"../warrper\";\r\nexport default function Manage({ users,  setUsers }) {\r\n  const showAlert = useShowAlert(); \r\n  const intl = useIntl(); // استفاده از هوک useIntl برای دسترسی به ترجمه‌ها\r\n  const deleteItem = (itemId) => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success\",\r\n        cancelButton: \"btn btn-danger\",\r\n      },\r\n      buttonsStyling: false,\r\n    });\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: intl.formatMessage({id:\"Are you sure?\"})\r\n        ,\r\n        text:intl.formatMessage({id:\"You won't be able to revert this!\"})\r\n        ,\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: intl.formatMessage({id:\"Yes, delete it!\"})\r\n        ,\r\n        cancelButtonText: intl.formatMessage({id:\"No, cancel!\"})\r\n        ,\r\n        reverseButtons: true,\r\n})\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          axios\r\n            .delete(Source.getAddress() + \"/api/user/\" + itemId + \"/\",{\r\n              headers: {\r\n                  'Authorization': `Bearer ${localStorage.getItem('access')}`\r\n              }\r\n          })\r\n            .then((response) => {\r\n              // console.log(\"Item deleted successfully\");\r\n              showAlert({\r\n                position: \"top-end\",\r\n                icon: \"success\",\r\n                title: <FormattedMessage id=\"User has been deleted!\"/>,\r\n                showConfirmButton: false,\r\n                timer: 1000,\r\n              });\r\n              setUsers(users.filter((a) => a.id !== itemId));\r\n\r\n            })\r\n            .catch((error) => {\r\n              swalWithBootstrapButtons.fire({\r\n                title: \"Cancelled\",\r\n                text:<FormattedMessage id=\"Something went wrong!\"/>,\r\n                icon: \"error\",\r\n              });\r\n              // console.error(\"Error deleting item:\", error);\r\n            });\r\n        } else if (\r\n          /* Read more about handling dismissals below */\r\n          result.dismiss === Swal.DismissReason.cancel\r\n        ) {\r\n          swalWithBootstrapButtons.fire({\r\n            title:intl.formatMessage({id:\"Cancelled\"}),\r\n            text:intl.formatMessage({id:\"Your record is safe :)\"}),\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  useEffect(()=>{\r\n    axios.get(Source.getAddress()+'/api/user',{\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n    }).then((res)=>{\r\n      setUsers(res.data);\r\n      console.log(res);    \r\n    })\r\n    .catch((err)=>{\r\n      console.log(err);\r\n    });\r\n  },[]);\r\n  const updateItem = (id, newName) => {\r\n    const updatedItems = users.map((item) =>\r\n      item.id === id ? { ...item, newName } : item\r\n    );\r\n    setUsers(updatedItems);\r\n  };\r\n  const [edit, setEdit] = useState(false);\r\n  const [add, setAdd] = useState(false);\r\n  const [user, setUser] = useState({});\r\n  let counter = 0;\r\n  return (\r\n    <div\r\n    dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n      className=\"container mt-5 h-100 m-auto\"\r\n      onClick={(e) => {\r\n        if (e.target.className === \"container mt-5 h-100 m-auto\") {\r\n          setAdd(false);\r\n          setEdit(false);\r\n        }\r\n      }}\r\n    >\r\n      <button\r\n        onClick={() => setAdd(true)}\r\n        type=\"button\"\r\n        className=\"btn btn-info fw-bold text-white mb-3\"\r\n      >\r\n                  <FormattedMessage id=\"Add New User\"/>\r\n      </button>\r\n      <div className=\"card card-body rounded-2 m-auto\">\r\n        <h1\r\n          className=\"text-center rounded mb-4 p-4 text-light\"\r\n          style={{ backgroundColor: \"var(--bs-info)\" }}\r\n        >\r\n                    <FormattedMessage id=\"Table Of Users\"/>\r\n        </h1>\r\n\r\n        <table className=\"table table-light table-striped rounded-4\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">          <FormattedMessage id=\"No\"/>              </th>\r\n              <th scope=\"col\">          <FormattedMessage id=\"Username\"/>\r\n              </th>\r\n              <th scope=\"col\">          <FormattedMessage id=\"Type\"/>\r\n</th>\r\n              <th scope=\"col\">          <FormattedMessage id=\"Email\"/>\r\n              </th>\r\n              <th scope=\"col\">          <FormattedMessage id=\"Delete\"/>              </th>\r\n              <th scope=\"col\">          <FormattedMessage id=\"Edit\"/>              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"table-group-divider\">\r\n            {users.map((row, idx) => {\r\n              counter++;\r\n\r\n              return (\r\n                <tr key={counter}>\r\n                  <th scope=\"row\">{row.id}</th>\r\n                  <td>{row.name}</td>\r\n                  <td>{row.category}</td>\r\n                  <td>{row.email}</td>\r\n                  {row.id!==1 ? <td className=\"text-center\" style={{ width: \"2vw\" }}>\r\n                    <button\r\n                      onClick={() => deleteItem(row.id)}\r\n                      className=\"p-0 m-0\"\r\n                      style={{ border: \"none\", background: \"transparent\" }}\r\n                    >\r\n                      <img\r\n                        height={\"24px\"}\r\n                        width={\"24px\"}\r\n                        src={Trash}\r\n                        alt=\"Delete\"\r\n                      />\r\n                    </button>\r\n                  </td> :<td style={{color:\"red\"}}></td>\r\n                  }\r\n                  <td className=\"text-center\" style={{ width: \"2vw\" }}>\r\n                    <button\r\n                      onClick={() => {\r\n                        setEdit(true);\r\n                        setUser(row);\r\n                      }}\r\n                      className=\"p-0 m-0\"\r\n                      style={{ border: \"none\", background: \"transparent\" }}\r\n                    >\r\n                      <img\r\n                        height={\"24px\"}\r\n                        width={\"24px\"}\r\n                        src={pencil}\r\n                        alt=\"Edit\"\r\n                      />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        {\r\n          <Edit\r\n            updateItem={updateItem}\r\n            setUser={setUser}\r\n            users={users}\r\n            setUsers={setUsers}\r\n            edit={edit}\r\n            user={user}\r\n            closeEdit={() => {\r\n              setEdit(false);\r\n              setUser({});\r\n            }}\r\n          />\r\n        }\r\n        {\r\n          <Add\r\n            closeAdd={() => {\r\n              setAdd(false);\r\n            }}\r\n            add={add}\r\n            users={users}\r\n            setUsers={setUsers}\r\n          />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Edit","_ref","users","setUsers","closeEdit","edit","setUser","user","updateItem","error","setError","useState","showAlert","useShowAlert","handleChange","e","name","value","type","checked","target","_objectSpread","password","setpassword","_jsxs","className","concat","style","maxWidth","children","_jsx","FormattedMessage","id","htmlFor","onChange","category","email","onClick","update","first_name","axios","put","Source","getAddress","headers","Authorization","localStorage","getItem","then","response","position","icon","title","showConfirmButton","timer","setItem","map","row","catch","createUser","Add","closeAdd","add","is_staff","post","newUser","data","Swal","Manage","intl","useIntl","useEffect","get","res","err","setEdit","setAdd","counter","dir","backgroundColor","scope","idx","width","itemId","swalWithBootstrapButtons","customClass","confirmButton","cancelButton","buttonsStyling","fire","formatMessage","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","result","isConfirmed","delete","filter","a","dismiss","cancel","deleteItem","border","background","height","src","Trash","alt","color","pencil","newName","updatedItems","item"],"sourceRoot":""}