{"version":3,"file":"static/js/7624.251bdfb5.chunk.js","mappings":"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","sources":["pages/forms/Combo_Customer.js","pages/forms/Datepicker.js","../node_modules/shamsi/index.js","pages/forms/Belance.js","pages/Add_belance.js","pages/Account.js","pages/forms/Edit_account.js","pages/forms/ListBox.js","../node_modules/shamsi-date-converter/lib/index.js"],"sourcesContent":["import React from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nconst Combo_Customer = ({ \r\n  isEditable = false, \r\n  name, \r\n  type, \r\n  options, \r\n  Onsearch, \r\n  selectedOption, \r\n  setAddAccountModal, \r\n  setSelectedOption, \r\n  searchQuery, \r\n  handleInputChange \r\n}) => {\r\n  const handleChange = (sselectedOption) => {\r\n    setSelectedOption(sselectedOption);\r\n    // console.log('hi');\r\n    // Onsearch(sselectedOption);\r\n  };\r\n// console.log(searchQuery);\r\n  const CustomMenuList = (props) => (\r\n    <components.MenuList {...props}>\r\n      {props.children}\r\n      {type && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            padding: \"10px\",\r\n            borderTop: \"1px solid #eaeaea\",\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#f9f9f9\",\r\n          }}\r\n          onClick={() => {\r\n            setAddAccountModal(searchQuery)\r\n            // setSelectedOption({id:0, name:searchQuery});\r\n          }}\r\n        >\r\n          <strong>{name}</strong>\r\n        </div>\r\n      )}\r\n    </components.MenuList>\r\n  );\r\n\r\n  const customStyles = {\r\n    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n  };\r\nconst { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <div className=\"w-40\">\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        inputValue={searchQuery}\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={options}\r\n        onInputChange={handleInputChange}\r\n        getOptionLabel={(option) => (\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <span>{`${option.name} `}</span>\r\n          </div>\r\n        )}\r\n        getOptionValue={(option) => `${option.name}`}\r\n        // placeholder=\"Search...\"\r\n        placeholder={formatMessage({ id: \"Search...\" })}\r\n        isClearable\r\n        components={{ MenuList: CustomMenuList }}\r\n        isSearchable\r\n        isDisabled={isEditable}\r\n        menuPortalTarget={document.body} // انتقال منو به `body`\r\n        styles={customStyles} // تنظیم `z-index`\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Combo_Customer;","import React, { useEffect, useState } from 'react';\r\nimport \"jalaali-react-date-picker/lib/styles/index.css\";\r\nimport { InputDatePicker } from \"jalaali-react-date-picker\";\r\nimport moment, { months } from 'moment-timezone';\r\n\r\nexport default function Datepicker({ handle_date, settings,default_value ,lebal,onKeyDown}) {\r\n  const [selectedDay, setSelectedDay] = useState();\r\n  const handleDateChange = (date) => {\r\n    setSelectedDay(date);\r\n        if(date!=null){\r\n        const handl={year:date._a[0],month:date._a[1]+1,day:date._a[2]}\r\n      handle_date(handl);\r\n        }\r\n    };\r\n  return (\r\n    <div className=\"col-3 m-2 mt-3\"\r\n    >\r\n      <label htmlFor=\"\" className='p-0 m-0'>{lebal}</label>\r\n      <InputDatePicker\r\n      onKeyDown={onKeyDown}\r\n        value={selectedDay}\r\n        onChange={handleDateChange}\r\n        inputPlaceholder={settings[0].date === 'Persian' ? 'تاریخ را وارد کنید' : 'Enter the date'}\r\n        locale={settings[0].date === 'Persian' ? 'fa' : 'en'}\r\n        colorPrimary=\"#0fbcf9\"\r\n        maximumDate={{ year: 9999, month: 12, day: 31 }}\r\n        minimumDate={{ year: 1, month: 1, day: 1 }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jalaliToGregorian = exports.gregorianToJalali = void 0;\nfunction gregorianToJalali(gy, gm, gd) {\n  var gdm, jy, jm, jd, gy2, days;\n  gdm = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n  gy2 = gm > 2 ? gy + 1 : gy;\n  days =\n    355666 +\n    365 * gy +\n    ~~((gy2 + 3) / 4) -\n    ~~((gy2 + 99) / 100) +\n    ~~((gy2 + 399) / 400) +\n    gd +\n    gdm[gm - 1];\n  jy = -1595 + 33 * ~~(days / 12053);\n  days %= 12053;\n  jy += 4 * ~~(days / 1461);\n  days %= 1461;\n  if (days > 365) {\n    jy += ~~((days - 1) / 365);\n    days = (days - 1) % 365;\n  }\n  if (days < 186) {\n    jm = 1 + ~~(days / 31);\n    jd = 1 + (days % 31);\n  } else {\n    jm = 7 + ~~((days - 186) / 30);\n    jd = 1 + ((days - 186) % 30);\n  }\n  return [jy, jm, jd];\n}\nexports.gregorianToJalali = gregorianToJalali;\nfunction jalaliToGregorian(jy, jm, jd) {\n  var salA, gy, gm, gd, days;\n  jy += 1595;\n  days =\n    -355668 +\n    365 * jy +\n    ~~(jy / 33) * 8 +\n    ~~(((jy % 33) + 3) / 4) +\n    jd +\n    (jm < 7 ? (jm - 1) * 31 : (jm - 7) * 30 + 186);\n  gy = 400 * ~~(days / 146097);\n  days %= 146097;\n  if (days > 36524) {\n    gy += 100 * ~~(--days / 36524);\n    days %= 36524;\n    if (days >= 365) {\n      days++;\n    }\n  }\n  gy += 4 * ~~(days / 1461);\n  days %= 1461;\n  if (days > 365) {\n    gy += ~~((days - 1) / 365);\n    days = (days - 1) % 365;\n  }\n  gd = days + 1;\n  salA = [\n    0,\n    31,\n    (gy % 4 === 0 && gy % 100 !== 0) || gy % 400 === 0 ? 29 : 28,\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31,\n  ];\n  for (gm = 0; gm < 13 && gd > salA[parseInt(gm, 10)]; gm++) {\n    gd -= salA[parseInt(gm, 10)];\n  }\n  return [gy, gm, gd];\n}\nexports.jalaliToGregorian = jalaliToGregorian;\n","import React, { useState, useEffect } from \"react\";\r\nimport Add from \"../../assets/icon/add.png\";\r\nimport axios from \"axios\";\r\nimport Source from \"../../Source\";\r\nimport Swal from \"sweetalert2\";\r\nimport { NumericFormat } from \"react-number-format\";\r\nimport { useRef } from \"react\";\r\nimport \"./Belance.css\";\r\nimport Updatemoney from \"./Updatemoney\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addBelanceToCache, getBelances ,updateBelanceInCache} from \"../Redux/belanceSlice\";\r\nimport { getMoneys ,updateMoneyInCache} from \"../Redux/moneysSlice\";\r\nimport { getCustomers } from \"../Redux/customerSlice\";\r\nimport { getReports } from \"../Redux/reportSlice\";\r\n\r\n\r\nexport default function Belance({\r\n  inputRef,\r\n  belancem,\r\n  setbelance,\r\n  close,\r\n  id,\r\n  accountbelance,\r\n  belance1,\r\n  openBelance,\r\n  setEditAccount,\r\n  moneys,\r\n  money,\r\n  setmoney,\r\n  customer,\r\n  setcustomer,\r\n  idprof,\r\n  prof,\r\n  setMoney\r\n}) {\r\n  // const dispatch = useDispatch();\r\n  // const { belances, errorb } = useSelector((state) => state.belances);\r\n  // const { moneys, errorm } = useSelector((state) => state.moneys);\r\n  // const { customers, errorc } = useSelector((state) => state.customers);\r\n \r\n  const belance = accountbelance;\r\n  // const currentTime = new Date();\r\n  // const currentHours = currentTime.getHours();\r\n  // const currentMinutes = currentTime.getMinutes();\r\n  // const currentYear = currentTime.getFullYear();\r\n  // const currentMonth = (currentTime.getMonth() + 1).toString().padStart(2, \"0\");\r\n  // const currentDay = currentTime.getDate();\r\n  // const time = \"\" + currentHours + \":\" + currentMinutes;\r\n  // const date = `${currentYear}-${currentMonth}-${currentDay}`;\r\n  const [addreport, setaddreport] = useState({\r\n    user: localStorage.getItem(\"userTokenid\"),\r\n    // delete: \"False\",\r\n    discription: \"\",\r\n    amount: \"\",\r\n    type: \"deposite\",\r\n    account: 0,\r\n    cash: 0,\r\n    date: \"\",\r\n  });\r\n  const [moneytype, setmoneytype] = useState(\"\");\r\n  const [updatebelance, setupdatebelance] = useState({\r\n    belance: 0,\r\n    account: 1,\r\n    type: 1,\r\n  });\r\n  const SendReport = () => {\r\n    if (\r\n      addreport.amount != 0 &&\r\n      addreport.amount != null &&\r\n      addreport.type != \"\" &&\r\n      moneytype != \"\"\r\n    ) {\r\n      const filteredBelance = accountbelance.filter(\r\n        (item) => item.type === Moneyid\r\n      );\r\n      if (filteredBelance.length === 0) {\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"Something went wrong !\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n        return;\r\n      }\r\n      let be1 = parseInt(filteredBelance[0].belance);\r\n      let amount = parseInt(addreport.amount);\r\n      let total = 0;\r\n      // if (addreport.type === \"deposite\") {\r\n      //   total = amount + be1;\r\n      //   filteredBelance[0][\"belance\"] = total;\r\n      // } else {\r\n      //   total = be1 - amount;\r\n      //   filteredBelance[0][\"belance\"] = total;\r\n      // }\r\n      // setupdatebelance({\r\n      //   ...updatebelance,\r\n      //   type: parseInt(filteredBelance[0][\"type\"]),\r\n      //   belance: parseInt(filteredBelance[0][\"belance\"]),\r\n      //   account: parseInt(filteredBelance[0][\"account\"]),\r\n      // });\r\n      const uploadData = new FormData();\r\n      let addRe={\r\n      user_id: localStorage.getItem(\"userTokenid\"),\r\n      discription: \"\",\r\n      amount: \"\",\r\n      type: \"deposite\",\r\n      account_id: 0,\r\n      isdelete: 0,\r\n      cash: 0,\r\n      date_created: \"\"}\r\n    addRe.discription=addreport.discription;\r\n    addRe.amount=addreport.amount;\r\n    addRe.type=addreport.type;\r\n    addRe.account_id=addreport.account;\r\n    addRe.cash=addreport.cash;\r\n    let date =new Date();\r\n    addRe.date_created=date.toISOString();\r\n    // console.log(addRe);\r\n      axios\r\n        .post(`${Source.getAddress()}/api/report/`, addRe, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`, // Add the access token here\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setmoneytype('');\r\n          setFormattedValue('');\r\n          setaddreport({\r\n            user: localStorage.getItem(\"userTokenid\"),\r\n            // delete: \"False\",\r\n            discription: \"\",\r\n            amount: \"\",\r\n            type: \"deposite\",\r\n            account: 0,\r\n            cash: 0,\r\n            date: \"\",\r\n          });\r\n          let add_cash = response.data.belance;\r\n          let update_money = response.data.moneys;\r\n          setbelance(\r\n            belance.map((a) => (a.id === add_cash.id ? add_cash : a))\r\n          );\r\n          setshowbelance(\r\n            showbelance.map((a) => (a.id === add_cash.id ? add_cash : a))\r\n          );\r\n          // dispatch(updateBelanceInCache(add_cash));\r\n          // dispatch(updateMoneyInCache(update_money));\r\n          setEditAccount(\r\n            accountbelance.map((a) => (a.id === add_cash.id ? add_cash : a))\r\n          )\r\n          \r\n          // const filteredMoney = money.filter(\r\n          //   (item) => item.id === filteredBelance[0][\"type\"]\r\n          // );\r\n          // // money\r\n          // let cash_primary = parseInt(filteredMoney[0][\"cach\"]);\r\n          // let money_update = {\r\n          //   cach: cash_primary,\r\n          // };\r\n          // if (addreport.type === \"deposite\") {\r\n          //   money_update.cach += amount;\r\n          // } else {\r\n          //   money_update.cach -= amount;\r\n          // }\r\n\r\n          // const filteredMoney = money.filter(\r\n          //   (item) => item.id === filteredBelance[0][\"type\"]\r\n          // );\r\n          // // money\r\n          // let cash_primary = parseInt(filteredMoney[0][\"cach\"]);\r\n          // let money_update = {\r\n          //   cach: cash_primary,\r\n          // };\r\n          // uploadData.append(\"user\", localStorage.getItem(\"userTokenid\"));\r\n          // uploadData.append(\"isdelete\", \"False\");\r\n          // uploadData.append(\"type\", parseInt(filteredBelance[0][\"type\"]));\r\n          // uploadData.append(\"belance\", parseInt(filteredBelance[0][\"belance\"]));\r\n          // uploadData.append(\"account\", parseInt(filteredBelance[0][\"account\"]));\r\n          // uploadData.append(\"ontransaction\", \"True\");\r\n                  Swal.fire({\r\n                    position: \"top-end\",\r\n                    icon: \"success\",\r\n                    title: \"Add successfully!\",\r\n                    showConfirmButton: false,\r\n                    timer: 600,\r\n                  });         \r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: \"something went wrong !\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title: \"You must full amount money type and type inputs !\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    }\r\n    // dispatch(getBelances());\r\n    // dispatch(getMoneys());\r\n    // dispatch(getReports());\r\n  };\r\n\r\n  const handlereport = (e) => {\r\n    setaddreport({\r\n      ...addreport,\r\n      [e.target.name]: e.target.value,\r\n      user: parseInt(localStorage.getItem(\"userTokenid\")),\r\n    });\r\n  };\r\n  const [Moneyid,setMoneyid]=useState('');\r\n  const handleType = (e) => {\r\n    const filteredBelance = belance.filter(\r\n      (item) => item.moneyType === e.target.value\r\n    );\r\n    setMoneyid(filteredBelance[0].type);\r\n    setmoneytype(e.target.value);\r\n    setaddreport({\r\n      ...addreport,\r\n      account: filteredBelance[0].id,\r\n    });\r\n  };\r\n\r\n  let Accountbelance = accountbelance;\r\n  // const [money, setmoney] = useState(moneys);\r\n  let valaidmoney = [];\r\n  const [showbelance, setshowbelance] = useState([]);\r\n  // console.log(money);\r\n  // console.log(accountbelance);\r\n  const algorithm = () => {\r\n    // بررسی اینکه آیا money آرایه‌ای معتبر است\r\n    if (Array.isArray(money) && money.length > 0) {\r\n      const valaidmoney = [];\r\n  \r\n      money.forEach((el) => {\r\n        // بررسی اینکه آیا el.id مقدار معتبر دارد\r\n        if (el && el.id !== undefined && el.id !== null) {\r\n          if (Array.isArray(accountbelance) && accountbelance.length > 0) {\r\n            // بررسی اینکه آیا el.id در accountbelance وجود دارد\r\n            const isExistInAccount = accountbelance.some(\r\n              (element) => element.type_id === el.id\r\n            );\r\n  \r\n            // اگر در accountbelance وجود نداشت، به valaidmoney اضافه شود\r\n            if (!isExistInAccount) {\r\n              valaidmoney.push(el);\r\n            }\r\n          } else {\r\n            // اگر accountbelance خالی باشد، تمام مقادیر money اضافه شوند\r\n            valaidmoney.push(el);\r\n          }\r\n        }\r\n      });\r\n  \r\n      // به‌روزرسانی state تنها در صورتی که valaidmoney دارای داده باشد\r\n      setshowbelance(valaidmoney.length > 0 ? valaidmoney : []);\r\n    } else {\r\n      console.warn(\"Invalid money array or empty array.\");\r\n    }\r\n  };\r\n  \r\n    \r\n  const [addmoneybelance, setmoneybelance] = useState({\r\n    belance: 0,\r\n    account: 0,\r\n    type: 0,\r\n    delete: \"False\",\r\n    user: 0,\r\n  });\r\n  const handleAll = (e) => {\r\n    setmoneybelance({\r\n      ...addmoneybelance,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  // useEffect(() => {\r\n  //   axios.get(Source.getAddress() + '/api/money', {\r\n  //     headers: {\r\n  //       'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //     },params: {\r\n  //       delete: 0,\r\n  //     },\r\n  //   }).then((res)=>{\r\n  //     // console.log(res);\r\n  //     setmoney(res.data);\r\n  //     // setRecords(res.data);\r\n  //   }).catch((err)=>{\r\n  //     console.log(err);\r\n  //   });\r\n    // axios\r\n    //   .get(Source.getAddress() + \"/api/money/\", {\r\n    //     headers: {\r\n    //       Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n    //     },params: {\r\n    //       delete: 0,\r\n    //     }\r\n    //   })\r\n    //   .then((res) => {\r\n    //     setmoney(res.data);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //     Swal.fire({\r\n    //       position: \"top-end\",\r\n    //       icon: \"error\",\r\n    //       title: \"System can not give the money list !\",\r\n    //       showConfirmButton: false,\r\n    //       timer: 1500,\r\n    //     });\r\n    //   });\r\n  // }, []);\r\n\r\n  const addmoney = (type_money) => {\r\n    let add = {\r\n      id: 0,\r\n      account: 1,\r\n      type: 1,\r\n      user: 0,\r\n      belance: 0,\r\n      delete: \"False\",\r\n      moneyType: \"\",\r\n    };\r\n    setmoneybelance({\r\n      ...addmoneybelance,\r\n      type: type_money.id,\r\n    });\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"isdelete\", \"False\");\r\n    uploadData.append(\"user\", localStorage.getItem(\"userTokenid\"));\r\n    uploadData.append(\"type\", type_money.id);\r\n    uploadData.append(\"account\", id);\r\n    const date = new Date();\r\n    let addbelance = {\r\n      isdelete: 0,\r\n      user_id: localStorage.getItem(\"userTokenid\"),\r\n      type_id: type_money.id,\r\n      account_id: id,\r\n      belance:\"0\",\r\n      date_created:date.toISOString()\r\n    };\r\n    axios\r\n      .post(Source.getAddress() + \"/api/belance\", addbelance, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        add = res.data.belance;\r\n        setEditAccount([...accountbelance, add]);\r\n        setshowbelance((pre) =>\r\n          pre.filter((item) => item.id !== add.id)\r\n        );\r\n        // dispatch(addBelanceToCache(add));\r\n        // let update_customer={\r\n        //   ontransaction:1\r\n        // }\r\n        // uploadData.append(\"user\", customer.user);\r\n                Swal.fire({\r\n                  position: \"top-end\",\r\n                  icon: \"success\",\r\n                  title: \"Updated successfully!\",\r\n                  showConfirmButton: false,\r\n                  timer: 600,\r\n                });         \r\n        // uploadData.append(\"name\", customer.name);\r\n        // uploadData.append(\"ontransaction\", \"True\");\r\n       })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"Something went wrong !\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n  const [formattedValue, setFormattedValue] = useState(\"\");\r\n  // const [unformattedValue, setUnformattedValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    let datetime = new Date();\r\n    const jalaliDate12 = {\r\n      year: datetime.getFullYear(),\r\n      month: datetime.getMonth() + 1,\r\n      day: datetime.getDay(),\r\n    };\r\n    const { year, month, day } = jalaliDate12;\r\n    const t = new Date();\r\n    const date = new Date();\r\n    const isoString = date.toISOString();\r\n    const formattedValue = e.target.value;\r\n    const unformattedValue = formattedValue.replace(/,/g, \"\").replace(\"$\", \"\");\r\n    setFormattedValue(formattedValue);\r\n    setaddreport({\r\n      ...addreport,\r\n      amount: unformattedValue,\r\n      date: isoString,\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      className={`container rounded-5 pe-0 ps-0 resB popup ${\r\n        openBelance ? \"show\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"d-flex justify-content-end p-0 m-0\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close align-self-end p-3 m-1 mt-0 hover_btn\"\r\n          onClick={close}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n      <div\r\n        className=\" bg-white container mt-0 p-1 pt-0 col-lg-8 rounded-5\"\r\n        style={{ width: \"94%\" }}\r\n      >\r\n        <h1\r\n          className=\"text-center rounded m-0 p-4 text-light mt-0\"\r\n          style={{ backgroundColor: \"var(--bs-info)\" }}\r\n        >\r\n          Availability\r\n        </h1>\r\n        <div className=\"balance-container row mt-4 p-4 pb-0 mb-0\">\r\n          {accountbelance &&\r\n            accountbelance.map((row) => (\r\n              <div className=\"col-12 col-md-3 mb-3\" key={row.id}>\r\n                <div\r\n                  className=\"card border-0\"\r\n                  style={{ color: \"white\", backgroundColor: \"#5394a1\" }}\r\n                >\r\n                  <div className=\"card-body py-4\">\r\n                    <h5 className=\"mb-2 fw-bold text-capitalize\">\r\n                      {row.moneyType}\r\n                    </h5>\r\n                    <p className=\"mb-2 fw-bold\">{row.belance} Available</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          <div className=\"col-12 col-md-3 mb-3\">\r\n            <div\r\n              className=\"card border-0\"\r\n              style={{ color: \"white\", backgroundColor: \"#5394a1\" }}\r\n            >\r\n              <div\r\n                className=\"btn-group dropdown\"\r\n                style={{ color: \"white\", backgroundColor: \"#5394a1\" }}\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => algorithm()}\r\n                  className=\"btn btn-secondary dropdown-toggle\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                  style={{ color: \"white\", backgroundColor: \"#5394a1\" }}\r\n                >\r\n                  <p>Add Balance</p>\r\n                  <img\r\n                    src={Add}\r\n                    alt=\"Add\"\r\n                    style={{ height: \"40%\", width: \"20%\" }}\r\n                  />\r\n                </button>\r\n                <ul className=\"dropdown-menu pe-5\">\r\n                  {showbelance.length > 0 ? (\r\n                    showbelance.map((row) => (\r\n                      <li key={row.id}>\r\n                        <button\r\n                          onClick={() => {\r\n                            addmoney(row);\r\n                          }}\r\n                          className=\"dropdown-item fw-bold\"\r\n                          type=\"button\"\r\n                        >\r\n                          {row.name}\r\n                        </button>\r\n                      </li>\r\n                    ))\r\n                  ) : (\r\n                    <li>\r\n                      <button className=\"dropdown-item fw-bold\" type=\"button\">\r\n                        Empty\r\n                      </button>\r\n                    </li>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <form className=\"form-section col-12 w-100 row rounded-3 m-3 pe-5 p-1 bg-transparent pt-0 mt-0 mb-0\">\r\n          <div className=\"col-12 col-md-4 m-2 mt-3 ps-2 p-0\">\r\n            <div className=\"form-floating\">\r\n              <textarea\r\n                name=\"discription\"\r\n                ref={inputRef}\r\n                onChange={(e) => {\r\n                  handlereport(e);\r\n                }}\r\n                value={addreport.discription}\r\n                className=\"form-control h-50 px-5\"\r\n                placeholder=\"Leave a comment here\"\r\n                id=\"floatingTextarea2\"\r\n              ></textarea>\r\n              <label htmlFor=\"floatingTextarea2\">Description</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-md-2 m-2 mb-3 mt-3 p-0 px-3\">\r\n            <label for=\"price\">Amount</label>\r\n            <NumericFormat\r\n              thousandSeparator={true}\r\n              name=\"amount\"\r\n              className=\"form-control\"\r\n              value={formattedValue}\r\n              placeholder=\"0\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-2 m-2 mt-3 px-3\">\r\n            <label htmlFor=\"category\">Money Type</label>\r\n            <select\r\n              name=\"type1\"\r\n              id=\"category\"\r\n              onChange={handleType}\r\n              value={moneytype}\r\n              className=\"form-select\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select\r\n              </option>\r\n              {accountbelance &&\r\n                accountbelance.map((row) => (\r\n                  <option key={row.id} value={row.moneyType}>\r\n                    {row.moneyType}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"col-12 col-md-2 m-2 mt-3 px-3\">\r\n            <label htmlFor=\"category\">Type</label>\r\n            <select\r\n              name=\"type\"\r\n              id=\"category\"\r\n              onChange={handlereport}\r\n              value={addreport.type}\r\n              className=\"form-select\"\r\n            >\r\n              <option value=\"deposite\">Deposite</option>\r\n              <option value=\"withdraw\">Withdraw</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-12 col-md-1 p-0 mt-3\">\r\n            <button\r\n              onClick={SendReport}\r\n              type=\"button\"\r\n              className=\"btn btn-success w-100 mt-4\"\r\n            >\r\n              ADD\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Source from \"../Source\";\r\nimport axios from \"axios\";\r\n// import Swal from \"sweetalert2\";\r\n// import { showAlert } from \"../warrper\";\r\nimport Profile from \"../assets/icon/profile.png\";\r\nimport IdNational from \"../assets/icon/national_id.png\";\r\nimport Combo_Customer from \"./forms/Combo_Customer\";\r\nimport Datepicker from \"./forms/Datepicker\";\r\nimport Select from \"react-select\";\r\nimport jalaali from \"jalaali-js\";\r\nimport Datepicker_Customer from \"./forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCustomers } from \"./Redux/customerSlice\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useShowAlert  } from \"../warrper\";\r\n\r\nexport default function Add_belance({\r\n  setAccounts,\r\n  close,\r\n  addAccountModal,\r\n  records,\r\n  setRecords,\r\n  // setAddAccountModal,\r\n  setAddcustomerModal,\r\n  // customers,\r\n  accounts,\r\n  money,\r\n  // settings,\r\n}) {\r\n  // console.log(money);\r\n  const showAlert = useShowAlert(); \r\n  const dispatch = useDispatch();\r\n  const { customers, errorc, statusc } = useSelector(\r\n    (state) => state.customers\r\n  );\r\n  // useEffect(() => {\r\n  //   // بررسی و بارگذاری `belances`\r\n  //   // if (!statusb && belances) {\r\n  //   //   dispatch(getBelances());\r\n  //   // }\r\n\r\n  //   // // بررسی و بارگذاری `moneys`\r\n  //   // if (!statusm && moneys) {\r\n  //   //   dispatch(getMoneys());\r\n  //   // }\r\n\r\n  //   // بررسی و بارگذاری `customers`\r\n  //   if (!statusc  && customers) {\r\n  //     dispatch(getCustomers());\r\n  //   }\r\n\r\n  //   // if(!statuss && settings) {\r\n  //   //   dispatch(getSettings());\r\n  //   // }\r\n  // }, [dispatch, statusc, customers]);\r\n  const [options,setOptions]=useState([]);\r\n  const [bbelance, setbbelance] = useState({\r\n    account_id: null,\r\n    type_id: null,\r\n    belance: \"0\",\r\n    date_created: \"\",\r\n    user_id: localStorage.getItem('userTokenid'),\r\n    isdelete: 0,\r\n  });\r\n  const [customer, setcustomers] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [add, setadd] = useState({\r\n    id: 0,\r\n    account_id: 0,\r\n    type_id: 0,\r\n    belance: \"0\",\r\n    date_created: \"\",\r\n    moneyType: \"\",\r\n    account_name: \"\",\r\n    moneyId: 0,\r\n    user_id: localStorage.getItem(\"userTokenid\"),\r\n    user_name: localStorage.getItem(\"userToken\"),\r\n    isdelete: 0,\r\n  });\r\n  const [Customer, setCustomer] = useState({\r\n    national_id_picture: \"\",\r\n    profile_picture: \"\",\r\n    national_id_number: \"\",\r\n    isdelete: \"False\",\r\n    user_id: \"\",\r\n    address: \"\",\r\n    whatsup_number: \"\",\r\n    name: \"\",\r\n    father_name: \"\",\r\n    phone_number: \"\",\r\n    // ontransaction:'True'\r\n  });\r\n  const [smoney, setsmeony] = useState([]);\r\n  const algorithm = (e) => {\r\n    setSelectedOption(e);\r\n    if (e) {\r\n      setCustomer(e);\r\n      setbbelance({\r\n        ...bbelance,\r\n        account_id: e.id,\r\n      });\r\n      setadd({\r\n        ...add,\r\n        account_name: e.name,\r\n        account_id: e.id,\r\n      });\r\n      setsmeony(e.missing_moneys);\r\n      // const find = records.filter((p) => p.account_id === e.id);\r\n      // let moneys = [];\r\n      // for (let i = 0; i < money.length; i++) {\r\n      //   const res = find.find((r) => r.type_id === money[i].id);\r\n      //   if (!res) {\r\n      //     moneys.push(money[i]);\r\n      //   }\r\n      // }\r\n      // setsmeony(moneys);\r\n      // axios.get(Source.getAddress() + '/api/money', {\r\n      //   headers: {\r\n      //     'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n      //   },params: {\r\n      //     delete: '0',\r\n      //     account_id: e.id,\r\n      //   },\r\n      // }).then((res)=>{\r\n      // setsmeony(res.data.available_currencies);\r\n\r\n      // }).catch((err)=>{\r\n      //   console.log(err);\r\n      // });\r\n    }\r\n  };\r\n  const [nmoney, setnmoney] = useState();\r\n  const handle = (e) => {\r\n    const date = new Date();\r\n    // console.log(`${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()} ${date.toLocaleTimeString()}`);\r\n    const isoString = date.toISOString();\r\n    // console.log(isoString);\r\n    setnmoney(e);\r\n    if (e) {\r\n      setbbelance({\r\n        ...bbelance,\r\n        user_id: localStorage.getItem(\"userTokenid\"),\r\n        type_id: e.id,\r\n        date_created: isoString,\r\n      });\r\n      const newId =\r\n        records.length > 0\r\n          ? Math.max(...records.map((record) => record.id)) + 1\r\n          : 1;\r\n      setadd({\r\n        ...add,\r\n        user_id: localStorage.getItem(\"userTokenid\"),\r\n        type_id: e.id,\r\n        id: newId,\r\n        belance: \"0\",\r\n        date_created: isoString,\r\n        moneyType: e.name,\r\n        user_name: localStorage.getItem(\"userToken\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handle_date = (jalaliDate) => {\r\n    // console.log(jalaliDate);\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        now.getHours(),\r\n        now.getMinutes()\r\n      );\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n\r\n      // setIsoDate(isoString);\r\n      // console.log(isoString);\r\n      setbbelance({\r\n        ...bbelance,\r\n        date_created: isoString,\r\n      });\r\n      setadd({ ...add, date_created: isoString });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n  const [national_id_picture, setNationalIdPicture] = useState();\r\n  const [ProfilePicture, setProfilePicture] = useState();\r\n  const sumbit = () => {\r\n    if (!nmoney) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title: <FormattedMessage id=\"You Must fill all inputs!\"/>,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    axios\r\n      .post(Source.getAddress() + \"/api/belance\", bbelance, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`, // Add the access token here\r\n          \"Content-Type\": \"application/json\",\r\n          // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setadd((prev) => [{ ...prev, id: res.data.id }]);\r\n        let customer = {\r\n          national_id_number: Customer.national_id_number,\r\n          isdelete: Customer.isdelete,\r\n          user: Customer.user,\r\n          address: Customer.address,\r\n          whatsup_number: Customer.whatsup_number,\r\n          name: Customer.name,\r\n          father_name: Customer.father_name,\r\n          phone_number: Customer.phone_number,\r\n          ontransaction: 1,\r\n        };\r\n        axios\r\n          .put(\r\n            Source.getAddress() + \"/api/customers/\" + `${Customer.id}/`,\r\n            customer,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"access\")}`, // Add the access token here\r\n                // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            showAlert({\r\n              position: \"top-end\",\r\n              icon: \"success\",\r\n              title: <FormattedMessage id=\"Your record has been added!\" />,\r\n              showConfirmButton: false,\r\n              timer: 800,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            showAlert({\r\n              position: \"top-end\",\r\n              icon: \"error\",\r\n                                      title: <FormattedMessage id=\"Not working ,please try again!\" />,\r\n              \r\n              showConfirmButton: false,\r\n              timer: 800,\r\n            });\r\n          });\r\n\r\n        setbbelance({\r\n          account: null,\r\n          type: null,\r\n          belance: \"0\",\r\n          date_created: \"\",\r\n          user_id: localStorage.getItem('userTokenid'),\r\n          isdelete: 0,\r\n        });\r\n        setSelectedOption({ name: \"\" });\r\n        setnmoney(null);\r\n        setsmeony(null);\r\n        setSelectedDay(moment());\r\n\r\n        // console.log(bbelance);\r\n        setRecords([add, ...records]);\r\n        close();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n                                  title: <FormattedMessage id=\"Not working ,please try again!\" />,\r\n          showConfirmButton: false,\r\n          timer: 800,\r\n        });\r\n      });\r\n  };\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const buttonRef = useRef(null);\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Check if the Enter key was pressed\r\n      e.preventDefault(); // Prevent default action if needed\r\n      if (buttonRef.current && add) {\r\n        buttonRef.current.click(); // Programmatically click the button\r\n      }\r\n    }\r\n  };\r\n  // const [options, setOptions] = useState(customers);\r\n\r\n  const handleInputChange = (newValue) => {\r\n    setSearchQuery(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    // handleSearch(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const handleSearch = async (query) => {\r\n    // if (query.length < 3) {\r\n    //   // برای جلوگیری از ارسال درخواست بیش از حد، درخواست فقط اگر ورودی بیشتر از 2 حرف باشد ارسال شود\r\n    //   setOptions([]);\r\n    //   return;\r\n    // }\r\n    // try {\r\n    //   const response = await axios.get(`${Source.getAddress()}/api/customers`, {\r\n    //     headers: {\r\n    //       Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n    //     },\r\n    //     params: { query: query }, // ارسال پارامتر جستجو به سرور\r\n    //   });\r\n    //   //   console.log(query);\r\n    //   const data = response.data;\r\n    //   // تبدیل داده‌ها به فرمت مناسب برای react-select\r\n    //   let formattedOptions = data;\r\n    //   setOptions(formattedOptions);\r\n    // } catch (error) {\r\n    //   console.error(\"Error fetching data:\", error);\r\n    // } finally {\r\n    // }\r\n  };\r\n  // const [Exesting, setExesting] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${Source.getAddress()}/api/customers`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: { query:searchQuery ,do:'ok'}, // ارسال پارامتر جستجو به سرور\r\n        });\r\n        // setSelectedOption(response.data);\r\n        const data = response.data;\r\n        setOptions(data);\r\n        // setnmoney(data.missing_moneys);\r\n        // console.log(response);\r\n        // if (data && data.length === 0) {\r\n        //   setSelectedOptionTo({ id: 0, name: searchQueryTo });\r\n        // } else {\r\n        //   setOptionsTo(data); // ذخیره داده‌ها برای نمایش در لیست\r\n        // }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n  \r\n    if(searchQuery){\r\n      if (!searchQuery || searchQuery?.length < 3) {\r\n        setOptions([]);\r\n        return;\r\n      }else{\r\n        fetchData();}\r\n    }\r\n  }, [searchQuery]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n// console.log(smoney);\r\n  return (\r\n    <div\r\n      className={`rounded-4 row g-2 popup m-4 mb-0 ${\r\n        addAccountModal && \"show\"\r\n      }`}\r\n      style={{ width: \"20rem\" }}\r\n    >\r\n      <div className=\"d-flex justify-content-end m-0 p-0\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-close align-self-end p-3 m-1 mt-0 hover_btn\"\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n      <h1\r\n        className=\"text-center rounded m-0 p-2 w-100 text-light fs-4\"\r\n        style={{ backgroundColor: \"var(--bs-info)\" }}\r\n      >\r\n                                  <FormattedMessage id=\"Add Account\" />\r\n      </h1>\r\n      <div class=\"col-md-6\">\r\n        <label for=\"validationServer01\" className=\"fw-bold\">\r\n        <FormattedMessage id=\"Customer Name\" />\r\n        </label>\r\n        <Combo_Customer\r\n          name={          <FormattedMessage id=\"Add Customer\" />          }\r\n          setAddAccountModal={setAddcustomerModal}\r\n          type={true}\r\n          searchQuery={searchQuery}\r\n          handleInputChange={handleInputChange}\r\n          setSelectedOption={algorithm}\r\n          selectedOption={selectedOption}\r\n          options={options}\r\n          // Onsearch={algorithm}\r\n        />\r\n        <div class=\"valid-feedback\">Looks good!</div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <label for=\"validationServer02\" className=\"fw-bold\">\r\n        <FormattedMessage id=\"Currency\" />\r\n        </label>\r\n        {/* <input type=\"text\" class=\"form-control is-valid\" id=\"validationServer02\" value=\"\" required /> */}\r\n        <div className=\"w-40\">\r\n          <Select\r\n            onKeyDown={handleKeyDown}\r\n            value={nmoney}\r\n            onChange={handle}\r\n            options={smoney}\r\n            getOptionLabel={(option) => (\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {/* <img src={option.pictureUrl} alt={`Portrait of ${option.firstName} ${option.lastName}`} style={{ width: '30px', marginRight: '10px' }} /> */}\r\n                <span>{`${option.name} `}</span>\r\n              </div>\r\n            )}\r\n            getOptionValue={(option) => `${option.name}`}\r\n            // placeholder={`${<FormattedMessage id=\"Search\" />}`}\r\n            isClearable\r\n            isSearchable\r\n            isDisabled={smoney ? false : true}\r\n          />\r\n        </div>\r\n        <div class=\"valid-feedback\">Looks good!</div>\r\n      </div>\r\n      <div className=\"coll-10\">\r\n        <Datepicker_Customer\r\n          onKeyDown={handleKeyDown}\r\n          default_value={\"\"}\r\n          // settings={settings}\r\n          handle_date={handle_date}\r\n          lebal={<FormattedMessage id=\"Date\" />}\r\n          setSelectedDay={setSelectedDay}\r\n          selectedDay={selectedDay}\r\n        ></Datepicker_Customer>\r\n      </div>\r\n      <div className=\"col-10 ms-4 m-10 mt-5 ps-3 d-flex\">\r\n        <a\r\n          className=\"text-center form-control btn btn-danger text-light me-1 ms-1\"\r\n          style={{ margin: \"auto\", width: \"150px\" }}\r\n          onClick={close}\r\n        >\r\n                    <FormattedMessage id=\"Cancel\" />\r\n        </a>\r\n        <a\r\n          className=\"text-center btn form-control btn-success text-light ms-1\"\r\n          ref={buttonRef}\r\n          style={{ margin: \"auto\", width: \"150px\" }}\r\n          onClick={() => {\r\n            sumbit();\r\n          }}\r\n        >\r\n                    <FormattedMessage id=\"Submit\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport axios from \"axios\";\r\nimport Add from \"../assets/icon/add.png\";\r\nimport Belance from \"./forms/Belance\";\r\nimport Add_belance from \"./Add_belance.js\";\r\nimport AddAccount from \"../pages/AddAccount.js\";\r\nimport Trash from \"../assets/icon/trash.png\";\r\nimport Source from \"../Source\";\r\nimport Swal from \"sweetalert2\";\r\nimport { showAlert } from \"../warrper.js\";\r\nimport { gregorianToJalali } from \"shamsi-date-converter\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getBelances } from \"./Redux/belanceSlice\";\r\nimport { getMoneys } from \"./Redux/moneysSlice.js\";\r\nimport { getCustomers } from \"./Redux/customerSlice\";\r\nimport Edit_account from \"./forms/Edit_account.js\";\r\nimport ListBox from \"./forms/ListBox.js\";\r\nimport Datepicker_Customer from \"./forms/Datepicker_customer\";\r\nimport jalaali from \"jalaali-js\";\r\nimport moment from \"moment-jalaali\";\r\n// import { FormattedMessage } from \"react-intl\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { useShowAlert  } from \"../warrper\";\r\nconst formatNumber = (number) => {\r\n  return number.toLocaleString(); // Formats number with thousand separators\r\n};\r\n\r\nexport default function Account({ user, }) {\r\n  const showAlert = useShowAlert(); \r\n  const dispatch = useDispatch();\r\n  // const { belances, errorb ,statusb} = useSelector((state) => state.belances);\r\n  // const { moneys, errorm ,statusm} = useSelector((state) => state.moneys);\r\n  // const { customer, errorc ,statusc} = useSelector((state) => state.customers);\r\n  //  useEffect(() => {\r\n  //    // بررسی و بارگذاری `belances`\r\n  //    if (!statusb ) {\r\n  //      dispatch(getBelances());\r\n  //    }\r\n\r\n  //    // بررسی و بارگذاری `moneys`\r\n  //    if (!statusm  ) {\r\n  //      dispatch(getMoneys());\r\n  //    }\r\n\r\n  //    // بررسی و بارگذاری `customers`\r\n  //    if (!statusc) {\r\n  //      dispatch(getCustomers());\r\n  //    }\r\n  //  }, [dispatch, statusb, belances,customer,moneys,statusc, statusm]);\r\n  const [money, setmoney] = useState([]);\r\n  // const [customers,setcustomers]=useState(customers);\r\n  const [accounts, setAccounts] = useState([]);\r\n  //   useEffect(() => {\r\n  //     axios.get(Source.getAddress() + '/api/customers', {\r\n  //       headers: {\r\n  //         'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //       },params: {\r\n  //         delete: 'False',\r\n  //       },\r\n  //     }).then((res)=>{\r\n  //       setcustomers(res.data);\r\n  //     }).catch((err)=>{\r\n  //       console.log(err);\r\n  //     });\r\n\r\n  //   },[]);\r\n  // useEffect(()=>{\r\n  // axios.get(Source.getAddress() + '/api/money', {\r\n  //   headers: {\r\n  //     'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //   },params: {\r\n  //     delete: 'False',\r\n  //   },\r\n  // }).then((res)=>{\r\n  //   console.log(res);\r\n  //   setmoney(res.data);\r\n  // }).catch((err)=>{\r\n  //   console.log(err);\r\n  // });\r\n  // },[]);\r\n\r\n  const { settings, statuss } = useSelector((state) => state.settings);\r\n      const [selecteduser, setSelecteduser] = useState();\r\n      const { users, statusu } = useSelector((state) => state.users);\r\n      const [namesearch, setnameSearch] = useState();\r\n        const [Date_Start, setDate_start] = useState();\r\n        const [Date_End, setDate_end] = useState();\r\n        const [StartDate,setStartDate]=useState();\r\n        const [EndDate,setEndDate]=useState();\r\n        const handle_date_start = (jalaliDate) => {\r\n          if (jalaliDate) {\r\n            const { year, month, day } = jalaliDate;\r\n            const gregorianDate = jalaali.toGregorian(year, month, day);\r\n            const now = new Date();\r\n            const hours = String(now.getHours()).padStart(2, \"0\");\r\n            const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n            let isoDateString;\r\n            const t = new Date();\r\n            const date = new Date(\r\n              jalaliDate.year,\r\n              jalaliDate.month - 1,\r\n              jalaliDate.day,\r\n              t.getHours(),\r\n              t.getMinutes()\r\n            );\r\n            const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n            setDate_start(isoString);\r\n          }\r\n        };\r\n        const handle_date_end = (jalaliDate) => {\r\n          if (jalaliDate) {\r\n            const { year, month, day } = jalaliDate;\r\n            const gregorianDate = jalaali.toGregorian(year, month, day);\r\n            // Get current time\r\n            const now = new Date();\r\n            const hours = String(now.getHours()).padStart(2, \"0\");\r\n            const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n            // Create the ISO date string\r\n            let isoDateString;\r\n            const t = new Date();\r\n            const date = new Date(\r\n              jalaliDate.year,\r\n              jalaliDate.month - 1,\r\n              jalaliDate.day,\r\n              t.getHours(),\r\n              t.getMinutes()\r\n            );\r\n      \r\n            // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n            const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n            // setIsoDate(isoString);\r\n            setDate_end(isoString);\r\n            // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n          }\r\n        };\r\n        const handleName = (e) => {\r\n          setnameSearch(e.target.value);\r\n      };  \r\n  const [records, setRecords] = useState([]);\r\n  const [belance, setBelance] = useState([]);\r\n  const [openBelance, setOpenBelance] = useState(false);\r\n  const [editAccount, setEditAccount] = useState(null);\r\n  const [id, setId] = useState(\"\");\r\n  const [addAccountModal, setAddAccountModal] = useState(false);\r\n  const [editAccountModal, setEditAccountModal] = useState(false);\r\n  const [isBelanceEmpty, setIsBelanceEmpty] = useState(false);\r\n  const [checkBelanceResult, setCheckBelanceResult] = useState({});\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [nmoney, setnmoney] = useState(null);\r\n  const [smoney, setSmeony] = useState([]);\r\n    const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\r\n    const columnsDesktop = [\r\n      { name: <strong>Account ID</strong>, selector: (row) => row.id },\r\n      {\r\n        name: <strong>Customer Name</strong>,\r\n        selector: (row) => row.account_name,\r\n      },\r\n      {\r\n        name: <strong>Date Created</strong>,\r\n        selector: (row) => date(row.date_created),\r\n      },\r\n      { name: <strong>Money Type</strong>, selector: (row) => row.moneyType },\r\n      {\r\n        name: <strong>Balance</strong>,\r\n        selector: (row) =>formatNumber(row.belance),\r\n      },\r\n      { name: <strong>Added by</strong>, selector: (row) => row.user_name },\r\n      {\r\n        name: (\r\n          <strong\r\n            style={{\r\n              textAlign: \"center\",\r\n              backgroundColor: \"transparent\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            Delete\r\n          </strong>\r\n        ),\r\n        selector: (row) => (\r\n          <button\r\n            className={`${row.ontransaction===1 ? \"d-none\" : \"\"}`}\r\n            onClick={() => delete_report(row)}\r\n            style={{\r\n              border: \"none\",\r\n              backgroundColor: \"transparent\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <img\r\n              height={\"15%\"}\r\n              width={\"15%\"}\r\n              src={Trash}\r\n              style={{ backgroundColor: \"transparent\" }}\r\n            />\r\n          </button>\r\n        ),\r\n      },\r\n    ];\r\n    \r\n  const PDcolumn=[\r\n    // new\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{\r\n            textAlign: \"center\",\r\n            backgroundColor: \"transparent\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n<FormattedMessage id=\"Delete\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) => (\r\n        <button\r\n          className={`${row.ontransaction===1 ? \"d-none\" : \"\"}`}\r\n          onClick={() => delete_report(row)}\r\n          style={{\r\n            border: \"none\",\r\n            backgroundColor: \"transparent\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <img\r\n            height={\"15%\"}\r\n            width={\"15%\"}\r\n            src={Trash}\r\n            style={{ backgroundColor: \"transparent\" }}\r\n          />\r\n        </button>\r\n      ),\r\n    },\r\n    { name: <strong>\r\n      <FormattedMessage id=\"Added By\" />\r\n      </strong>, selector: (row) => row.user_name },\r\n    {\r\n      name: <strong dir=\"\">\r\n        <FormattedMessage id=\"Balance\" />\r\n      </strong>,\r\n      \r\n      selector: (row) => (\r\n        <span dir=\"ltr\">{formatNumber(row.belance)}</span>\r\n      ),\r\n    },\r\n\r\n    { name: <strong><FormattedMessage id=\"Currency\" />\r\n</strong>, selector: (row) => row.moneyType },\r\n\r\n    {\r\n      name: <strong><FormattedMessage id=\"Date Created\" />\r\n</strong>,\r\n      selector: (row) => date(row.date_created),\r\n    },\r\n    \r\n    {\r\n      name: <strong><FormattedMessage id=\"Customer Name\" />\r\n</strong>,\r\n      selector: (row) => row.account_name,\r\n    },\r\n    { name: <strong><FormattedMessage id=\"ID\" />\r\n</strong>, selector: (row) => row.id },\r\n\r\n  ];\r\n\r\n  const [editbelance, setEditbelance] = useState({\r\n    account: null,\r\n    type: null,\r\n    belance: 0,\r\n    date_created: \"\",\r\n    user: null,\r\n    isdelete: false,\r\n  });\r\n  // useEffect(()=>{\r\n  //  axios.get(Source.getAddress() + '/api/belance', {\r\n  //    headers: {\r\n  //      'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //    },params: {\r\n  //      delete: 'False',\r\n  //    },\r\n  //  }).then((res)=>{\r\n  //    setAccounts(res.data);\r\n  //    setRecords(res.data);\r\n  //  }).catch((err)=>{\r\n  //    console.log(err);\r\n  //  });\r\n  // },[]);\r\n  const [add, setAdd] = useState({\r\n    id: 0,\r\n    account: 0,\r\n    type: 0,\r\n    account_name: \"\",\r\n    belance: 0,\r\n    date_created: \"\",\r\n    moneyType: \"\",\r\n    account_name: \"\",\r\n    moneyId: 0,\r\n    user: 0,\r\n    user_name: \"\",\r\n    isdelete: false,\r\n  });\r\n  const [editFull, setEditFull] = useState({});\r\n\r\n  const res = useMemo(() => window.innerWidth > 768, []);\r\n\r\n  // useEffect(() => {\r\n  //   setRecords(accounts);\r\n  // }, [accounts]);\r\n\r\n  const handleRowClick = (row) => {\r\n    if (!checkBelanceResult[row.id]) {\r\n      OnRowClick();\r\n      setSelectedOption({ name: row.account_name, account: row.account });\r\n      setnmoney({ name: row.moneyType, moneyid: row.moneyid });\r\n      setEditFull(row);\r\n      setEditbelance({\r\n        ...editbelance,\r\n        account: row.account,\r\n        type: row.type,\r\n        belance: row.belance,\r\n        date_created: row.date_created,\r\n        user: row.user,\r\n        isdelete: row.isdelete,\r\n      });\r\n      setEditAccountModal(true);\r\n      const find = records.filter((p) => p.account === row.account);\r\n      let moneys = [];\r\n      for (let i = 0; i < money.length; i++) {\r\n        const res = find.find((r) => r.type === money[i].id);\r\n        if (!res) {\r\n          moneys.push(money[i]);\r\n        }\r\n      }\r\n      moneys.push({ name: row.moneyType, moneyid: row.moneyid });\r\n      setSmeony(moneys);\r\n    }\r\n  };\r\n\r\nconst date = (d) => {\r\n    const date = moment.utc(d); // تبدیل تاریخ بدون در نظر گرفتن تایم زون\r\n    let formattedDate = `${date.year()}-${String(date.month() + 1).padStart(2, \"0\")}-${String(date.date()).padStart(2, \"0\")}`;\r\n    const hours = date.hours();\r\n    const minutes = date.minutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  \r\n    if (settings[0].date === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment.utc(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\");\r\n    }\r\n  \r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n  const handleViewBelance = (row) => {\r\n    const filteredBelance = belance.filter((item) => item.account === row.id);\r\n    setEditAccount(filteredBelance);\r\n    setId(row.id);\r\n    setOpenBelance(true);\r\n  };\r\n\r\n  const handleFilter = (e) => {\r\n    const newData = accounts.filter((row) => {\r\n      if (typeof row.account_name === \"string\") {\r\n        return (\r\n          row.account_name\r\n            .toLowerCase()\r\n            .includes(e.target.value.toLowerCase()) ||\r\n          row.moneyType.toLowerCase().includes(e.target.value.toLowerCase())\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n    setRecords(newData);\r\n  };\r\n  \r\n  const convertToHijriShamsi = (gregorianDate) => {\r\n    const [jalaliYear, jalaliMonth, jalaliDay] = gregorianToJalali(\r\n      new Date(gregorianDate)\r\n    );\r\n    return `${jalaliYear}/${jalaliMonth}/${jalaliDay}`;\r\n  };\r\n \r\n\r\n  const columnsTablet = [\r\n    {\r\n      name: \"account_name\",\r\n      selector: (row) => row.account_name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Date Created\",\r\n      selector: (row) => row.date_created,\r\n      sortable: true,\r\n    },\r\n    { name: \"moneyType\", selector: (row) => row.moneyType, sortable: true },\r\n    { name: \"Balance\", selector: (row) =>formatNumber(row.belance), sortable: true },\r\n  ];\r\n\r\n  const [select_user, setselect_user] = useState(\"\");\r\n\r\n  const ChangeUser = (e) => {\r\n    if (e.target.value !== \"all users\") {\r\n      const newData = accounts.filter((row) => {\r\n        if (typeof row.user_name === \"string\") {\r\n          return row.user_name\r\n            .toLowerCase()\r\n            .includes(e.target.value.toLowerCase());\r\n        }\r\n        return false;\r\n      });\r\n      setRecords(newData);\r\n    } else {\r\n      setRecords(accounts);\r\n    }\r\n    setselect_user(e.target.value);\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    setPerPage(newPerPage);\r\n    setCurrentPage(page);\r\n  };\r\n  // const [data, setData] = useState([]);\r\n  const [totalRows, setTotalRows] = useState(0); // تعداد کل ردیف‌ها\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1); // صفحه فعلی\r\n  const [perPage, setPerPage] = useState(10); // تعداد آیتم‌ها در هر صفحه\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page); // برو به صفحه جدید\r\n  };\r\n\r\n  const fetchData = async (page, pageSize) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(Source.getAddress() + \"/api/belance\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {\r\n          user_id: selecteduser?.id ? selecteduser.id : 1,\r\n          page: page,\r\n          perPage: pageSize,\r\n          isdelete: 0,\r\n          StartDate: StartDate&& Date_Start,\r\n          EndDate: EndDate && Date_End,\r\n          search: namesearch?.length ? namesearch : 'false',\r\n        },\r\n      });\r\n      setAccounts(response.data.data);\r\n      setRecords(response.data.data); // داده‌های صفحه جاری\r\n      setTotalRows(response.data.total); // تعداد کل ردیف‌ها\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data\", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(currentPage, perPage);\r\n  }, [currentPage, perPage,EndDate, StartDate, selecteduser,namesearch]);\r\n    const intl = useIntl(); // استفاده از هوک useIntl برای دسترسی به ترجمه‌ها\r\n\r\n  const delete_report = async (row) => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success\",\r\n        cancelButton: \"btn btn-danger\",\r\n      },\r\n      buttonsStyling: false,\r\n    });\r\n    const result = await swalWithBootstrapButtons.fire({\r\n        title:intl.formatMessage({id:\"Are you sure?\"})\r\n              ,\r\n              text:intl.formatMessage({id:\"You won't be able to revert this!\"})\r\n              ,\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonText: intl.formatMessage({id:\"Yes, delete it!\"})\r\n              ,\r\n              cancelButtonText: intl.formatMessage({id:\"No, cancel!\"})\r\n              ,\r\n              reverseButtons: true,\r\n    });\r\n    if (result.isConfirmed) {\r\n      let belance_delete = {\r\n        isdelete: 1,\r\n        _method:\"put\"\r\n      };\r\n      // row.isdelete = 1;\r\n      axios\r\n        .post(\r\n          Source.getAddress() + \"/api/belance/\" + `${row.id}`,\r\n          belance_delete,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n            }, // Add the access token here\r\n          }\r\n        )\r\n        .then((res) => {\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: intl.formatMessage({id:\"record successfully deleted!\"}),\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n          setRecords((prev)=> prev.filter((a) => a.id !== row.id));\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: intl.formatMessage({id:\"Something went wrong!\"}),            \r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n        });\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      swalWithBootstrapButtons.fire({\r\n        // title: \"Cancelled\",\r\n        title: intl.formatMessage({id:\"Cancelled\"}),\r\n        // text: \"Your imaginary file is safe :)\",\r\n                text: intl.formatMessage({id:\"Your record is safe :)\"}),\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  };\r\n  const [AddcustomerModal, setAddcustomerModal] = useState(false);\r\n  const inputRef = useRef(null);\r\n  useEffect(() => {\r\n    inputRef.current.select();\r\n  }, [addAccountModal]);\r\n  const OnRowClick = () => {\r\n    axios\r\n      .get(Source.getAddress() + \"/api/money\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {\r\n          delete: \"False\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setmoney(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const { formatMessage } = useIntl();\r\n  const localization = {\r\n    pagination: {\r\n        \r\n        rowsPerPage:<FormattedMessage id=\"AddrowsPerPage\"/> , // مثلا: \"تعداد ردیف‌ها\"\r\n      previous: <FormattedMessage id=\"previous\"/>, // مثلا: \"قبلی\"\r\n      next: <FormattedMessage id=\"next\"/>, // مثلا: \"بعدی\"\r\n      page: <FormattedMessage id=\"page\"/>, // مثلا: \"صفحه\"\r\n    },\r\n    // شما می‌توانید تنظیمات بیشتر برای متون مورد نظر اضافه کنید.\r\n  };\r\n  const columns = useMemo(() => {\r\n    if (\r\n      localStorage.getItem(\"language\") === \"pa\" ||\r\n      localStorage.getItem(\"language\") === \"da\"\r\n    ) {\r\n      return PDcolumn.reverse();\r\n    }\r\n    if (isDesktop) {\r\n      return localStorage.getItem(\"userTokenname\") === \"admin\"\r\n        ? columnsDesktop\r\n        : columnsDesktop;\r\n    }\r\n    return columnsTablet;\r\n  }, [isDesktop]);\r\n  return (\r\n    <div\r\n      className=\"w-100 h-100\"\r\n      onClick={(e) => {\r\n        if (e.target.className === \"w-100 h-100\") {\r\n          setAddAccountModal(false);\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"container mt-5 p-0\"\r\n                        dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n      >\r\n        <button\r\n          onClick={() => {\r\n            OnRowClick();\r\n            setAddAccountModal(true);\r\n          }}\r\n          type=\"submit\"\r\n          className=\"btn btn-info mb-1 p-1\"\r\n          style={{ width: \"100px\", color: \"white\" }}\r\n        >\r\n          <FormattedMessage id=\"Add\" />\r\n        </button>\r\n        <div\r\n        dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n        className=\"bg-light d-flex flex-column flex-lg-row justify-content-lg-between align-items-start align-items-lg-center\"\r\n        style={{ borderTop: \"5px solid #4a5cf2\" }}\r\n      >\r\n        <h2 className=\"m-2 fw-bold mb-4\"><FormattedMessage id=\"Accounts\"/>\r\n        </h2>\r\n        <div className=\"d-flex flex-column flex-lg-row align-items-start align-items-lg-center\">\r\n          <div className=\"mb-1 mb-lg-0 me-lg-2 mt-1 \">\r\n            <Datepicker_Customer\r\n              default_value={StartDate}\r\n              handle_date={handle_date_start}\r\n              lebal={<FormattedMessage id=\"Start\"/>}\r\n              setSelectedDay={setStartDate}\r\n              selectedDay={StartDate}\r\n            ></Datepicker_Customer>\r\n          </div>\r\n          <div className=\"mb-1 mt-1 mb-lg-0 me-lg-2\">\r\n            <Datepicker_Customer\r\n              default_value={EndDate}\r\n              handle_date={handle_date_end}\r\n              lebal={<FormattedMessage id=\"End\"/>}\r\n              setSelectedDay={setEndDate}\r\n              selectedDay={EndDate}\r\n            ></Datepicker_Customer>\r\n          </div>\r\n          <ListBox\r\n            options={users}\r\n            selectedOption={selecteduser}\r\n            setSelectedOption={setSelecteduser}\r\n          />\r\n        </div>\r\n        <input\r\n          className=\"form-control m-2 mb-2 mt-4\"\r\n          style={{ width: \"100%\", maxWidth: \"200px\" }}\r\n          type=\"search\"\r\n          onChange={handleName}\r\n          value={namesearch}\r\n          placeholder={formatMessage({ id: \"Search\" })}\r\n          aria-label=\"Search\"\r\n        />\r\n      </div>\r\n\r\n        <DataTable\r\n          columns={columns}\r\n          data={records}\r\n          onRowClicked={handleRowClick}\r\n          striped\r\n          responsive\r\n          progressPending={loading}\r\n          // responsive\r\n          highlightOnHover\r\n          pagination\r\n          paginationServer // فعال‌سازی صفحه‌بندی سرور ساید\r\n          paginationTotalRows={totalRows} // تعداد کل ردیف‌ها\r\n          onChangePage={handlePageChange} // تغییر صفحه\r\n          // onChangeRowsPerPage={handlePerRowsChange} // تغییر تعداد ردیف‌ها در صفحه\r\n          localization={localization} // ارسال ترجمه‌ها      \r\n\r\n        />\r\n        {openBelance && (\r\n          <Belance\r\n            close={() => setOpenBelance(false)}\r\n            id={id}\r\n            accountbelance={editAccount}\r\n          />\r\n        )}\r\n        <Add_belance\r\n          // options={customers}\r\n          // setOptions={setcustomers}\r\n          // customers={customers}\r\n          accounts={accounts}\r\n          setAccounts={setAccounts}\r\n          close={() => setAddAccountModal(false)}\r\n          addAccountModal={addAccountModal}\r\n          records={records}\r\n          setRecords={setRecords}\r\n          money={money}\r\n          settings={settings}\r\n          setAddcustomerModal={setAddcustomerModal}\r\n        />\r\n        <Edit_account\r\n          smoney={smoney}\r\n          setsmeony={setSmeony}\r\n          add={add}\r\n          setadd={setAdd}\r\n          selectedOption={selectedOption}\r\n          setSelectedOption={setSelectedOption}\r\n          nmoney={nmoney}\r\n          setnmoney={setnmoney}\r\n          Editefull={editFull}\r\n          setEditeFull={setEditFull}\r\n          bbelance={editbelance}\r\n          setbbelance={setEditbelance}\r\n          // customers={customers}\r\n          accounts={accounts}\r\n          setAccounts={setAccounts}\r\n          close={() => setEditAccountModal(false)}\r\n          addAccountModal={editAccountModal}\r\n          records={records}\r\n          setRecords={setRecords}\r\n          money={money}\r\n          settings={settings}\r\n        />\r\n        <AddAccount\r\n          // loading={loading}\r\n          // setLoading={setLoading}\r\n          inputRef={inputRef}\r\n          close={() => setAddcustomerModal(false)}\r\n          addAccountModal={AddcustomerModal}\r\n          records={records}\r\n          setRecords={setRecords}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState,useRef } from \"react\";\r\nimport Source from \"../../Source\";\r\nimport axios from \"axios\";\r\n// import Swal from \"sweetalert2\";\r\nimport { showAlert } from \"../../warrper\";\r\nimport Combo_Customer from \".././forms/Combo_Customer\";\r\nimport Datepicker from \".././forms/Datepicker\";\r\nimport Select from \"react-select\";\r\nimport jalaali from \"jalaali-js\";\r\nimport Datepicker_Customer from \".././forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCustomers } from \"../Redux/customerSlice\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useShowAlert  } from \"../../warrper\";\r\nexport default function Edit_account({\r\n  selectedOption, setSelectedOption,\r\n  nmoney, setnmoney,\r\n  Editefull,setEditeFull,\r\n  setAccounts,\r\n  close,\r\n  addAccountModal,\r\n  records,\r\n  setRecords,\r\n  // customers,\r\n  accounts,\r\n  money,\r\n  settings,\r\n  bbelance,\r\n  setbbelance,smoney, setsmeony,add,setadd\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const showAlert = useShowAlert(); \r\n  const { customers, errorc, statusc } = useSelector(\r\n    (state) => state.customers\r\n  );\r\n  useEffect(() => {\r\n    // بررسی و بارگذاری `belances`\r\n    // if (!statusb && belances) {\r\n    //   dispatch(getBelances());\r\n    // }\r\n\r\n    // // بررسی و بارگذاری `moneys`\r\n    // if (!statusm && moneys) {\r\n    //   dispatch(getMoneys());\r\n    // }\r\n\r\n    // بررسی و بارگذاری `customers`\r\n    if (!statusc  && !customers) {\r\n      dispatch(getCustomers());\r\n    }\r\n\r\n    // if(!statuss && settings) {\r\n    //   dispatch(getSettings());\r\n    // }\r\n  }, [dispatch, statusc, customers]);\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  const algorithm = (e) => {\r\n    setnmoney('');\r\n    if (e) {\r\n      setbbelance({\r\n        ...bbelance,\r\n        account: e.id,\r\n      });\r\n      setadd({\r\n        ...add,\r\n        account_name:e.name,\r\n        account: e.id,\r\n      });\r\n      // find the main account in belance\r\n      const find = records.filter((p) => p.account === e.id);\r\n      let moneys = [];\r\n      for (let i = 0; i < money.length; i++) {\r\n        const res = find.find((r) => r.type === money[i].id);\r\n        if (!res) {\r\n          moneys.push(money[i]);\r\n        }\r\n      }\r\n      setsmeony(moneys);\r\n    }\r\n  };\r\n  const handle = (e) => {\r\n    const date = new Date();\r\n    const isoString = date.toISOString();\r\n\r\n    setnmoney(e);\r\n    if (e) {\r\n     \r\n      setbbelance({\r\n        ...bbelance,\r\n        user: localStorage.getItem(\"userTokenid\"),\r\n        type: e.id,\r\n        date_created: isoString,\r\n      });\r\n            setadd({\r\n              ...add,\r\n              user: localStorage.getItem(\"userTokenid\"),\r\n              type: e.id,\r\n              id:Editefull.id,\r\n              date_created:isoString,\r\n              moneyType:e.name,\r\n               user_name:localStorage.getItem(\"userToken\"),  \r\n            });\r\n    }\r\n  };\r\n\r\n  const handle_date = (jalaliDate) => {\r\n    // console.log(jalaliDate);\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        now.getHours(),\r\n        now.getMinutes(),\r\n      );\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n\r\n      // setIsoDate(isoString);\r\n      console.log(isoString);\r\n      setbbelance({\r\n        ...bbelance,\r\n        date_created: isoString,\r\n      });\r\n      setadd({...add,\r\n        date_created:isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n\r\n  const sumbit = () => {\r\n    bbelance._method='put';\r\n    axios\r\n      .post(Source.getAddress() + \"/api/belance/\"+Editefull.id+'/', bbelance, {headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n      }})\r\n      .then((res) => {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          // title: \"Your belance has been added !\",\r\n          title: <FormattedMessage id=\"Your record has been updated!\" />,\r\n          showConfirmButton: false,\r\n          timer: 800,\r\n        });\r\n\r\n         setbbelance({\r\n          account: null,\r\n          type: null,\r\n          belance: 0,\r\n          date_created: \"\",\r\n          user: null,\r\n          isdelete: false,\r\n         })\r\n         setSelectedOption(null);\r\n         setnmoney(null);\r\n         setsmeony(null);\r\n         setSelectedDay(moment());\r\n\r\n        // console.log(bbelance);\r\n        // setRecords(records.map((a) => (a.id === update.id ? update : a)));\r\n        setRecords(records.map((a) => (a.id === add.id ? add : a)));\r\n        close();\r\n      })\r\n      .catch((err) => {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n                                  title: <FormattedMessage id=\"Not working ,please try again!\" />,\r\n          showConfirmButton: false,\r\n          timer: 800,\r\n        });\r\n      });\r\n  };\r\n\r\n  const buttonRef = useRef(null);\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') { // Check if the Enter key was pressed\r\n      e.preventDefault(); // Prevent default action if needed\r\n      if (buttonRef.current && add) {\r\n        buttonRef.current.click(); // Programmatically click the button\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div\r\n      className={`rounded-4 row g-2 popup m-4 mb-0 ${\r\n        addAccountModal && \"show\"\r\n      }`}\r\n      style={{ width: \"26rem\" }}\r\n    >\r\n      <div className=\"d-flex justify-content-end m-0 p-0\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-close align-self-end p-3 m-1 mt-0 hover_btn\"\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n      <h1\r\n        className=\"text-center rounded m-0 p-2 w-100 text-light fs-4\"\r\n        style={{ backgroundColor: \"var(--bs-info)\" }}\r\n      >\r\n                            <FormattedMessage id=\"Edit Account\" />\r\n      </h1>\r\n      <div class=\"col-md-6\">\r\n        <label for=\"validationServer01\" class=\"\">\r\n        <FormattedMessage id=\"Customer Name\" />\r\n        </label>\r\n        <Combo_Customer setSelectedOption={setSelectedOption} selectedOption={selectedOption} options={customers} Onsearch={algorithm} />\r\n        <div class=\"valid-feedback\">Looks good!</div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <label for=\"validationServer02\" class=\"\">\r\n        <FormattedMessage id=\"Currency\" />\r\n        </label>\r\n        {/* <input type=\"text\" class=\"form-control is-valid\" id=\"validationServer02\" value=\"\" required /> */}\r\n        <div className=\"w-40\">\r\n          <Select\r\n            onKeyDown={handleKeyDown}\r\n            value={nmoney}\r\n            onChange={handle}\r\n            options={smoney}\r\n            getOptionLabel={(option) => (\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {/* <img src={option.pictureUrl} alt={`Portrait of ${option.firstName} ${option.lastName}`} style={{ width: '30px', marginRight: '10px' }} /> */}\r\n                <span>{`${option.name} `}</span>\r\n              </div>\r\n            )}\r\n            getOptionValue={(option) => `${option.name}`}\r\n            placeholder={`${<FormattedMessage id=\"Search\" />}`}\r\n            isClearable\r\n            isSearchable\r\n            // isDisabled={smoney ? false : true}\r\n          />\r\n        </div>\r\n        <div class=\"valid-feedback\">Looks good!</div>\r\n      </div>\r\n      <div className=\"coll-10\">\r\n        <Datepicker_Customer\r\n            onKeyDown={handleKeyDown}\r\n          default_value={\"\"}\r\n          settings={settings}\r\n          handle_date={handle_date}\r\n          lebal={<FormattedMessage id=\"Date\" />}\r\n          setSelectedDay={setSelectedDay}\r\n          selectedDay={selectedDay}\r\n        ></Datepicker_Customer>\r\n      </div>\r\n      <div className=\"col-10 ms-4 m-10 mt-5 ps-3 d-flex\">\r\n        <a\r\n          className=\"text-center form-control btn btn-danger text-light me-1 ms-1\"\r\n          style={{ margin: \"auto\", width: \"150px\" }}\r\n          onClick={close}\r\n        >\r\n                                      <FormattedMessage id=\"Cancel\" />\r\n        </a>\r\n        <a\r\n          className=\"text-center btn form-control btn-success text-light ms-1\"\r\n          ref={buttonRef}\r\n          style={{ margin: \"auto\", width: \"150px\" }}\r\n          onClick={() => {\r\n            sumbit();\r\n          }}\r\n        >\r\n                                                <FormattedMessage id=\"Submit\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport { ChevronDown } from 'lucide-react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\nconst ListBox = ({\r\n  isDisabled = false,\r\n  options = [],\r\n  selectedOption,\r\n  setSelectedOption,\r\n  width = '100%',\r\n}) => {\r\n  const { formatMessage, locale } = useIntl();\r\n  const isRTL = locale === 'fa'; // Assuming 'fa' is your Persian locale code\r\n  \r\n  const allUsersOption = { \r\n    name: <FormattedMessage id=\"All Users\" />, \r\n    id: 0 \r\n  };\r\n  \r\n  const updatedOptions = [allUsersOption, ...options];\r\n\r\n  useEffect(() => {\r\n    if (!selectedOption) {\r\n      setSelectedOption(allUsersOption);\r\n    }\r\n  }, [selectedOption, setSelectedOption, allUsersOption]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      backgroundColor: '#fff',\r\n      zIndex: 1,\r\n      borderRadius: '8px',\r\n      border: state.isFocused ? '2px solid #4f46e5' : '1px solid #d1d5db',\r\n      boxShadow: state.isFocused ? '0 0 5px rgba(79, 70, 229, 0.5)' : 'none',\r\n      '&:hover': {\r\n        border: '1px solid #4f46e5',\r\n      },\r\n      minHeight: '39px',\r\n      padding: '4px 8px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    menu: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      borderRadius: '8px',\r\n      boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',\r\n      overflow: 'hidden',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    option: (base, { isFocused, isSelected }) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      backgroundColor: isSelected ? '#4f46e5' : isFocused ? '#e0e7ff' : '#fff',\r\n      color: isSelected ? '#fff' : '#111827',\r\n      padding: isRTL ? '12px 16px 12px 8px' : '12px 8px 12px 16px',\r\n      cursor: 'pointer',\r\n      fontSize: '14px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      '&:active': {\r\n        backgroundColor: '#4338ca',\r\n      },\r\n    }),\r\n    singleValue: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      fontWeight: 'bold',\r\n      color: '#4f46e5',\r\n      fontSize: '14px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    placeholder: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      fontSize: '14px',\r\n      color: '#6b7280',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    dropdownIndicator: (base) => ({\r\n      ...base,\r\n      fontFamily:localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      padding: '8px',\r\n    }),\r\n    menuPortal: (base) => ({ ...base, zIndex: 10000 }),\r\n    input: (base) => ({\r\n      ...base,\r\n      fontFamily:localStorage.getItem(\"language\") !== \"en\" && \"'CustomFont1', sans-serif\",\r\n      textAlign: isRTL ? 'right' : 'left',\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`mt-3`} \r\n      style={{ width }}\r\n      dir={isRTL ? 'rtl' : 'ltr'}\r\n    >\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={updatedOptions}\r\n        getOptionLabel={(option) => option.name}\r\n        getOptionValue={(option) => option.id}\r\n        placeholder={formatMessage({ id: 'select.placeholder' }) || (isRTL ? 'انتخاب کنید...' : 'Select...')}\r\n        isClearable={false}\r\n        isSearchable={false}\r\n        isDisabled={isDisabled}\r\n        menuPortalTarget={document.body}\r\n        styles={customStyles}\r\n        components={{\r\n          DropdownIndicator: ({ innerProps }) => (\r\n            <div {...innerProps} className={isRTL ? 'pl-2 text-gray-500' : 'pr-2 text-gray-500'}>\r\n              <ChevronDown size={20} />\r\n            </div>\r\n          ),\r\n          ClearIndicator: null,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nListBox.propTypes = {\r\n  isDisabled: PropTypes.bool,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      name: PropTypes.node.isRequired,\r\n    })\r\n  ),\r\n  selectedOption: PropTypes.object,\r\n  setSelectedOption: PropTypes.func.isRequired,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nListBox.defaultProps = {\r\n  isDisabled: false,\r\n  options: [],\r\n  selectedOption: null,\r\n  width: '100%',\r\n};\r\n\r\nexport default ListBox;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gregorianToJalali = exports.jalaliToGregorian = void 0;\nvar shamsi = require(\"shamsi\");\nvar gtj = shamsi.gregorianToJalali, jtg = shamsi.jalaliToGregorian;\nexports.jalaliToGregorian = jtg;\nfunction gregorianToJalali(yearOrDate, month, day) {\n    if (typeof yearOrDate !== 'number') {\n        var date = new Date(yearOrDate);\n        var y = date.getFullYear();\n        var m = (date.getMonth() + 1);\n        var d = date.getDate();\n        return gtj(y, m, d);\n    }\n    else {\n        return gtj(yearOrDate, month, day);\n    }\n}\nexports.gregorianToJalali = gregorianToJalali;\n"],"names":["_ref","isEditable","name","type","options","Onsearch","selectedOption","setAddAccountModal","setSelectedOption","searchQuery","handleInputChange","customStyles","menuPortal","base","_objectSpread","zIndex","formatMessage","useIntl","_jsx","className","children","Select","classNamePrefix","inputValue","value","onChange","sselectedOption","onInputChange","getOptionLabel","option","style","display","alignItems","concat","getOptionValue","placeholder","id","isClearable","components","MenuList","props","_jsxs","justifyContent","padding","borderTop","cursor","backgroundColor","onClick","isSearchable","isDisabled","menuPortalTarget","document","body","styles","Datepicker","handle_date","settings","default_value","lebal","onKeyDown","selectedDay","setSelectedDay","useState","htmlFor","InputDatePicker","date","handl","year","_a","month","day","inputPlaceholder","locale","colorPrimary","maximumDate","minimumDate","Object","defineProperty","exports","jalaliToGregorian","gregorianToJalali","gy","gm","gd","jy","jm","jd","gy2","days","salA","parseInt","Belance","inputRef","belancem","setbelance","close","accountbelance","belance1","openBelance","setEditAccount","moneys","money","setmoney","customer","setcustomer","idprof","prof","setMoney","belance","addreport","setaddreport","user","localStorage","getItem","discription","amount","account","cash","moneytype","setmoneytype","updatebelance","setupdatebelance","handlereport","e","target","Moneyid","setMoneyid","showbelance","setshowbelance","addmoneybelance","setmoneybelance","delete","formattedValue","setFormattedValue","width","map","row","color","moneyType","algorithm","Array","isArray","length","valaidmoney","forEach","el","undefined","some","element","type_id","push","src","Add","alt","height","type_money","add","uploadData","FormData","append","Date","addbelance","isdelete","user_id","account_id","date_created","toISOString","axios","post","Source","getAddress","headers","Authorization","then","res","data","pre","filter","item","Swal","position","icon","title","showConfirmButton","timer","catch","error","addmoney","ref","for","NumericFormat","thousandSeparator","datetime","jalaliDate12","getFullYear","getMonth","getDay","isoString","unformattedValue","replace","filteredBelance","disabled","SendReport","addRe","response","add_cash","a","Add_belance","setAccounts","addAccountModal","records","setRecords","setAddcustomerModal","accounts","showAlert","useShowAlert","customers","errorc","statusc","useDispatch","useSelector","state","setOptions","bbelance","setbbelance","setcustomers","moment","setadd","account_name","moneyId","user_name","Customer","setCustomer","national_id_picture","profile_picture","national_id_number","address","whatsup_number","father_name","phone_number","smoney","setsmeony","nmoney","setnmoney","setNationalIdPicture","ProfilePicture","setProfilePicture","setSearchQuery","buttonRef","useRef","handleKeyDown","key","preventDefault","current","click","useEffect","async","get","params","query","do","fetchData","class","FormattedMessage","Combo_Customer","newValue","missing_moneys","newId","Math","max","record","Datepicker_Customer","jalaliDate","now","jalaali","String","getHours","padStart","getMinutes","margin","prev","ontransaction","put","err","formatNumber","number","toLocaleString","Account","statuss","selecteduser","setSelecteduser","users","statusu","namesearch","setnameSearch","Date_Start","setDate_start","Date_End","setDate_end","StartDate","setStartDate","EndDate","setEndDate","setBelance","setOpenBelance","editAccount","setId","editAccountModal","setEditAccountModal","isBelanceEmpty","setIsBelanceEmpty","checkBelanceResult","setCheckBelanceResult","setSmeony","isDesktop","setIsDesktop","window","innerWidth","columnsDesktop","selector","textAlign","delete_report","border","Trash","PDcolumn","dir","editbelance","setEditbelance","setAdd","editFull","setEditFull","useMemo","d","formattedDate","hours","minutes","aa","formattedHours","formattedMinutes","format","columnsTablet","sortable","select_user","setselect_user","totalRows","setTotalRows","loading","setLoading","currentPage","setCurrentPage","perPage","setPerPage","page","pageSize","search","total","intl","swalWithBootstrapButtons","customClass","confirmButton","cancelButton","buttonsStyling","result","fire","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","isConfirmed","belance_delete","_method","dismiss","cancel","AddcustomerModal","select","OnRowClick","localization","pagination","rowsPerPage","previous","next","columns","reverse","t","ListBox","maxWidth","DataTable","onRowClicked","moneyid","find","p","i","r","striped","responsive","progressPending","highlightOnHover","paginationServer","paginationTotalRows","onChangePage","Edit_account","Editefull","setEditeFull","AddAccount","dispatch","getCustomers","isRTL","allUsersOption","updatedOptions","control","fontFamily","borderRadius","isFocused","boxShadow","minHeight","direction","menu","overflow","_ref2","isSelected","fontSize","singleValue","fontWeight","dropdownIndicator","input","DropdownIndicator","_ref3","innerProps","ChevronDown","size","ClearIndicator","defaultProps","shamsi","require","gtj","yearOrDate","y","m","getDate"],"sourceRoot":""}