{"version":3,"file":"static/js/608.723a4abd.chunk.js","mappings":"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","sources":["pages/Items/Returns/Forms/ComboBo.js","pages/Items/Returns/Forms/EditSellReturn.js","pages/Items/Returns/Forms/AddSellReturn.js"],"sourcesContent":["import React from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n  \r\nconst Combo_Customer = ({ \r\n  isEditable = false, \r\n  options, \r\n  Onsearch, \r\n  selectedOption, \r\n  // readOnly, \r\n  setSelectedOption, \r\n  searchQuery, \r\n  handleInputChange \r\n}) => {\r\n  const handleChange = (sselectedOption) => {\r\n    setSelectedOption(sselectedOption);\r\n    // Onsearch(sselectedOption);\r\n  };\r\nconsole.log(options);\r\n//   const CustomMenuList = (props) => (\r\n//     <components.MenuList {...props}>\r\n//       {props.children}\r\n//       {type && (\r\n//         <div\r\n//           style={{\r\n//             display: \"flex\",\r\n//             justifyContent: \"center\",\r\n//             padding: \"10px\",\r\n//             borderTop: \"1px solid #eaeaea\",\r\n//             cursor: \"pointer\",\r\n//             backgroundColor: \"#f9f9f9\",\r\n//           }}\r\n//           onClick={() => setAddAccountModal(searchQuery)}\r\n//         >\r\n//           <strong>{name}</strong>\r\n//         </div>\r\n//       )}\r\n//     </components.MenuList>\r\n//   );\r\n\r\n  const customStyles = {\r\n    menuPortal: (base) => ({ ...base, zIndex:10000000 }),\r\n  };\r\n  const { formatMessage } = useIntl();\r\n  const { sidebars,statusSidebar} = useSelector((state) => state.sidebars);  \r\n  // console.log(searchQuery);\r\n  return (\r\n    <div className=\"w-40\">\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        inputValue={searchQuery}\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={options}\r\n        onInputChange={handleInputChange}\r\n        getOptionLabel={(option) => (\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <span>{`${sidebars[0].type===\"gold\" ? option.stock?.name+\" \"+option.stock?.type?.name :option.stock?.name} `}</span>\r\n              {/* <span>{`${option.stock?.name}`}</span> */}\r\n            </div>)}\r\n        getOptionValue={(option) => `${option.stock?.name}`}\r\n        // placeholder=\"Search...\"\r\n        placeholder={formatMessage({ id: \"Search...\" })}\r\n        isClearable\r\n        // components={{ MenuList: CustomMenuList }}\r\n        isSearchable\r\n        isDisabled={isEditable}\r\n        menuPortalTarget={document.body} // انتقال منو به `body`\r\n        styles={customStyles} // تنظیم `z-index`\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Combo_Customer;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\n// import Source from \"../../../Source\";\r\nimport Source from \"../../../../Source\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { showAlert } from \"../../../../warrper\";\r\nimport Datepicker_Customer from \"./../../../forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport jalaali from \"jalaali-js\";\r\n// import Combo_stock from \"./../../../forms/Combo_Customer\";\r\nimport ComboBo from'./ComboBo';\r\nimport Combo_item from \"./../../../forms/Combo_Customer\";\r\nimport Combo_Customer from \"./../../../forms/Combo_Customer\";\r\nimport ComboBox from \"./../../../forms/ComboBox\";\r\nimport Trash from \"./../../../../assets/icon/trash.png\";\r\nimport Print from \"./../../../../assets/icon/print.png\";\r\nimport Add from \"./../../../../assets/icon/add.png\";\r\nimport jsPDF from \"jspdf\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getSettings } from \"./../../../Redux/settingSlice\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useShowAlert  } from \"../../../../warrper\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography\r\n} from '@mui/material';\r\nimport { Plus, Trash2, X } from 'lucide-react';\r\nimport { NumericFormat } from 'react-number-format';\r\nexport default function EditSellReturn({\r\n  AddSellModal,\r\n  close,\r\n  // settings,\r\n  records,\r\n  setRecords,\r\n  moneys,\r\n  shopingcart,setshopingcart,\r\n  // addAccountModal,\r\n  // setAddAccountModal,\r\n  // setcustomer,customer,\r\n  belance,\r\n  setbelance,\r\n  setAddBalanceModal,\r\n  options1,\r\n  setOptions1,\r\n  SoldRecords,setSoldRecords,\r\n  bill,setbill,\r\n  money,setmoney,\r\n  returnbill,setreturnbill,TotalAmount, setTotalAmount,PaidAmount, setPaidAmount\r\n}) {\r\n  const showAlert = useShowAlert(); \r\n  const dispatch = useDispatch();\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n  useEffect(() => {\r\n    if (!statuss && settings?.lenght === 0) {\r\n      dispatch(getSettings());\r\n    }\r\n  }, [dispatch, statuss]);\r\n  // const { customers, errorc } = useSelector((state) => state.customers);\r\n  const { items, errori } = useSelector((state) => state.items);\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  const { sidebars } = useSelector((state) => state.sidebars);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [selectedOption1, setSelectedOption1] = useState();\r\n  const [EndDate, setEndDate] = useState(moment());\r\n  const [account, setaccount] = useState(false);\r\n  const [update, setupdate] = useState({ id: 0, belance: 0 });\r\n  const [selectedOptionAccount, setSelectedOptionAccount] = useState([]);\r\n  const [ExestQty, setExestQty] = useState(0);\r\n  const [AddItem, setAddItem] = useState({\r\n    sell:null,\r\n    item_id: \"\",\r\n    qty: null,\r\n    weight: null,\r\n    dateInsert: new Date().toISOString(),\r\n    rate: null,\r\n    user_id: localStorage.getItem(\"userTokenid\"),\r\n    purchase_price: null,\r\n    description: \"\",\r\n    sell_price: null,\r\n    expiry_date: new Date().toISOString(),\r\n    accounts_id: \"\",\r\n    money: \"\",\r\n    stock: { name: \"\" },\r\n    e_id: 1,\r\n  });\r\n\r\n\r\n  const [primari, setprimari] = useState(0);\r\n\r\n  const algorithm = (e) => {\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        accounts_id: e.id,\r\n      });\r\n    }\r\n  };\r\n  const algorithm1 = (e) => {\r\n    setSelectedOption1(e);\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        item_id: e.item_id,\r\n        stock: e,\r\n        sell:e.id\r\n        // id:e.id\r\n      });\r\n    }\r\n  };\r\n  const handle_date = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setAddItem({\r\n        ...AddItem,\r\n        dateInsert: isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (settings[0].date === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n\r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n\r\n  const capitalizeWords = (text) => {\r\n    return text\r\n      .toLowerCase() // همه حروف را کوچک کنید\r\n      .split(\" \") // متن را به آرایه‌ای از کلمات تقسیم کنید\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1)) // حروف اول هر کلمه را بزرگ کنید\r\n      .join(\" \"); // کلمات را به هم وصل کنید\r\n  };\r\n  const generateInvoicePDF = (id) => {\r\n    const doc = new jsPDF();\r\n\r\n    // Title Section\r\n    doc.setFontSize(26);\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setTextColor(11, 105, 255); // Blue color for title\r\n    doc.text(\"Invoice\", 105, 10, null, null, \"center\");\r\n\r\n    doc.setFontSize(14);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n    doc.text(`${settings[0].company_name}`, 105, 20, null, null, \"center\");\r\n    doc.setFontSize(12);\r\n    doc.text(\r\n      `Seller Name: ${\r\n        selectedOption ? capitalizeWords(selectedOption.name) : \"N/A\"\r\n      }`,\r\n      105,\r\n      28,\r\n      null,\r\n      null,\r\n      \"center\"\r\n    );\r\n\r\n    // Invoice Details Section\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(11, 105, 255); // Blue color for the section heading\r\n    doc.text(`Invoice Number: ${id}`, 5, 19);\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n\r\n    const date = new Date(selectedDay);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (localStorage.getItem(\"date\") === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"pm\" : \"am\";\r\n      formattedDate = moment(selectedDay).format(\"jYYYY/jMM/jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n    const fromdata = `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    // return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    // doc.text(`Date: ${selectedDay ? date(selectedDay) : 'N/A'}`, 5, 29);\r\n    doc.text(`Date:${fromdata}`, 5, 29);\r\n\r\n    // Draw Horizontal Line\r\n    doc.setDrawColor(0, 0, 0); // Black color for line\r\n    doc.setLineWidth(0.5);\r\n    doc.line(5, 35, 205, 35);\r\n\r\n    // Company Image\r\n    if (settings[0].company_pic) {\r\n      const url = settings[0].company_pic;\r\n      const fileName = url.split(\"/\").pop();\r\n      doc.addImage(\r\n        Source.getAddress() + \"/api/getImage/\" + fileName,\r\n        \"JPEG\",\r\n        180,\r\n        5,\r\n        25,\r\n        25\r\n      );\r\n    } else {\r\n      doc.setFontSize(12);\r\n      doc.text(\"No Company Image Available\", 150, 20);\r\n    }\r\n\r\n    // Table with Purchase Details\r\n    doc.autoTable({\r\n      startY: 40,\r\n      head: [[\"No\", \"Name\", \"Quantity\", \"Price\", \"Total\"]],\r\n      body: shopingcart.map((row) => [\r\n        row.e_id,\r\n        row.stock.name,\r\n        row.qty,\r\n        row.sell_price +\r\n          `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n        row.sell_price * row.qty +\r\n          `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      ]),\r\n      theme: \"grid\",\r\n      headStyles: {\r\n        fillColor: [11, 105, 255],\r\n        textColor: [255, 255, 255],\r\n        fontSize: 10,\r\n        fontStyle: \"bold\",\r\n      },\r\n      bodyStyles: {\r\n        fontSize: 10,\r\n        textColor: [0, 0, 0],\r\n        fillColor: [255, 255, 255],\r\n      },\r\n      alternateRowStyles: {\r\n        fillColor: [245, 245, 245],\r\n      },\r\n    });\r\n\r\n    // Footer Section Positioned Dynamically\r\n    const finalY = doc.lastAutoTable.finalY || 40; // Ensure there's a fallback\r\n    doc.setFontSize(9);\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n\r\n    // Amount Details Section\r\n    doc.text(\r\n      `Total Amount: ${TotalAmount}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 5\r\n    );\r\n    doc.text(\r\n      `Paid Amount: ${PaidAmount ? PaidAmount : \"0.00\"}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 10\r\n    );\r\n    doc.text(\r\n      `Belance: ${update.belance}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 15\r\n    );\r\n\r\n    // Draw Horizontal Line\r\n    if (finalY + 15 > 144) {\r\n      doc.setDrawColor(0, 0, 0);\r\n      doc.setLineWidth(0.5);\r\n      doc.line(5, 278, 205, 278);\r\n      doc.text(`Address: ${settings[0].address}`, 10, 283);\r\n      doc.text(`Phone: ${settings[0].phone}`, 80, 283);\r\n      doc.text(`Email: ${settings[0].email}`, 140, 283);\r\n    } else {\r\n      doc.setDrawColor(0, 0, 0);\r\n      doc.setLineWidth(0.5);\r\n      doc.line(5, 139, 205, 139);\r\n      // Footer Address\r\n      doc.setFontSize(12);\r\n      // doc.addImage(AddAddress, 'png', 180, 5, 25, 25);\r\n      doc.text(`Address: ${settings[0].address}`, 10, 144);\r\n      doc.text(`Phone: ${settings[0].phone}`, 80, 144);\r\n      doc.text(`Email: ${settings[0].email}`, 140, 144);\r\n    }\r\n\r\n    // Save the document as a PDF\r\n    const pdfURL = doc.output(\"bloburl\");\r\n    const iframe = document.createElement(\"iframe\");\r\n    iframe.style.display = \"none\";\r\n    iframe.src = pdfURL;\r\n    document.body.appendChild(iframe);\r\n    iframe.contentWindow.print();\r\n  };\r\n  // console.log(bill);\r\n  const Sumbit = (flag) => {\r\n    let BillId = 0;\r\n    // if (shopingcart.length <= 0) {\r\n    //   showAlert({\r\n    //     position: \"top-end\",\r\n    //     icon: \"error\",\r\n    //     title: \"You must fill the item input!\",\r\n    //     showConfirmButton: false,\r\n    //     timer: 1000,\r\n    //   });\r\n    //   return;\r\n    // }\r\n    let arr = [];\r\n    shopingcart.forEach((key) => {\r\n      arr.push({\r\n        sell:key.sell,\r\n        item_id: key.item_id,\r\n        qty:parseInt(key.qty),\r\n        weight: key.weight,\r\n        dateInsert: key.dateInsert,\r\n        rate: key.rate,\r\n        user_id: key.user_id,\r\n        sell_price: key.sell_price,\r\n        description: key.description,\r\n        expiry_date: key.expiry_date,\r\n        bill_id: \"\",\r\n        accounts_id: key.accounts_id,\r\n      });\r\n    });\r\n    // console.log(arr);\r\n    let add = { arr: arr ,\r\n      _method:\"put\"\r\n    };\r\n    axios\r\n      .post(Source.getAddress() + \"/api/sellreturn/\"+returnbill.id, add, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {\r\n          Exesting: bill?.accounts_id ? \"ok\" : \"no\",\r\n          money: bill?.money_id || 0,\r\n          accounts_id: bill.accounts?.account_id,\r\n          PaidAmount: PaidAmount ? PaidAmount : 0,\r\n          TotalAmount: TotalAmount,\r\n          CustomerName: bill.temp_customer,\r\n          DateInsert: selectedDay,\r\n          bill_id:bill.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (flag) {\r\n          generateInvoicePDF(res.data.bill.id);\r\n        }\r\n        res.data.bill[\"money\"] = money;\r\n        res.data.bill[\"accounts\"] = { account: bill?.accounts?.account };\r\n        res.data.bill[\"temp_customer\"] = bill.temp_customer;\r\n        BillId = res.data.bill.id;\r\n        let add = {\r\n          sells: shopingcart,\r\n          bill: res.data.bill,\r\n          money: money,\r\n        };\r\n        console.log(res);\r\n        setRecords([add, ...records]);\r\n        setSelectedDay(moment());\r\n        setSelectedOption({ name: \"\" });\r\n        setSelectedOption1({ name: \"\", type: { measuring: \"\" } });\r\n        setEndDate(moment());\r\n        setprimari(0);\r\n        setAddItem({\r\n          stocks_id: 0,\r\n          qty: 0,\r\n          weight: 0,\r\n          dateInsert: new Date().toISOString(),\r\n          rate: 0,\r\n          user_id: localStorage.getItem(\"userTokenid\"),\r\n          purchase_price: 0,\r\n          description: \"Description\",\r\n          sell_price: 0,\r\n          expiry_date: new Date().toISOString(),\r\n          accounts_id: \"\",\r\n        });\r\n        setSearchQuery(\"\");\r\n        setSearchQuery1(\"\");\r\n        setSelectedOptionmoney({ name: \"\" });\r\n        setaccount(false);\r\n        setSelectedDay(moment());\r\n        setSelectedOption();\r\n        setSelectedOptionmoney();\r\n        setExestQty(0);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          // title: \"Stock has been created!\",\r\n                                                                title: <FormattedMessage id=\"Your record has been added!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          // title: \"Sosmething went wrong!\",\r\n          title:  <FormattedMessage id=\"You must enter the customer name!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      });\r\n  };\r\n  const AddtoTable = () => {\r\n    if (!AddItem.qty) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"Select an item!\",\r\n                        title:  <FormattedMessage id=\"Select an item!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    const qty = AddItem.qty ? parseInt(AddItem.qty) : 0;\r\n    const weight = AddItem.weight ||1;\r\n    const sellPrice = AddItem.sell_price ? parseFloat(AddItem.sell_price) : 0;\r\n    if (parseInt(selectedOption1.qty) - qty < 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"have not enuagh item!\",\r\n                        title:  <FormattedMessage id=\"have not enuagh item!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    if (!qty || !sellPrice || !selectedOption1) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"Please select an item and fill the quantity and price!\",\r\n                                          title:  <FormattedMessage id=\"Please select an item and fill the quantity and price!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n      if (qty <= 0 || sellPrice <= 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"Quantity and price must be positive values!\",\r\n                        title:  <FormattedMessage id=\"Quantity and price must be positive values!\" />,\r\n\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    const addto ={...selectedOption1,...{sell:AddItem.sell}};\r\n    setSoldRecords((prevRecords) => \r\n      prevRecords.map((row) => {\r\n    if (row.id === selectedOption1.id) {\r\n      // console.log(row);\r\n      const updatedQty = parseInt(row.qty, 10) - parseInt(AddItem.qty, 10);\r\n      // console.log({ ...row, qty: updatedQty });\r\n      return { ...row, qty: updatedQty };\r\n    }\r\n    return row;\r\n  })\r\n);\r\naddto.qty=AddItem.qty;\r\nsetshopingcart((prev) => [\r\n  ...shopingcart,\r\n  addto\r\n]);\r\n\r\nsetPaidAmount((prev) => prev + qty * sellPrice*weight);\r\nsetTotalAmount((prev) => prev + qty * sellPrice*weight);\r\nsetAddItem({\r\n  stocks_id: \"\",\r\n  qty: \"\",\r\n  weight: null,\r\n  dateInsert: new Date().toISOString(),\r\n  rate: null,\r\n  user_id: localStorage.getItem(\"userTokenid\"),\r\n  purchase_price: \"\",\r\n  description: \"\",\r\n  sell_price: \"\",\r\n  expiry_date: new Date().toISOString(),\r\n  accounts_id: \"\",\r\n  money: \"\",\r\n  stock: { name: \"\" },\r\n  e_id: AddItem.e_id + 1,\r\n});\r\n// بازنشانی selectedOption1\r\nsetSelectedOption1(null);\r\n\r\n};\r\n  const handleItem = (e) => {\r\n    setAddItem({\r\n      ...AddItem,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const [options, setOptions] = useState();\r\n  const handleSearch = async (query) => {\r\n    if (!Exesting) {\r\n      if (query) {\r\n        setAddItem({\r\n          ...AddItem,\r\n          temp_customer: query,\r\n        });\r\n        setSelectedOption({ id: 0, name: query });\r\n      }\r\n    }\r\n  };\r\n  const handleSearch1 = async (query) => {\r\n  };\r\n  const handleInputChange = (newValue) => {\r\n    setSearchQuery(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const handleInputChange1 = (newValue) => {\r\n    setSearchQuery1(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch1(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchQuery1, setSearchQuery1] = useState(\"\");\r\n\r\n  const [selectedOptionmoney, setSelectedOptionmoney] = useState({ name: \"\" });\r\n  const algorithmmoney = (e) => {\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        money: e.id,\r\n      });\r\n    }\r\n  };\r\n  const Deleteshopingcart = (e) => {\r\n    setSoldRecords((prev) => \r\n      prev.map((row) => \r\n        row.id === e.sell ? { ...row, qty: row.qty + e.qty } : row\r\n      )\r\n    );\r\n    setTotalAmount((prev) => parseInt(prev) - parseInt(e.qty * e.sell_price*e.weight));\r\n    setPaidAmount((prev) =>  parseInt(prev)  - parseInt(e.qty * e.sell_price*e.weight));\r\n    setshopingcart((prev) => prev.filter((pre) => pre.id !== e.id));\r\n  };\r\n  const buttonRef = useRef(null);\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if (buttonRef.current && AddSellModal) {\r\n        buttonRef.current.click();\r\n      }\r\n    }\r\n  };\r\n  const handlepaid = (e) => {\r\n    setPaidAmount(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (!PaidAmount) {\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: -TotalAmount,\r\n      }));\r\n    } else {\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: PaidAmount - TotalAmount || 0,\r\n      }));\r\n    }\r\n\r\n    // }\r\n  }, [PaidAmount, TotalAmount, shopingcart]);\r\n  const [Exesting, setExesting] = useState();\r\n  const [id,setid]=useState();\r\n  console.log(shopingcart);\r\n  let e_id=0;\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n     <Dialog\r\n          open={AddSellModal}\r\n          onClose={close}\r\n          maxWidth=\"xl\"\r\n          fullWidth\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: 3,\r\n              height: '85vh',\r\n              backgroundColor: '#f8f9fa',\r\n              padding: 1,\r\n              fontSize: '0.8rem',\r\n              direction: localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"\r\n            }\r\n          }}\r\n        >\r\n          {/* Header Section */}\r\n          <DialogTitle sx={{ p: 1 }}>\r\n            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{\r\n                  backgroundColor: 'info.main',\r\n                  color: 'white',\r\n                  width: '100%',\r\n                  textAlign: 'center',\r\n                  py: 1,\r\n                  borderRadius: 1,\r\n                  fontSize: '0.9rem'\r\n                }}\r\n              >\r\n                <FormattedMessage id=\"Return Sell\" />\r\n              </Typography>\r\n              <IconButton onClick={close} size=\"small\" sx={{ mt: 0 }}>\r\n                <X size={20} />\r\n              </IconButton>\r\n            </Stack>\r\n          </DialogTitle>\r\n    \r\n          {/* Main Content */}\r\n          <DialogContent sx={{ p: 1 }}>\r\n            <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n              {/* Left Column (8 columns on desktop, 12 on mobile) */}\r\n              <Box sx={{ width: { xs: '100%', md: '66%' } }}>\r\n                {/* Search Bill Section */}\r\n                <Card sx={{ mb: 2, boxShadow: 2 }}>\r\n                  <CardContent sx={{ p: 2 }}>\r\n                    <Typography variant=\"subtitle2\" sx={{ mb: 1, fontSize: '0.85rem' }}>\r\n                      <FormattedMessage id=\"Search Bill\" />\r\n                    </Typography>\r\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} alignItems=\"flex-end\">\r\n                      <TextField\r\n                        // onChange={(e) => setid(e.target.value)}\r\n                        value={bill.id || ''}\r\n                        type=\"number\"\r\n                        label={<FormattedMessage id=\"Bill Number\" />}\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ maxWidth: 200 }}\r\n                      />\r\n                      <TextField\r\n                        readOnly\r\n                        value={bill?.temp_customer || bill?.accounts?.account?.name}\r\n                        label={<FormattedMessage id=\"Customer Name\" />}\r\n                        size=\"small\"\r\n                        fullWidth\r\n                      />\r\n                    </Stack>\r\n                  </CardContent>\r\n                </Card>\r\n    \r\n                {/* Customer Info Section */}\r\n                <Card sx={{ mb: 2, boxShadow: 1 }}>\r\n                  <CardContent sx={{ p: 2 }}>\r\n                    <Typography variant=\"subtitle2\" sx={{ mb: 1, fontSize: '0.85rem' }}>\r\n                      <FormattedMessage id=\"Customer Info\" />\r\n                    </Typography>\r\n                    <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n                      <TextField\r\n                        readOnly\r\n                        value={bill?.dateInsert && date(bill?.dateInsert)}\r\n                        label={<FormattedMessage id=\"Date\" />}\r\n                        size=\"small\"\r\n                        fullWidth\r\n                      />\r\n                      <TextField\r\n                        readOnly\r\n                        value={bill?.total && `${bill?.total} ${bill.money?.name}`}\r\n                        label={<FormattedMessage id=\"Total Amount\" />}\r\n                        size=\"small\"\r\n                        fullWidth\r\n                      />\r\n                      <TextField\r\n                        readOnly\r\n                        value={bill?.PaidAmount && `${bill?.PaidAmount} ${bill.money?.name}`}\r\n                        label={<FormattedMessage id=\"Paid Amount\" />}\r\n                        size=\"small\"\r\n                        fullWidth\r\n                      />\r\n                      <TextField\r\n                        readOnly\r\n                        value={bill?.Remain && `${bill?.Remain} ${bill.money?.name}`}\r\n                        label={<FormattedMessage id=\"Remain Amount\" />}\r\n                        size=\"small\"\r\n                        fullWidth\r\n                      />\r\n                    </Stack>\r\n                  </CardContent>\r\n                </Card>\r\n    \r\n                {/* Item Information Section */}\r\n                <Card sx={{ mb: 2, boxShadow: 1 }}>\r\n                  <CardContent sx={{ p: 2 }}>\r\n                    <Typography variant=\"subtitle2\" sx={{ mb: 1, fontSize: '0.85rem' }}>\r\n                      <FormattedMessage id=\"Item information\" />\r\n                    </Typography>\r\n                    <Box sx={{ \r\n                      display: 'flex',\r\n                      flexDirection: { xs: 'column', sm: 'row' },\r\n                      gap: 2,\r\n                      alignItems: 'flex-end',\r\n                      flexWrap: 'wrap'\r\n                    }}>\r\n                      {/* Item Name */}\r\n                      <Box sx={{ flex: '2 1 180px', minWidth: 180 }}>\r\n                        <Typography variant=\"body2\" fontWeight=\"medium\" gutterBottom>\r\n                          <FormattedMessage id=\"Item Name\" />\r\n                        </Typography>\r\n                        <ComboBo\r\n                          searchQuery={searchQuery1}\r\n                          setSearchQuery={setSearchQuery1}\r\n                          handleInputChange={handleInputChange1}\r\n                          handleSearch={handleSearch1}\r\n                          setSelectedOption={algorithm1}\r\n                          selectedOption={selectedOption1}\r\n                          options={SoldRecords}\r\n                          compactMode={true}\r\n                          sx={{ width: '100%' }}\r\n                        />\r\n                      </Box>\r\n    \r\n                      {/* Quantity */}\r\n                      <Box sx={{ flex: '1 1 120px', minWidth: 120 }}>\r\n                        <Typography variant=\"body2\" fontWeight=\"medium\" gutterBottom>\r\n                          <FormattedMessage id=\"Quantity\" />\r\n                        </Typography>\r\n                        <NumericFormat\r\n                          customInput={TextField}\r\n                          onKeyDown={handleKeyDown}\r\n                          onValueChange={({ value }) => handleItem({ target: { name: 'qty', value } })}\r\n                          value={AddItem.qty}\r\n                          name=\"qty\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          thousandSeparator\r\n                        />\r\n                      </Box>\r\n    \r\n                      {/* Sell Price */}\r\n                      <Box sx={{ flex: '1 1 120px', minWidth: 120 }}>\r\n                        <Typography variant=\"body2\" fontWeight=\"medium\" gutterBottom>\r\n                          <FormattedMessage id=\"Price\" />\r\n                        </Typography>\r\n                        <NumericFormat\r\n                          customInput={TextField}\r\n                          onKeyDown={handleKeyDown}\r\n                          onValueChange={({ value }) => handleItem({ target: { name: 'sell_price', value } })}\r\n                          value={AddItem.sell_price}\r\n                          name=\"sell_price\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          thousandSeparator\r\n                          InputProps={{\r\n                            startAdornment: (\r\n                              <InputAdornment position=\"start\" sx={{ color: 'text.secondary' }}>\r\n                                $\r\n                              </InputAdornment>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </Box>\r\n    \r\n                      {/* Weight (if gold) */}\r\n                      {sidebars[0]?.type === 'gold' && (\r\n                        <Box sx={{ flex: '1 1 120px', minWidth: 120 }}>\r\n                          <Typography variant=\"body2\" fontWeight=\"medium\" gutterBottom>\r\n                            <FormattedMessage id=\"weight\" />\r\n                          </Typography>\r\n                          <NumericFormat\r\n                            customInput={TextField}\r\n                            onKeyDown={handleKeyDown}\r\n                            thousandSeparator\r\n                            decimalSeparator=\".\"\r\n                            decimalScale={3}\r\n                            onValueChange={({ value }) => handleItem({ target: { name: 'weight', value } })}\r\n                            value={AddItem.weight}\r\n                            name=\"weight\"\r\n                            size=\"small\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              startAdornment: (\r\n                                <InputAdornment position=\"start\" sx={{ color: 'text.secondary' }}>\r\n                                  g\r\n                                </InputAdornment>\r\n                              ),\r\n                            }}\r\n                          />\r\n                        </Box>\r\n                      )}\r\n    \r\n                      {/* Description */}\r\n                      <Box sx={{ flex: '2 1 200px', minWidth: 180 }}>\r\n                        <Typography variant=\"body2\" fontWeight=\"medium\" gutterBottom>\r\n                          <FormattedMessage id=\"Description\" />\r\n                        </Typography>\r\n                        <TextField\r\n                          name=\"description\"\r\n                          multiline\r\n                          minRows={1}\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          value={AddItem.description}\r\n                          onChange={handleItem}\r\n                        />\r\n                      </Box>\r\n    \r\n                      {/* Add Button */}\r\n                      <Button\r\n                        onClick={AddtoTable}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        startIcon={<Plus size={16} />}\r\n                        sx={{ height: 40, minWidth: 100 }}\r\n                      >\r\n                        <FormattedMessage id=\"Add\" />\r\n                      </Button>\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </Box>\r\n    \r\n              {/* Right Column (4 columns on desktop, 12 on mobile) */}\r\n              <Box sx={{ width: { xs: '100%', md: '33%' } }}>\r\n                {/* Item Sold Table */}\r\n                <Card sx={{ mb: 2, maxHeight: 200, overflow: 'auto' }}>\r\n                  <CardContent sx={{ p: 1 }}>\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      sx={{\r\n                        backgroundColor: 'info.main',\r\n                        color: 'white',\r\n                        textAlign: 'center',\r\n                        py: 1,\r\n                        borderRadius: 1,\r\n                        fontSize: '0.85rem',\r\n                        mb: 1\r\n                      }}\r\n                    >\r\n                      <FormattedMessage id=\"Item Sold\" />\r\n                    </Typography>\r\n                    <TableContainer>\r\n                      <Table size=\"small\" stickyHeader>\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell sx={{ width: '30%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"Name\" />\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"Quantity\" />\r\n                            </TableCell>\r\n                                             {sidebars[0].type==='gold' && <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"weight\" /></TableCell>}\r\n                            <TableCell sx={{ width: '25%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"Price\" />\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '25%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"Description\" />\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {SoldRecords?.map((row, idx) => (\r\n                            <TableRow key={idx}>\r\n                              <TableCell sx={{ fontSize: '0.8rem' }}>{row.stock.name}</TableCell>\r\n                              <TableCell sx={{ fontSize: '0.8rem' }}>{row.qty}</TableCell>\r\n                                                  {sidebars[0].type==='gold'&&< TableCell>{row.weight}</TableCell>}\r\n                              <TableCell sx={{ fontSize: '0.8rem' }}>{row.sell_price}</TableCell>\r\n                              <TableCell sx={{ fontSize: '0.8rem' }}>{row.description}</TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </CardContent>\r\n                </Card>\r\n    \r\n                {/* Return Amounts */}\r\n                <Card sx={{ mb: 2 }}>\r\n                  <CardContent sx={{ p: 2 }}>\r\n                    <NumericFormat\r\n                      customInput={TextField}\r\n                      value={TotalAmount}\r\n                      label={<FormattedMessage id=\"Total Return Amount\" />}\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      thousandSeparator\r\n                      readOnly\r\n                      sx={{ mb: 2 }}\r\n                    />\r\n                    <NumericFormat\r\n                      customInput={TextField}\r\n                      value={PaidAmount}\r\n                      onChange={handlepaid}\r\n                      label={<FormattedMessage id=\"Paid Return Amount\" />}\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      thousandSeparator\r\n                      readOnly={!Exesting}\r\n                      sx={{ mb: 2 }}\r\n                    />\r\n                  </CardContent>\r\n                </Card>\r\n              </Box>\r\n            </Stack>\r\n          </DialogContent>\r\n    \r\n          {/* Footer Section */}\r\n          <Box sx={{ p: 2 }}>\r\n            <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n              {/* Return Item Sold Table */}\r\n              <Box sx={{ width: { xs: '100%', md: '66%' } }}>\r\n                <Card sx={{ maxHeight: 300, overflow: 'auto' }}>\r\n                  <CardContent sx={{ p: 1 }}>\r\n                    <Typography\r\n                      variant=\"subtitle2\"\r\n                      sx={{\r\n                        backgroundColor: 'info.main',\r\n                        color: 'white',\r\n                        textAlign: 'center',\r\n                        py: 1,\r\n                        borderRadius: 1,\r\n                        fontSize: '0.85rem',\r\n                        mb: 1\r\n                      }}\r\n                    >\r\n                      <FormattedMessage id=\"Return Item Sold\" />\r\n                    </Typography>\r\n                    <TableContainer>\r\n                      <Table size=\"small\" stickyHeader>\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell sx={{ width: '5%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"No\" />\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"Name\" />\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '15%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"Quantity\" />\r\n                            </TableCell>\r\n                            {sidebars[0]?.type === 'gold' && (\r\n                              <TableCell sx={{ width: '10%', fontSize: '0.8rem' }}>\r\n                                <FormattedMessage id=\"weight\" />\r\n                              </TableCell>\r\n                            )}\r\n                            <TableCell sx={{ width: '15%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"Price\" />\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '15%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"Total\" />\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"Description\" />\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '10%', fontSize: '0.8rem' }}>\r\n                              <FormattedMessage id=\"Delete\" />\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {shopingcart?.map((row, idx) => (\r\n                            <TableRow key={idx}>\r\n                              <TableCell sx={{ fontSize: '0.8rem' }}>{row.e_id}</TableCell>\r\n                              <TableCell sx={{ fontSize: '0.8rem' }}>{row.stock.name}</TableCell>\r\n                              <TableCell sx={{ fontSize: '0.8rem' }}>{row.qty}</TableCell>\r\n                              {sidebars[0]?.type === 'gold' && (\r\n                                <TableCell sx={{ fontSize: '0.8rem' }}>{row.weight}</TableCell>\r\n                              )}\r\n                              <TableCell sx={{ fontSize: '0.8rem' }}>{row.sell_price}</TableCell>\r\n                              <TableCell sx={{ fontSize: '0.8rem' }}>{row.sell_price * row.qty}</TableCell>\r\n                              <TableCell sx={{ fontSize: '0.8rem' }}>{row.description}</TableCell>\r\n                              <TableCell>\r\n                                <IconButton\r\n                                  size=\"small\"\r\n                                  onClick={() => Deleteshopingcart(row)}\r\n                                >\r\n                                  <Trash2 size={16} />\r\n                                </IconButton>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </CardContent>\r\n                </Card>\r\n              </Box>\r\n    \r\n              {/* Remain Amount and Actions */}\r\n              <Box sx={{ width: { xs: '100%', md: '33%' } }}>\r\n                <Card sx={{ mb: 2 }}>\r\n                  <CardContent sx={{ p: 2 }}>\r\n                    <NumericFormat\r\n                      customInput={TextField}\r\n                      value={update.belance}\r\n                      label={<FormattedMessage id=\"Remain Return Amount\" />}\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      thousandSeparator\r\n                      readOnly\r\n                      sx={{ mb: 2 }}\r\n                    />\r\n                    <Datepicker_Customer\r\n                              default_value={EndDate}\r\n                              handle_date={handle_date}\r\n                              lebal={<FormattedMessage id=\"Date\" />}\r\n                              setSelectedDay={setSelectedDay}\r\n                              selectedDay={selectedDay}\r\n                            />\r\n                    <Stack direction=\"row\" spacing={1} justifyContent=\"center\">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"error\"\r\n                        size=\"small\"\r\n                        onClick={close}\r\n                        sx={{ width: 100, fontSize: '0.8rem' }}\r\n                      >\r\n                        <FormattedMessage id=\"Cancel\" />\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        size=\"small\"\r\n                        onClick={() => Sumbit(false)}\r\n                        sx={{ width: 100, fontSize: '0.8rem' }}\r\n                      >\r\n                        <FormattedMessage id=\"Save\" />\r\n                      </Button>\r\n                    </Stack>\r\n                  </CardContent>\r\n                </Card>\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n        </Dialog>\r\n\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\n// import Source from \"../../../Source\";\r\nimport Source from \"../../../../Source\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { showAlert } from \"../../../../warrper\";\r\nimport Datepicker_Customer from \"./../../../forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport jalaali from \"jalaali-js\";\r\n// import Combo_stock from \"./../../../forms/Combo_Customer\";\r\nimport ComboBo from'./ComboBo';\r\nimport Combo_item from \"./../../../forms/Combo_Customer\";\r\nimport Combo_Customer from \"./../../../forms/Combo_Customer\";\r\nimport ComboBox from \"./../../../forms/ComboBox\";\r\nimport Trash from \"./../../../../assets/icon/trash.png\";\r\nimport Print from \"./../../../../assets/icon/print.png\";\r\nimport Add from \"./../../../../assets/icon/add.png\";\r\nimport jsPDF from \"jspdf\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { getBelances } from \"../../Redux/belanceSlice\";\r\n// import { getMoneys } from \"../../Redux/moneysSlice\";\r\n// import { getCustomers } from \"../../Redux/customerSlice\";\r\n// import { getReports } from \"../../Redux/reportSlice\";\r\n// import { getItems } from \"../../Redux/itemSlice\";\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { addCustomerToCache } from \"../../Redux/customerSlice\";\r\n// import { updateBelanceInCache } from \"../../Redux/belanceSlice\";\r\n// import { updateStockInCache } from \"../../Redux/stockSlice\";\r\n// import AddAddress from \"../../../assets/icon/address.png\";\r\nimport { getSettings } from \"./../../../Redux/settingSlice\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useShowAlert  } from \"../../../../warrper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography\r\n} from '@mui/material';\r\nimport { Plus, Trash2, X } from 'lucide-react';\r\nimport { NumericFormat } from 'react-number-format';\r\n// import { DatePicker } from '@mui/x-date-pickers';\r\nexport default function AddSell({\r\n  AddSellModal,\r\n  close,\r\n  // settings,\r\n  records,\r\n  setRecords,\r\n  moneys,\r\n  // addAccountModal,\r\n  // setAddAccountModal,\r\n  // setcustomer,customer,\r\n  belance,\r\n  setbelance,\r\n  setAddBalanceModal,\r\n  options1,\r\n  setOptions1,\r\n}) {\r\n  const showAlert = useShowAlert(); \r\n  const dispatch = useDispatch();\r\n  // const { customers, errorc, statusc } = useSelector(\r\n  //   (state) => state.customers\r\n  // );\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n\r\n  useEffect(() => {\r\n    //   // بررسی و بارگذاری `belances`\r\n    //   // if (!statusb && belances?.lenght ===0) {\r\n    //   //   dispatch(getBelances());\r\n    //   // }\r\n\r\n    //   // // بررسی و بارگذاری `moneys`\r\n    //   // if (!statusm && moneys?.lenght ===0) {\r\n    //   //   dispatch(getMoneys());\r\n    //   // }\r\n\r\n    //   // بررسی و بارگذاری `customers`\r\n    //   if (!statusc) {\r\n    //     dispatch(getCustomers());\r\n    //   }\r\n\r\n    if (!statuss && settings?.lenght === 0) {\r\n      dispatch(getSettings());\r\n    }\r\n  }, [dispatch, statuss]);\r\n  // const { customers, errorc } = useSelector((state) => state.customers);\r\n  const { items, errori } = useSelector((state) => state.items);\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  const { sidebars } = useSelector((state) => state.sidebars);\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [selectedOption1, setSelectedOption1] = useState();\r\n  const [EndDate, setEndDate] = useState(moment());\r\n  const [account, setaccount] = useState(false);\r\n  const [update, setupdate] = useState({ id: 0, belance: 0 });\r\n  const [selectedOptionAccount, setSelectedOptionAccount] = useState([]);\r\n  const [ExestQty, setExestQty] = useState(0);\r\n  const [AddItem, setAddItem] = useState({\r\n    sell:null,\r\n    item_id: \"\",\r\n    qty: null,\r\n    weight: null,\r\n    dateInsert: new Date().toISOString(),\r\n    rate: null,\r\n    user_id: localStorage.getItem(\"userTokenid\"),\r\n    purchase_price: null,\r\n    description: \"\",\r\n    sell_price: null,\r\n    expiry_date: new Date().toISOString(),\r\n    accounts_id: \"\",\r\n    money: \"\",\r\n    stock: { name: \"\" },\r\n    e_id: 1,\r\n  });\r\n\r\n  const [shopingcart, setshopingcart] = useState([]);\r\n  const [TotalAmount, setTotalAmount] = useState(0);\r\n\r\n  const [primari, setprimari] = useState(0);\r\n\r\n  const algorithm = (e) => {\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        accounts_id: e.id,\r\n      });\r\n    }\r\n  };\r\n  const algorithm1 = (e) => {\r\n    setSelectedOption1(e);\r\n    console.log(e);\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        item_id: e.item_id,\r\n        stock: e,\r\n        sell:e.id\r\n      });\r\n    }\r\n  };\r\n  const handle_date = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setAddItem({\r\n        ...AddItem,\r\n        dateInsert: isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (localStorage.getItem(\"date\") === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n\r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n\r\n  const capitalizeWords = (text) => {\r\n    return text\r\n      .toLowerCase() // همه حروف را کوچک کنید\r\n      .split(\" \") // متن را به آرایه‌ای از کلمات تقسیم کنید\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1)) // حروف اول هر کلمه را بزرگ کنید\r\n      .join(\" \"); // کلمات را به هم وصل کنید\r\n  };\r\n  const generateInvoicePDF = (id) => {\r\n    const doc = new jsPDF();\r\n\r\n    // Title Section\r\n    doc.setFontSize(26);\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setTextColor(11, 105, 255); // Blue color for title\r\n    doc.text(\"Invoice\", 105, 10, null, null, \"center\");\r\n\r\n    doc.setFontSize(14);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n    doc.text(`${settings[0].company_name}`, 105, 20, null, null, \"center\");\r\n    doc.setFontSize(12);\r\n    doc.text(\r\n      `Seller Name: ${\r\n        selectedOption ? capitalizeWords(selectedOption.name) : \"N/A\"\r\n      }`,\r\n      105,\r\n      28,\r\n      null,\r\n      null,\r\n      \"center\"\r\n    );\r\n\r\n    // Invoice Details Section\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(11, 105, 255); // Blue color for the section heading\r\n    doc.text(`Invoice Number: ${id}`, 5, 19);\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n\r\n    const date = new Date(selectedDay);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (localStorage.getItem(\"date\") === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"pm\" : \"am\";\r\n      formattedDate = moment(selectedDay).format(\"jYYYY/jMM/jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n    const fromdata = `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    // return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    // doc.text(`Date: ${selectedDay ? date(selectedDay) : 'N/A'}`, 5, 29);\r\n    doc.text(`Date:${fromdata}`, 5, 29);\r\n\r\n    // Draw Horizontal Line\r\n    doc.setDrawColor(0, 0, 0); // Black color for line\r\n    doc.setLineWidth(0.5);\r\n    doc.line(5, 35, 205, 35);\r\n\r\n    // Company Image\r\n    if (settings[0].company_pic) {\r\n      const url = settings[0].company_pic;\r\n      const fileName = url.split(\"/\").pop();\r\n      doc.addImage(\r\n        Source.getAddress() + \"/api/getImage/\" + fileName,\r\n        \"JPEG\",\r\n        180,\r\n        5,\r\n        25,\r\n        25\r\n      );\r\n    } else {\r\n      doc.setFontSize(12);\r\n      doc.text(\"No Company Image Available\", 150, 20);\r\n    }\r\n\r\n    // Table with Purchase Details\r\n    doc.autoTable({\r\n      startY: 40,\r\n      head: [[\"No\", \"Name\", \"Quantity\", \"Price\", \"Total\"]],\r\n      body: shopingcart.map((row) => [\r\n        row.e_id,\r\n        row.stock.name,\r\n        row.qty,\r\n        row.sell_price +\r\n          `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n        row.sell_price * row.qty +\r\n          `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      ]),\r\n      theme: \"grid\",\r\n      headStyles: {\r\n        fillColor: [11, 105, 255],\r\n        textColor: [255, 255, 255],\r\n        fontSize: 10,\r\n        fontStyle: \"bold\",\r\n      },\r\n      bodyStyles: {\r\n        fontSize: 10,\r\n        textColor: [0, 0, 0],\r\n        fillColor: [255, 255, 255],\r\n      },\r\n      alternateRowStyles: {\r\n        fillColor: [245, 245, 245],\r\n      },\r\n    });\r\n\r\n    // Footer Section Positioned Dynamically\r\n    const finalY = doc.lastAutoTable.finalY || 40; // Ensure there's a fallback\r\n    doc.setFontSize(9);\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n\r\n    // Amount Details Section\r\n    doc.text(\r\n      `Total Amount: ${TotalAmount}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 5\r\n    );\r\n    doc.text(\r\n      `Paid Amount: ${PaidAmount ? PaidAmount : \"0.00\"}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 10\r\n    );\r\n    doc.text(\r\n      `Belance: ${update.belance}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 15\r\n    );\r\n\r\n    // Draw Horizontal Line\r\n    if (finalY + 15 > 144) {\r\n      doc.setDrawColor(0, 0, 0);\r\n      doc.setLineWidth(0.5);\r\n      doc.line(5, 278, 205, 278);\r\n      doc.text(`Address: ${settings[0].address}`, 10, 283);\r\n      doc.text(`Phone: ${settings[0].phone}`, 80, 283);\r\n      doc.text(`Email: ${settings[0].email}`, 140, 283);\r\n    } else {\r\n      doc.setDrawColor(0, 0, 0);\r\n      doc.setLineWidth(0.5);\r\n      doc.line(5, 139, 205, 139);\r\n      doc.setFontSize(12);\r\n      doc.text(`Address: ${settings[0].address}`, 10, 144);\r\n      doc.text(`Phone: ${settings[0].phone}`, 80, 144);\r\n      doc.text(`Email: ${settings[0].email}`, 140, 144);\r\n    }\r\n\r\n    // Save the document as a PDF\r\n    const pdfURL = doc.output(\"bloburl\");\r\n    const iframe = document.createElement(\"iframe\");\r\n    iframe.style.display = \"none\";\r\n    iframe.src = pdfURL;\r\n    document.body.appendChild(iframe);\r\n    iframe.contentWindow.print();\r\n  };\r\n  const Sumbit = (flag) => {\r\n    let BillId = 0;\r\n    if (shopingcart.length <= 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n                title: <FormattedMessage id=\"You must fill the item input!\" />,\r\n        // title: \"You must fill the item input!\",\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    let arr = [];\r\n    shopingcart.forEach((key) => {\r\n      arr.push({\r\n        sell:key.sell,\r\n        item_id: key.item_id,\r\n        qty: key.qty,\r\n        weight: key.weight,\r\n        dateInsert: key.dateInsert,\r\n        rate: key.rate,\r\n        user_id: key.user_id,\r\n        sell_price: key.sell_price,\r\n        description: key.description,\r\n        expiry_date: key.expiry_date,\r\n        bill_id: \"\",\r\n        accounts_id: key.accounts_id,\r\n      });\r\n    });\r\n    let add = { arr: arr };\r\n    axios\r\n      .post(Source.getAddress() + \"/api/sellreturn\", add, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {\r\n          bill_prev:id,\r\n          Exesting: bill?.accounts_id ? \"ok\" : \"no\",\r\n          money: bill?.money_id || 0,\r\n          accounts_id: bill.accounts?.account_id,\r\n          PaidAmount: PaidAmount ? PaidAmount : 0,\r\n          TotalAmount: TotalAmount,\r\n          CustomerName: bill.temp_customer,\r\n          DateInsert: selectedDay,\r\n          bill_id:bill.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (flag) {\r\n          generateInvoicePDF(res.data.bill.id);\r\n        }\r\n        res.data.bill[\"money\"] = money;\r\n        res.data.bill[\"accounts\"] = { account: bill?.accounts?.account };\r\n        res.data.bill[\"temp_customer\"] = bill.temp_customer;\r\n        BillId = res.data.bill.id;\r\n        let add = {\r\n          sells: shopingcart,\r\n          bill: res.data.bill,\r\n          money: money,\r\n        };\r\n        setRecords([add, ...records]);\r\n        setSelectedDay(moment());\r\n        setSelectedOption({ name: \"\" });\r\n        setSelectedOption1({ name: \"\", type: { measuring: \"\" } });\r\n        setEndDate(moment());\r\n        setprimari(0);\r\n        setAddItem({\r\n          stocks_id: 0,\r\n          qty: 0,\r\n          weight: 0,\r\n          dateInsert: new Date().toISOString(),\r\n          rate: 0,\r\n          user_id: localStorage.getItem(\"userTokenid\"),\r\n          purchase_price: 0,\r\n          description: \"Description\",\r\n          sell_price: 0,\r\n          expiry_date: new Date().toISOString(),\r\n          accounts_id: \"\",\r\n        });\r\n        setSearchQuery(\"\");\r\n        setSearchQuery1(\"\");\r\n        setupdate({ id: 0, belance: 0 });\r\n        setSelectedOptionmoney({ name: \"\" });\r\n        setaccount(false);\r\n        setshopingcart([]);\r\n        setSelectedDay(moment());\r\n        setSelectedOption();\r\n        setSelectedOptionmoney();\r\n        setupdate({ id: 0, belance: 0 });\r\n        setTotalAmount(0);\r\n        setPaidAmount(0);\r\n        setExestQty(0);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          // title: \"Stock has been created!\",\r\n                                                      title: <FormattedMessage id=\"Your record has been added!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          // title: \"Sosmething went wrong!\",\r\n                                      title:  <FormattedMessage id=\"You must enter the customer name!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      });\r\n  };\r\n  const AddtoTable = () => {\r\n    if (!AddItem.qty) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"Select an item!\",\r\n                title:  <FormattedMessage id=\"Select an item!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    const weight = AddItem.weight || 1;\r\n    const qty = AddItem.qty ? parseInt(AddItem.qty) : 0;\r\n    const sellPrice = AddItem.sell_price ? parseFloat(AddItem.sell_price) : 0;\r\n    if (parseInt(selectedOption1.qty) - qty < 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"have not enuagh item!\",\r\n                title:  <FormattedMessage id=\"have not enuagh item!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    if (!qty || !sellPrice || !selectedOption1) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"Please select an item and fill the quantity and price!\",\r\n                                  title:  <FormattedMessage id=\"Please select an item and fill the quantity and price!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // اطمینان از مقدار مثبت برای موجودی\r\n    if (qty <= 0 || sellPrice <= 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"Quantity and price must be positive values!\",\r\n                title:  <FormattedMessage id=\"Quantity and price must be positive values!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    const addto ={...selectedOption1,...{sell:AddItem.sell}};\r\n    setSoldRecords((prevRecords) => \r\n      prevRecords.map((row) => {\r\n    if (row.id === selectedOption1.id) {\r\n      // console.log(row); \r\n      const updatedQty = parseInt(row.qty, 10) - parseInt(AddItem.qty, 10);\r\n      console.log({ ...row, qty: updatedQty });\r\n      return { ...row, qty: updatedQty };\r\n    }\r\n    return row;\r\n  })\r\n);\r\naddto.qty=AddItem.qty;\r\nsetshopingcart((prev) => [\r\n  ...shopingcart,\r\n  addto\r\n]);\r\nconsole.log(addto);\r\nsetPaidAmount((prev) => prev + qty * sellPrice*weight);\r\nsetTotalAmount((prev) => prev + qty * sellPrice*weight);\r\nsetAddItem({\r\n  stocks_id: \"\",\r\n  qty: \"\",\r\n  weight: null,\r\n  dateInsert: new Date().toISOString(),\r\n  rate: null,\r\n  user_id: localStorage.getItem(\"userTokenid\"),\r\n  purchase_price: \"\",\r\n  description: \"\",\r\n  sell_price: \"\",\r\n  expiry_date: new Date().toISOString(),\r\n  accounts_id: \"\",\r\n  money: \"\",\r\n  stock: { name: \"\" },\r\n  e_id: AddItem.e_id + 1,\r\n});\r\n// بازنشانی selectedOption1\r\nsetSelectedOption1(null);\r\n\r\n};\r\n  const handleItem = (e) => {\r\n    setAddItem({\r\n      ...AddItem,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const [options, setOptions] = useState();\r\n  // const [options1, setOptions1] = useState(items);\r\n\r\n  const handleSearch = async (query) => {\r\n    if (!Exesting) {\r\n      if (query) {\r\n        setAddItem({\r\n          ...AddItem,\r\n          temp_customer: query,\r\n        });\r\n        setSelectedOption({ id: 0, name: query });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSearch1 = async (query) => {\r\n  };\r\n  const handleInputChange = (newValue) => {\r\n    setSearchQuery(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const handleInputChange1 = (newValue) => {\r\n    setSearchQuery1(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch1(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchQuery1, setSearchQuery1] = useState(\"\");\r\n\r\n  const [selectedOptionmoney, setSelectedOptionmoney] = useState({ name: \"\" });\r\n  const algorithmmoney = (e) => {\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        money: e.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const Deleteshopingcart = (e) => {\r\n    setSoldRecords((prev) =>\r\n      prev.map((row) =>\r\n        row.id === e.sell ? { ...row, qty: parseInt(row.qty) + parseInt(e.qty) } : row\r\n      )\r\n    );\r\n    setTotalAmount((prev) => prev - e.qty * e.sell_price*e.weight);\r\n    setPaidAmount((prev) => prev - e.qty * e.sell_price*e.weight);\r\n    setshopingcart((prev) => prev.filter((pre) => pre.e_id !== e.e_id));\r\n  };\r\n  const buttonRef = useRef(null);\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if (buttonRef.current && AddSellModal) {\r\n        buttonRef.current.click();\r\n      }\r\n    }\r\n  };\r\n  const [PaidAmount, setPaidAmount] = useState(0);\r\n  const handlepaid = (e) => {\r\n    setPaidAmount(e.target.value);\r\n  };\r\n  // console.log(parseInt(AddItem.qty) + parseInt(ExestQty));\r\n  useEffect(() => {\r\n    if (!PaidAmount) {\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: -TotalAmount,\r\n      }));\r\n    } else {\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: PaidAmount - TotalAmount || 0,\r\n      }));\r\n    }\r\n\r\n    // }\r\n  }, [PaidAmount, TotalAmount, shopingcart]);\r\n  const [Exesting, setExesting] = useState();\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(\r\n  //         `${Source.getAddress()}/api/customers`,\r\n  //         {\r\n  //           headers: {\r\n  //             Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n  //           },\r\n  //           params: { query: searchQuery, do: \"ok\" }, // ارسال پارامتر جستجو به سرور\r\n  //         }\r\n  //       );\r\n  //       const data = response.data;\r\n  //       setOptions(data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching data:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   if (searchQuery) {\r\n  //     if (!searchQuery || searchQuery?.length < 3) {\r\n  //       setOptions([]);\r\n  //       return;\r\n  //     } else {\r\n  //       if (Exesting) {\r\n  //         fetchData();\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }, [searchQuery]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n  // console.log(searchQuery);\r\n  const [id,setid]=useState();\r\n  const [SoldRecords,setSoldRecords]=useState([]);\r\n  const [bill,setbill]=useState({});\r\n  const [money,setmoney]=useState();\r\n  const FindBill=()=>{\r\nif(!id){\r\n  showAlert({\r\n    position: \"top-end\",\r\n    icon: \"error\",\r\n    title: \"Please fill the bill number!\",\r\n    showConfirmButton: false,\r\n    timer: 1000,\r\n  });\r\n  return;\r\n}\r\n  else{  axios.get(Source.getAddress()+'/api/sell/'+id,{headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n    }}).then((res)=>{\r\n      console.log(res.data);\r\n      // console.log(res.data.sells);\r\n      setmoney(res.data.money);\r\n      setbill(res.data.bill);\r\n      setSoldRecords(res.data.sells);\r\n    }).catch(()=>{\r\n      setbill([]);\r\n      setSoldRecords([]);\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n                                            title:  <FormattedMessage id=\"This bill number not found!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n    })}\r\n  }\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n     <Dialog\r\n      open={AddSellModal}\r\n      onClose={close}\r\n      maxWidth=\"xl\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: 3,\r\n          height: '85vh',\r\n          backgroundColor: '#f8f9fa',\r\n          padding: 1,\r\n          fontSize: '0.8rem',\r\n          direction: localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"\r\n        }\r\n      }}\r\n    >\r\n      {/* Header Section */}\r\n      <DialogTitle sx={{ p: 1 }}>\r\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n            sx={{\r\n              backgroundColor: 'info.main',\r\n              color: 'white',\r\n              width: '100%',\r\n              textAlign: 'center',\r\n              py: 1,\r\n              borderRadius: 1,\r\n              fontSize: '0.9rem'\r\n            }}\r\n          >\r\n            <FormattedMessage id=\"Return Sell\" />\r\n          </Typography>\r\n          <IconButton onClick={close} size=\"small\" sx={{ mt: 0 }}>\r\n            <X size={20} />\r\n          </IconButton>\r\n        </Stack>\r\n      </DialogTitle>\r\n\r\n      {/* Main Content */}\r\n      <DialogContent sx={{ p: 1 }}>\r\n        <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n          {/* Left Column (8 columns on desktop, 12 on mobile) */}\r\n          <Box sx={{ width: { xs: '100%', md: '66%' } }}>\r\n            {/* Search Bill Section */}\r\n            <Card sx={{ mb: 2, boxShadow: 2 }}>\r\n              <CardContent sx={{ p: 2 }}>\r\n                <Typography variant=\"subtitle2\" sx={{ mb: 1, fontSize: '0.85rem' }}>\r\n                  <FormattedMessage id=\"Search Bill\" />\r\n                </Typography>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} alignItems=\"flex-end\">\r\n                  <TextField\r\n                    onChange={(e) => setid(e.target.value)}\r\n                    value={id}\r\n                    type=\"number\"\r\n                    label={<FormattedMessage id=\"Bill Number\" />}\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ maxWidth: 200 }}\r\n                  />\r\n                  <Button\r\n                    onClick={FindBill}\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                    sx={{ height: 40, minWidth: 120 }}\r\n                  >\r\n                    <FormattedMessage id=\"Find Bill\" />\r\n                  </Button>\r\n                  <TextField\r\n                    readOnly\r\n                    value={bill?.temp_customer || bill?.accounts?.account?.name}\r\n                    label={<FormattedMessage id=\"Customer Name\" />}\r\n                    size=\"small\"\r\n                    fullWidth\r\n                  />\r\n                </Stack>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Customer Info Section */}\r\n            <Card sx={{ mb: 2, boxShadow: 1 }}>\r\n              <CardContent sx={{ p: 2 }}>\r\n                <Typography variant=\"subtitle2\" sx={{ mb: 1, fontSize: '0.85rem' }}>\r\n                  <FormattedMessage id=\"Customer Info\" />\r\n                </Typography>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n                  <TextField\r\n                    readOnly\r\n                    value={bill?.dateInsert && date(bill?.dateInsert)}\r\n                    label={<FormattedMessage id=\"Date\" />}\r\n                    size=\"small\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    readOnly\r\n                    value={bill?.total && `${bill?.total} ${bill.money?.name}`}\r\n                    label={<FormattedMessage id=\"Total Amount\" />}\r\n                    size=\"small\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    readOnly\r\n                    value={bill?.PaidAmount && `${bill?.PaidAmount} ${bill.money?.name}`}\r\n                    label={<FormattedMessage id=\"Paid Amount\" />}\r\n                    size=\"small\"\r\n                    fullWidth\r\n                  />\r\n                  <TextField\r\n                    readOnly\r\n                    value={bill?.Remain && `${bill?.Remain} ${bill.money?.name}`}\r\n                    label={<FormattedMessage id=\"Remain Amount\" />}\r\n                    size=\"small\"\r\n                    fullWidth\r\n                  />\r\n                </Stack>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Item Information Section */}\r\n            <Card sx={{ mb: 2, boxShadow: 1 }}>\r\n              <CardContent sx={{ p: 2 }}>\r\n                <Typography variant=\"subtitle2\" sx={{ mb: 1, fontSize: '0.85rem' }}>\r\n                  <FormattedMessage id=\"Item information\" />\r\n                </Typography>\r\n                <Box sx={{ \r\n                  display: 'flex',\r\n                  flexDirection: { xs: 'column', sm: 'row' },\r\n                  gap: 2,\r\n                  alignItems: 'flex-end',\r\n                  flexWrap: 'wrap'\r\n                }}>\r\n                  {/* Item Name */}\r\n                  <Box sx={{ flex: '2 1 180px', minWidth: 180 }}>\r\n                    <Typography variant=\"body2\" fontWeight=\"medium\" gutterBottom>\r\n                      <FormattedMessage id=\"Item Name\" />\r\n                    </Typography>\r\n                    <ComboBo\r\n                      searchQuery={searchQuery1}\r\n                      setSearchQuery={setSearchQuery1}\r\n                      handleInputChange={handleInputChange1}\r\n                      handleSearch={handleSearch1}\r\n                      setSelectedOption={algorithm1}\r\n                      selectedOption={selectedOption1}\r\n                      options={SoldRecords}\r\n                      compactMode={true}\r\n                      sx={{ width: '100%' }}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Quantity */}\r\n                  <Box sx={{ flex: '1 1 120px', minWidth: 120 }}>\r\n                    <Typography variant=\"body2\" fontWeight=\"medium\" gutterBottom>\r\n                      <FormattedMessage id=\"Quantity\" />\r\n                    </Typography>\r\n                    <NumericFormat\r\n                      customInput={TextField}\r\n                      onKeyDown={handleKeyDown}\r\n                      onValueChange={({ value }) => handleItem({ target: { name: 'qty', value } })}\r\n                      value={AddItem.qty}\r\n                      name=\"qty\"\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      thousandSeparator\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Sell Price */}\r\n                  <Box sx={{ flex: '1 1 120px', minWidth: 120 }}>\r\n                    <Typography variant=\"body2\" fontWeight=\"medium\" gutterBottom>\r\n                      <FormattedMessage id=\"Price\" />\r\n                    </Typography>\r\n                    <NumericFormat\r\n                      customInput={TextField}\r\n                      onKeyDown={handleKeyDown}\r\n                      onValueChange={({ value }) => handleItem({ target: { name: 'sell_price', value } })}\r\n                      value={AddItem.sell_price}\r\n                      name=\"sell_price\"\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      thousandSeparator\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\" sx={{ color: 'text.secondary' }}>\r\n                            $\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Weight (if gold) */}\r\n                  {sidebars[0]?.type === 'gold' && (\r\n                    <Box sx={{ flex: '1 1 120px', minWidth: 120 }}>\r\n                      <Typography variant=\"body2\" fontWeight=\"medium\" gutterBottom>\r\n                        <FormattedMessage id=\"weight\" />\r\n                      </Typography>\r\n                      <NumericFormat\r\n                        customInput={TextField}\r\n                        onKeyDown={handleKeyDown}\r\n                        thousandSeparator\r\n                        decimalSeparator=\".\"\r\n                        decimalScale={3}\r\n                        onValueChange={({ value }) => handleItem({ target: { name: 'weight', value } })}\r\n                        value={AddItem.weight}\r\n                        name=\"weight\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        InputProps={{\r\n                          startAdornment: (\r\n                            <InputAdornment position=\"start\" sx={{ color: 'text.secondary' }}>\r\n                              g\r\n                            </InputAdornment>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                  )}\r\n\r\n                  {/* Description */}\r\n                  <Box sx={{ flex: '2 1 200px', minWidth: 180 }}>\r\n                    <Typography variant=\"body2\" fontWeight=\"medium\" gutterBottom>\r\n                      <FormattedMessage id=\"Description\" />\r\n                    </Typography>\r\n                    <TextField\r\n                      name=\"description\"\r\n                      multiline\r\n                      minRows={1}\r\n                      size=\"small\"\r\n                      fullWidth\r\n                      value={AddItem.description}\r\n                      onChange={handleItem}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Add Button */}\r\n                  <Button\r\n                    onClick={AddtoTable}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    startIcon={<Plus size={16} />}\r\n                    sx={{ height: 40, minWidth: 100 }}\r\n                  >\r\n                    <FormattedMessage id=\"Add\" />\r\n                  </Button>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n\r\n          {/* Right Column (4 columns on desktop, 12 on mobile) */}\r\n          <Box sx={{ width: { xs: '100%', md: '33%' } }}>\r\n            {/* Item Sold Table */}\r\n            <Card sx={{ mb: 2, maxHeight: 200, overflow: 'auto' }}>\r\n              <CardContent sx={{ p: 1 }}>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  sx={{\r\n                    backgroundColor: 'info.main',\r\n                    color: 'white',\r\n                    textAlign: 'center',\r\n                    py: 1,\r\n                    borderRadius: 1,\r\n                    fontSize: '0.85rem',\r\n                    mb: 1\r\n                  }}\r\n                >\r\n                  <FormattedMessage id=\"Item Sold\" />\r\n                </Typography>\r\n                <TableContainer>\r\n                  <Table size=\"small\" stickyHeader>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell sx={{ width: '30%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"Name\" />\r\n                        </TableCell>\r\n                        <TableCell sx={{ width: '20%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"Quantity\" />\r\n                        </TableCell>\r\n                                     {sidebars[0].type==='gold' && <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"weight\" /></TableCell>}\r\n\r\n                        <TableCell sx={{ width: '25%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"Price\" />\r\n                        </TableCell>\r\n                        <TableCell sx={{ width: '25%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"Description\" />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {SoldRecords?.map((row, idx) => (\r\n                        <TableRow key={idx}>\r\n                          <TableCell sx={{ fontSize: '0.8rem' }}>{row.stock.name}</TableCell>\r\n                          <TableCell sx={{ fontSize: '0.8rem' }}>{row.qty}</TableCell>\r\n                                              {sidebars[0].type==='gold'&&< TableCell>{row.weight}</TableCell>}\r\n                          <TableCell sx={{ fontSize: '0.8rem' }}>{row.sell_price}</TableCell>\r\n                          <TableCell sx={{ fontSize: '0.8rem' }}>{row.description}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Return Amounts */}\r\n            <Card sx={{ mb: 2 }}>\r\n              <CardContent sx={{ p: 2 }}>\r\n                <NumericFormat\r\n                  customInput={TextField}\r\n                  value={TotalAmount}\r\n                  label={<FormattedMessage id=\"Total Return Amount\" />}\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  thousandSeparator\r\n                  readOnly\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                <NumericFormat\r\n                  customInput={TextField}\r\n                  value={PaidAmount}\r\n                  onChange={handlepaid}\r\n                  label={<FormattedMessage id=\"Paid Return Amount\" />}\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  thousandSeparator\r\n                  readOnly={!Exesting}\r\n                  sx={{ mb: 2 }}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n        </Stack>\r\n      </DialogContent>\r\n\r\n      {/* Footer Section */}\r\n      <Box sx={{ p: 2 }}>\r\n        <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n          {/* Return Item Sold Table */}\r\n          <Box sx={{ width: { xs: '100%', md: '66%' } }}>\r\n            <Card sx={{ maxHeight: 300, overflow: 'auto' }}>\r\n              <CardContent sx={{ p: 1 }}>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  sx={{\r\n                    backgroundColor: 'info.main',\r\n                    color: 'white',\r\n                    textAlign: 'center',\r\n                    py: 1,\r\n                    borderRadius: 1,\r\n                    fontSize: '0.85rem',\r\n                    mb: 1\r\n                  }}\r\n                >\r\n                  <FormattedMessage id=\"Return Item Sold\" />\r\n                </Typography>\r\n                <TableContainer>\r\n                  <Table size=\"small\" stickyHeader>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell sx={{ width: '5%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"No\" />\r\n                        </TableCell>\r\n                        <TableCell sx={{ width: '20%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"Name\" />\r\n                        </TableCell>\r\n                        <TableCell sx={{ width: '15%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"Quantity\" />\r\n                        </TableCell>\r\n                        {sidebars[0]?.type === 'gold' && (\r\n                          <TableCell sx={{ width: '10%', fontSize: '0.8rem' }}>\r\n                            <FormattedMessage id=\"weight\" />\r\n                          </TableCell>\r\n                        )}\r\n                        <TableCell sx={{ width: '15%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"Price\" />\r\n                        </TableCell>\r\n                        <TableCell sx={{ width: '15%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"Total\" />\r\n                        </TableCell>\r\n                        <TableCell sx={{ width: '20%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"Description\" />\r\n                        </TableCell>\r\n                        <TableCell sx={{ width: '10%', fontSize: '0.8rem' }}>\r\n                          <FormattedMessage id=\"Delete\" />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {shopingcart?.map((row, idx) => (\r\n                        <TableRow key={idx}>\r\n                          <TableCell sx={{ fontSize: '0.8rem' }}>{row.e_id}</TableCell>\r\n                          <TableCell sx={{ fontSize: '0.8rem' }}>{row.stock.name}</TableCell>\r\n                          <TableCell sx={{ fontSize: '0.8rem' }}>{row.qty}</TableCell>\r\n                          {sidebars[0]?.type === 'gold' && (\r\n                            <TableCell sx={{ fontSize: '0.8rem' }}>{row.weight}</TableCell>\r\n                          )}\r\n                          <TableCell sx={{ fontSize: '0.8rem' }}>{row.sell_price}</TableCell>\r\n                          <TableCell sx={{ fontSize: '0.8rem' }}>{row.sell_price * row.qty}</TableCell>\r\n                          <TableCell sx={{ fontSize: '0.8rem' }}>{row.description}</TableCell>\r\n                          <TableCell>\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => Deleteshopingcart(row)}\r\n                            >\r\n                              <Trash2 size={16} />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n\r\n          {/* Remain Amount and Actions */}\r\n          <Box sx={{ width: { xs: '100%', md: '33%' } }}>\r\n            <Card sx={{ mb: 2 }}>\r\n              <CardContent sx={{ p: 2 }}>\r\n                <NumericFormat\r\n                  customInput={TextField}\r\n                  value={update.belance}\r\n                  label={<FormattedMessage id=\"Remain Return Amount\" />}\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  thousandSeparator\r\n                  readOnly\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                <Datepicker_Customer\r\n                          default_value={EndDate}\r\n                          handle_date={handle_date}\r\n                          lebal={<FormattedMessage id=\"Date\" />}\r\n                          setSelectedDay={setSelectedDay}\r\n                          selectedDay={selectedDay}\r\n                        />\r\n                <Stack direction=\"row\" spacing={1} justifyContent=\"center\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    size=\"small\"\r\n                    onClick={close}\r\n                    sx={{ width: 100, fontSize: '0.8rem' }}\r\n                  >\r\n                    <FormattedMessage id=\"Cancel\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                    onClick={() => Sumbit(false)}\r\n                    sx={{ width: 100, fontSize: '0.8rem' }}\r\n                  >\r\n                    <FormattedMessage id=\"Save\" />\r\n                  </Button>\r\n                </Stack>\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n        </Stack>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"names":["_ref","isEditable","options","Onsearch","selectedOption","setSelectedOption","searchQuery","handleInputChange","customStyles","menuPortal","base","_objectSpread","zIndex","formatMessage","useIntl","sidebars","statusSidebar","useSelector","state","_jsx","className","children","Select","classNamePrefix","inputValue","value","onChange","sselectedOption","onInputChange","getOptionLabel","option","_option$stock","_option$stock2","_option$stock2$type","_option$stock3","style","display","alignItems","concat","type","stock","name","getOptionValue","_option$stock4","placeholder","id","isClearable","isSearchable","isDisabled","menuPortalTarget","document","body","styles","EditSellReturn","_bill$accounts3","_bill$accounts3$accou","_bill$money","_bill$money2","_bill$money3","_sidebars$","_sidebars$2","AddSellModal","close","records","setRecords","moneys","shopingcart","setshopingcart","belance","setbelance","setAddBalanceModal","options1","setOptions1","SoldRecords","setSoldRecords","bill","setbill","money","setmoney","returnbill","setreturnbill","TotalAmount","setTotalAmount","PaidAmount","setPaidAmount","showAlert","useShowAlert","dispatch","useDispatch","settings","errors","statuss","useEffect","lenght","getSettings","items","errori","selectedDay","setSelectedDay","useState","moment","selectedOption1","setSelectedOption1","EndDate","setEndDate","account","setaccount","update","setupdate","selectedOptionAccount","setSelectedOptionAccount","ExestQty","setExestQty","AddItem","setAddItem","sell","item_id","qty","weight","dateInsert","Date","toISOString","rate","user_id","localStorage","getItem","purchase_price","description","sell_price","expiry_date","accounts_id","e_id","primari","setprimari","Sumbit","flag","_bill$accounts","BillId","arr","forEach","key","push","parseInt","bill_id","add","_method","axios","post","Source","getAddress","headers","Authorization","params","Exesting","money_id","accounts","account_id","CustomerName","temp_customer","DateInsert","then","res","_bill$accounts2","doc","jsPDF","setFontSize","setFont","setTextColor","text","company_name","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","date","formattedDate","getFullYear","String","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes","aa","formattedHours","formattedMinutes","format","fromdata","setDrawColor","setLineWidth","line","company_pic","fileName","pop","addImage","autoTable","startY","head","row","selectedOptionmoney","theme","headStyles","fillColor","textColor","fontSize","fontStyle","bodyStyles","alternateRowStyles","finalY","lastAutoTable","address","phone","email","pdfURL","output","iframe","createElement","src","appendChild","contentWindow","print","generateInvoicePDF","data","sells","measuring","stocks_id","setSearchQuery","setSearchQuery1","setSelectedOptionmoney","position","icon","title","FormattedMessage","showConfirmButton","timer","catch","err","handleItem","e","target","setOptions","handleSearch1","async","searchQuery1","buttonRef","useRef","handleKeyDown","preventDefault","current","click","prevState","setExesting","setid","_jsxs","Dialog","open","onClose","maxWidth","fullWidth","PaperProps","sx","borderRadius","height","backgroundColor","padding","direction","DialogTitle","p","Stack","justifyContent","Typography","variant","color","width","textAlign","py","IconButton","onClick","size","mt","X","DialogContent","xs","md","spacing","Box","Card","mb","boxShadow","CardContent","sm","TextField","label","readOnly","d","total","Remain","flexDirection","gap","flexWrap","flex","minWidth","fontWeight","gutterBottom","ComboBo","newValue","handleSearch","compactMode","NumericFormat","customInput","onKeyDown","onValueChange","_ref2","thousandSeparator","_ref3","InputProps","startAdornment","InputAdornment","decimalSeparator","decimalScale","_ref4","multiline","minRows","Button","AddtoTable","sellPrice","parseFloat","addto","prevRecords","updatedQty","prev","startIcon","Plus","maxHeight","overflow","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","idx","_sidebars$3","Deleteshopingcart","filter","pre","Trash2","Datepicker_Customer","default_value","handle_date","jalaliDate","year","month","day","now","jalaali","t","isoString","lebal","AddSell","length","bill_prev","FindBill","get"],"sourceRoot":""}