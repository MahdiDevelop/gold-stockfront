{"version":3,"file":"static/js/9345.d657ea42.chunk.js","mappings":"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","sources":["pages/forms/Datepicker.js","../node_modules/shamsi/index.js","pages/forms/ListBox.js","pages/Draft/DraftTransaction.js","../node_modules/shamsi-date-converter/lib/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"jalaali-react-date-picker/lib/styles/index.css\";\r\nimport { InputDatePicker } from \"jalaali-react-date-picker\";\r\nimport moment, { months } from 'moment-timezone';\r\n\r\nexport default function Datepicker({ handle_date, settings,default_value ,lebal,onKeyDown}) {\r\n  const [selectedDay, setSelectedDay] = useState();\r\n  const handleDateChange = (date) => {\r\n    setSelectedDay(date);\r\n        if(date!=null){\r\n        const handl={year:date._a[0],month:date._a[1]+1,day:date._a[2]}\r\n      handle_date(handl);\r\n        }\r\n    };\r\n  return (\r\n    <div className=\"col-3 m-2 mt-3\"\r\n    >\r\n      <label htmlFor=\"\" className='p-0 m-0'>{lebal}</label>\r\n      <InputDatePicker\r\n      onKeyDown={onKeyDown}\r\n        value={selectedDay}\r\n        onChange={handleDateChange}\r\n        inputPlaceholder={settings[0].date === 'Persian' ? 'تاریخ را وارد کنید' : 'Enter the date'}\r\n        locale={settings[0].date === 'Persian' ? 'fa' : 'en'}\r\n        colorPrimary=\"#0fbcf9\"\r\n        maximumDate={{ year: 9999, month: 12, day: 31 }}\r\n        minimumDate={{ year: 1, month: 1, day: 1 }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jalaliToGregorian = exports.gregorianToJalali = void 0;\nfunction gregorianToJalali(gy, gm, gd) {\n  var gdm, jy, jm, jd, gy2, days;\n  gdm = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n  gy2 = gm > 2 ? gy + 1 : gy;\n  days =\n    355666 +\n    365 * gy +\n    ~~((gy2 + 3) / 4) -\n    ~~((gy2 + 99) / 100) +\n    ~~((gy2 + 399) / 400) +\n    gd +\n    gdm[gm - 1];\n  jy = -1595 + 33 * ~~(days / 12053);\n  days %= 12053;\n  jy += 4 * ~~(days / 1461);\n  days %= 1461;\n  if (days > 365) {\n    jy += ~~((days - 1) / 365);\n    days = (days - 1) % 365;\n  }\n  if (days < 186) {\n    jm = 1 + ~~(days / 31);\n    jd = 1 + (days % 31);\n  } else {\n    jm = 7 + ~~((days - 186) / 30);\n    jd = 1 + ((days - 186) % 30);\n  }\n  return [jy, jm, jd];\n}\nexports.gregorianToJalali = gregorianToJalali;\nfunction jalaliToGregorian(jy, jm, jd) {\n  var salA, gy, gm, gd, days;\n  jy += 1595;\n  days =\n    -355668 +\n    365 * jy +\n    ~~(jy / 33) * 8 +\n    ~~(((jy % 33) + 3) / 4) +\n    jd +\n    (jm < 7 ? (jm - 1) * 31 : (jm - 7) * 30 + 186);\n  gy = 400 * ~~(days / 146097);\n  days %= 146097;\n  if (days > 36524) {\n    gy += 100 * ~~(--days / 36524);\n    days %= 36524;\n    if (days >= 365) {\n      days++;\n    }\n  }\n  gy += 4 * ~~(days / 1461);\n  days %= 1461;\n  if (days > 365) {\n    gy += ~~((days - 1) / 365);\n    days = (days - 1) % 365;\n  }\n  gd = days + 1;\n  salA = [\n    0,\n    31,\n    (gy % 4 === 0 && gy % 100 !== 0) || gy % 400 === 0 ? 29 : 28,\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31,\n  ];\n  for (gm = 0; gm < 13 && gd > salA[parseInt(gm, 10)]; gm++) {\n    gd -= salA[parseInt(gm, 10)];\n  }\n  return [gy, gm, gd];\n}\nexports.jalaliToGregorian = jalaliToGregorian;\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport { ChevronDown } from 'lucide-react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\nconst ListBox = ({\r\n  isDisabled = false,\r\n  options = [],\r\n  selectedOption,\r\n  setSelectedOption,\r\n  width = '100%',\r\n}) => {\r\n  const { formatMessage, locale } = useIntl();\r\n  const isRTL = locale === 'fa'; // Assuming 'fa' is your Persian locale code\r\n  \r\n  const allUsersOption = { \r\n    name: <FormattedMessage id=\"All Users\" />, \r\n    id: 0 \r\n  };\r\n  \r\n  const updatedOptions = [allUsersOption, ...options];\r\n\r\n  useEffect(() => {\r\n    if (!selectedOption) {\r\n      setSelectedOption(allUsersOption);\r\n    }\r\n  }, [selectedOption, setSelectedOption, allUsersOption]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      backgroundColor: '#fff',\r\n      zIndex: 1,\r\n      borderRadius: '8px',\r\n      border: state.isFocused ? '2px solid #4f46e5' : '1px solid #d1d5db',\r\n      boxShadow: state.isFocused ? '0 0 5px rgba(79, 70, 229, 0.5)' : 'none',\r\n      '&:hover': {\r\n        border: '1px solid #4f46e5',\r\n      },\r\n      minHeight: '39px',\r\n      padding: '4px 8px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    menu: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      borderRadius: '8px',\r\n      boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',\r\n      overflow: 'hidden',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    option: (base, { isFocused, isSelected }) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      backgroundColor: isSelected ? '#4f46e5' : isFocused ? '#e0e7ff' : '#fff',\r\n      color: isSelected ? '#fff' : '#111827',\r\n      padding: isRTL ? '12px 16px 12px 8px' : '12px 8px 12px 16px',\r\n      cursor: 'pointer',\r\n      fontSize: '14px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      '&:active': {\r\n        backgroundColor: '#4338ca',\r\n      },\r\n    }),\r\n    singleValue: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      fontWeight: 'bold',\r\n      color: '#4f46e5',\r\n      fontSize: '14px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    placeholder: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      fontSize: '14px',\r\n      color: '#6b7280',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    dropdownIndicator: (base) => ({\r\n      ...base,\r\n      fontFamily:localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      padding: '8px',\r\n    }),\r\n    menuPortal: (base) => ({ ...base, zIndex: 10000 }),\r\n    input: (base) => ({\r\n      ...base,\r\n      fontFamily:localStorage.getItem(\"language\") !== \"en\" && \"'CustomFont1', sans-serif\",\r\n      textAlign: isRTL ? 'right' : 'left',\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`mt-3`} \r\n      style={{ width }}\r\n      dir={isRTL ? 'rtl' : 'ltr'}\r\n    >\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={updatedOptions}\r\n        getOptionLabel={(option) => option.name}\r\n        getOptionValue={(option) => option.id}\r\n        placeholder={formatMessage({ id: 'select.placeholder' }) || (isRTL ? 'انتخاب کنید...' : 'Select...')}\r\n        isClearable={false}\r\n        isSearchable={false}\r\n        isDisabled={isDisabled}\r\n        menuPortalTarget={document.body}\r\n        styles={customStyles}\r\n        components={{\r\n          DropdownIndicator: ({ innerProps }) => (\r\n            <div {...innerProps} className={isRTL ? 'pl-2 text-gray-500' : 'pr-2 text-gray-500'}>\r\n              <ChevronDown size={20} />\r\n            </div>\r\n          ),\r\n          ClearIndicator: null,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nListBox.propTypes = {\r\n  isDisabled: PropTypes.bool,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      name: PropTypes.node.isRequired,\r\n    })\r\n  ),\r\n  selectedOption: PropTypes.object,\r\n  setSelectedOption: PropTypes.func.isRequired,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nListBox.defaultProps = {\r\n  isDisabled: false,\r\n  options: [],\r\n  selectedOption: null,\r\n  width: '100%',\r\n};\r\n\r\nexport default ListBox;","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Datepicker from \"../forms/Datepicker\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport axios from \"axios\";\r\nimport { showAlert } from \"../../warrper\";\r\nimport AccountEdit from \"../CustomersEdit\";\r\n// import Add from '../assets/icon/add.png';\r\nimport Belance from \"../forms/Belance\";\r\nimport AddAccount from \"../AddAccount\";\r\nimport { gregorianToJalali } from \"shamsi-date-converter\";\r\nimport Source from \"../../Source\";\r\nimport Swal from \"sweetalert2\";\r\nimport Recover from \"../../assets/icon/recover.png\";\r\nimport Trash from \"../../assets/icon/trash.png\";\r\nimport moment from \"moment-jalaali\";\r\nimport { useRef } from \"react\";\r\n// import ComboBoxDeposite from \"./Transformations/ComboBoxDeposite\";\r\n// import ListBox from \"./forms/ListBox\";\r\nimport ListBox from \"../forms/ListBox\";\r\nimport Datepicker_Customer from \"../forms/Datepicker_customer\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport jalaali from \"jalaali-js\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\n// import { useShowAlert  } from \"../warrper\";\r\nimport { useShowAlert  } from \"../../warrper\";\r\n\r\n\r\nconst formatNumber = (number) => {\r\n  return number?.toLocaleString(); // Formats number with thousand separators\r\n};\r\n\r\nexport default function DraftTransaction({\r\n  user,\r\n  // settings,\r\n}) {\r\n  const showAlert = useShowAlert(); \r\n  const [value, setValue] = useState(\"\");\r\n  const [StartDate, setStartDate] = useState(\"\");\r\n  const [EndDate, setEndDate] = useState(\"\");\r\n  const { settings, statuss } = useSelector((state) => state.settings);\r\n   const [selecteduser, setSelecteduser] = useState();\r\n    const { users, statusu } = useSelector((state) => state.users);\r\n    const [namesearch, setnameSearch] = useState();\r\n    // const [EndDate, setEndDate] = useState();\r\n    //   const [StartDate, setStartDate] = useState();\r\n      const [Date_Start, setDate_start] = useState();\r\n      const [Date_End, setDate_end] = useState();\r\n      const handle_date_start = (jalaliDate) => {\r\n        if (jalaliDate) {\r\n          const { year, month, day } = jalaliDate;\r\n          const gregorianDate = jalaali.toGregorian(year, month, day);\r\n          // Get current time\r\n          const now = new Date();\r\n          const hours = String(now.getHours()).padStart(2, \"0\");\r\n          const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n          // Create the ISO date string\r\n          let isoDateString;\r\n          const t = new Date();\r\n          const date = new Date(\r\n            jalaliDate.year,\r\n            jalaliDate.month - 1,\r\n            jalaliDate.day,\r\n            t.getHours(),\r\n            t.getMinutes()\r\n          );\r\n    \r\n          // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n          const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n          // setIsoDate(isoString);\r\n          setDate_start(isoString);\r\n          // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n        }\r\n      };\r\n      const handle_date_end = (jalaliDate) => {\r\n        if (jalaliDate) {\r\n          const { year, month, day } = jalaliDate;\r\n          const gregorianDate = jalaali.toGregorian(year, month, day);\r\n          // Get current time\r\n          const now = new Date();\r\n          const hours = String(now.getHours()).padStart(2, \"0\");\r\n          const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n          // Create the ISO date string\r\n          let isoDateString;\r\n          const t = new Date();\r\n          const date = new Date(\r\n            jalaliDate.year,\r\n            jalaliDate.month - 1,\r\n            jalaliDate.day,\r\n            t.getHours(),\r\n            t.getMinutes()\r\n          );\r\n    \r\n          // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n          const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n          // setIsoDate(isoString);\r\n          setDate_end(isoString);\r\n          // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n        }\r\n      };\r\n      const handleName = (e) => {\r\n        setnameSearch(e.target.value);\r\n    };\r\n\r\n\r\n\r\n  const [Cash,setCash]=useState([]);\r\n  const [belance,setbelance]=useState([]);\r\n  const [withdraw,setwithdraw]=useState([]);\r\n\r\n  let cash = [];\r\n  // cash = Cash;\r\n\r\n  \r\n  // useEffect(()=>{\r\n  //   const startDate = new Date();\r\n  //   const endDate = new Date();\r\n  //   startDate.setDate(startDate.getDate() - 30);\r\n  //   endDate.setDate(endDate.getDate() + 1);\r\n  // axios.get(Source.getAddress() + '/api/report/', {\r\n  //   headers:{\r\n  //     Authorization: `Bearer ${localStorage.getItem('access')}`,\r\n  //   },\r\n  //   params: {\r\n  //     delete:1,\r\n  //     startDate: startDate.toISOString(),\r\n  //     endDate: endDate.toISOString(), \r\n  //   },\r\n  // }).then((res)=>{\r\n  //   setRecords(res.data);\r\n  //   setwithdraw(res.data);\r\n  // }).catch((res)=>{\r\n  //   console.log(res);\r\n  // });\r\n  // });\r\n  // useEffect(()=>{\r\n  //   axios.get(Source.getAddress() + '/api/belance/', {\r\n  //     headers: {\r\n  //       'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //     },params: {\r\n  //       delete: 'False',\r\n  //     },\r\n  //   }).then((res)=>{\r\n  //     setbelance(res.data);\r\n  //     name = res.data;\r\n  //   }).catch((err)=>{\r\n  //     console.log(err);\r\n  //   });\r\n  //  },[]); \r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    setPerPage(newPerPage);\r\n    setCurrentPage(page);\r\n  };\r\n  \r\n  // const [data, setData] = useState([]);\r\n  const [totalRows, setTotalRows] = useState(0); // تعداد کل ردیف‌ها\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);  // صفحه فعلی\r\n  const [perPage, setPerPage] = useState(10); // تعداد آیتم‌ها در هر صفحه\r\n\r\n  // دریافت داده‌ها از سرور\r\n  const fetchData = async (page, pageSize) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(Source.getAddress()+'/api/report', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n        },\r\n        params: {\r\n          user_id: selecteduser.id,\r\n          page: page,\r\n          perPage: pageSize,\r\n          delete: 0,StartDate: StartDate&& Date_Start,\r\n          EndDate: EndDate && Date_End,\r\n          search: namesearch?.length ? namesearch : 'false',\r\n         type:\"all\"\r\n        },\r\n      });\r\n      setRecords(response.data.data); // داده‌های صفحه جاری\r\n      setwithdraw(response.data.data); // داده‌های صفحه جاری\r\n      setTotalRows(response.data.total); // تعداد کل ردیف‌ها\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching data', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // فراخوانی داده‌ها هنگام بارگذاری صفحه یا تغییر صفحه\r\n  useEffect(() => {\r\n    fetchData(currentPage, perPage);\r\n  }, [currentPage, perPage, EndDate, StartDate, selecteduser,namesearch]);\r\n\r\n  //  useEffect(()=>{\r\n  //   axios.get(Source.getAddress() + '/api/money/', {\r\n  //     headers: {\r\n  //       'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //     },params: {\r\n  //       delete: 'False',\r\n  //     },\r\n  //   }).then((res)=>{\r\n  //     setCash(res.data);\r\n  //     cash=res.data;\r\n  //   }).catch((err)=>{\r\n  //     console.log(err);\r\n  //   });\r\n  // },[]);\r\n  \r\n  \r\n  // name = belance;\r\n  const [moneytype, setmoneytype] = useState(0);\r\n  const [money1, setmoney] = useState({ name: \"\", cach: 0 });\r\n  const [records, setRecords] = useState([]);\r\n  const [openBelance, setOpenBelance] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n  const [editAccount, setEditAccount] = useState(null);\r\n  const [id, setId] = useState(\"\");\r\n  const [idbelance, setidbelance] = useState(0);\r\n  const [Popup, setPopup] = useState(false);\r\n  const [addAccountModal, setAddAccountModal] = useState(false);\r\n  const [RotateResotore, setRotateResotore] = useState(false);\r\n  const intl = useIntl(); // استفاده از هوک useIntl برای دسترسی به ترجمه‌ها\r\n\r\n  const delete_restore = async (row) => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success\",\r\n        cancelButton: \"btn btn-danger\",\r\n      },\r\n      buttonsStyling: false,\r\n    });\r\n\r\n    const result = await swalWithBootstrapButtons.fire({\r\n      title: intl.formatMessage({id:\"Are you sure?\"})\r\n              ,\r\n              text:intl.formatMessage({id:\"You won't be able to revert this!\"})\r\n              ,\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonText: intl.formatMessage({id:\"Yes, restore it!\"})\r\n              ,\r\n              cancelButtonText: intl.formatMessage({id:\"No, cancel!\"})\r\n              ,\r\n              reverseButtons: true,\r\n     });\r\n\r\n     row._method=\"put\";\r\n\r\n    if (result.isConfirmed) {\r\n      try {\r\n        await axios.post(\r\n          Source.getAddress() + `/api/report/${row.id}`,\r\n          row,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"access\")}`, // Add the access token here\r\n              // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n            },\r\n            params:{type:'restore'}\r\n          }\r\n        );\r\n        setRecords((prevRecords) =>\r\n          prevRecords.filter((record) => record.id !== row.id)\r\n        );\r\n        showAlert({\r\n                 position: \"center\",\r\n                 icon: \"success\",\r\n                //  title: `${row.type} record successfully restored!`,\r\n                          // title: <FormattedMessage id=\"Restored successfully!\"/>,\r\n                                            title:<FormattedMessage id=\"Restored successfully!\"/>,\r\n                 showConfirmButton: false,\r\n                 timer: 600,\r\n               });\r\n      } catch (err) {\r\n        // console.log('Error:', err);\r\n        swalWithBootstrapButtons.fire({\r\n          title: \"Error\",\r\n          // text: \"There was an error restoring your file.\",\r\n                                            // title: <FormattedMessage id=\"Something went wrong!\"/>,            \r\n                                                      title:intl.formatMessage({id:\"Something went wrong!\"}),\r\n                                            \r\n          icon: \"error\",\r\n        });\r\n      }\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      swalWithBootstrapButtons.fire({\r\n        title: \"Cancelled\",\r\n        // text: \"Your imaginary file is safe :)\",\r\n                                // text: <FormattedMessage id=\"Your record is safe :)\"/>,\r\n                                title:intl.formatMessage({id:\"Cancelled\"}),\r\n                                text:intl.formatMessage({id:\"Your record is safe :)\"}),\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  };\r\n  const onChange = (row) => {\r\n    setPopup(true);\r\n    setValue(row.target.value);\r\n  };\r\n  const [selectedBelance, setselectedBelance] = useState({\r\n    account: 0,\r\n    type: 0,\r\n    belance: 0,\r\n    date_created: \"\",\r\n  });\r\n\r\n  const filterDeposite = () => {\r\n    // console.log(StartDate);\r\n    const startDate = new Date(\r\n      `${StartDate.year}-${StartDate.month}-${StartDate.day}`\r\n    ); // Start date\r\n    const endDate = new Date(`${EndDate.year}-${EndDate.month}-${EndDate.day}`); // End date\r\n    endDate.setDate(endDate.getDate() + 2);\r\n    const type = \"withdraw\";\r\n    axios\r\n      .get(Source.getAddress() + \"/api/report/\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`, // Add the access token here\r\n          // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        },\r\n        params: {\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n          delete: \"True\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: \"Deposite Table filterd successfully\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n        setRecords(res.data); // This will contain filtered data from the server\r\n        // console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"Something went wrong !\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n  const handleDeposite = (e) => {\r\n    setAddDeposite({\r\n      ...AddDeposite,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const Onsearch = (row) => {\r\n    setmoneytype(row.moneyId);\r\n    setidbelance(row.id);\r\n    setselectedBelance((prevState) => ({\r\n      ...prevState,\r\n      account: row.account,\r\n      type: row.type,\r\n      belance: row.belance, // Assuming 'belance' is correct, it seems like a typo\r\n      date_created: row.date_created,\r\n    }));\r\n    let belanceName = row.account_name + \" \" + row.moneyType;\r\n    setAddDeposite({\r\n      ...AddDeposite,\r\n      account: row.id,\r\n    });\r\n    setPopup(false);\r\n    // console.log(belanceName)\r\n    setValue(belanceName);\r\n    // console.log('s  earch ',row);\r\n  };\r\n\r\n  const [AddDeposite, setAddDeposite] = useState({\r\n    description: \"\",\r\n    amount: 0,\r\n    date: null,\r\n    account: 0,\r\n    type: \"withdraw\",\r\n    cash: 0,\r\n  });\r\n  const delete_report = async (row) => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success\",\r\n        cancelButton: \"btn btn-danger\",\r\n      },\r\n      buttonsStyling: false,\r\n    });\r\n\r\n    const result = await swalWithBootstrapButtons.fire({\r\n      title: intl.formatMessage({id:\"Are you sure?\"})\r\n              ,\r\n              text:intl.formatMessage({id:\"You won't be able to revert this!\"})\r\n              ,\r\n              icon: \"warning\",\r\n              showCancelButton: true,\r\n              confirmButtonText: intl.formatMessage({id:\"Yes, delete it!\"})\r\n              ,\r\n              cancelButtonText: intl.formatMessage({id:\"No, cancel!\"})\r\n              ,\r\n              reverseButtons: true,\r\n    });\r\n\r\n    if (result.isConfirmed) {\r\n      try {\r\n        const accessToken = localStorage.getItem(\"access\");\r\n        const response = await axios.post(\r\n          `${Source.getAddress()}/api/report/${row.id}`,{  _method: 'delete'},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          }\r\n        );\r\n        setRecords((prevRecords) =>\r\n          prevRecords.filter((record) => record.id !== row.id)\r\n        );\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          // title: \"Record successfully Deleted\",\r\n                                  title: <FormattedMessage id=\"record successfully deleted!\"/>,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      } catch (error) {\r\n        try {\r\n          const refreshToken = localStorage.getItem(\"refresh\");\r\n          const refreshResponse = await axios.post(\r\n            `${Source.getAddress()}api/token/refresh/`,\r\n            {\r\n              refresh: refreshToken,\r\n            }\r\n          );\r\n\r\n          // Save the new access token\r\n          localStorage.setItem(\"access\", refreshResponse.data.access);\r\n          // Retry the delete request with the new access token\r\n          const retryResponse = await axios.post(\r\n            `${Source.getAddress()}api/report/${row.id}/`,\r\n            {\r\n          _method:\"put\"\r\n            }\r\n            ,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${refreshResponse.data.access}`,\r\n              },\r\n            }\r\n          );\r\n          showAlert({\r\n            position: \"center\",\r\n            icon: \"success\",\r\n            // title: \"Record successfully deleted !\",\r\n            title: <FormattedMessage id=\"record successfully deleted!\"/>,\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n          // console.log('Report deleted successfully after refreshing token:', retryResponse.data);\r\n        } catch (refreshError) {\r\n          // console.error('Failed to refresh token:', refreshError);\r\n          swalWithBootstrapButtons.fire({\r\n            title: \"Error\",\r\n            // text: \"There was an error deleting your file.\",\r\n                        title: <FormattedMessage id=\"Something went wrong!\"/>,\r\n            icon: \"error\",\r\n          });\r\n        }\r\n        // } else {\r\n        //   // console.error('Error deleting report:', error);\r\n        // }\r\n      }\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      swalWithBootstrapButtons.fire({\r\n        title: \"Cancelled\",\r\n        // text: \"Your imaginary file is safe :)\",\r\n        text: <FormattedMessage id=\"Your record is safe :)\"/>,\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const primary = useMemo(() => {\r\n    // const record= Cash.filter((item)=>{item.id==moneytype});\r\n    if (selectedBelance.belance === \"0\") {\r\n      return -parseInt(AddDeposite.amount);\r\n    } else {\r\n      let primar = parseInt(selectedBelance.belance);\r\n      primar -= parseInt(AddDeposite.amount);\r\n      return primar;\r\n    }\r\n  });\r\n\r\n  const updatemoney = useMemo(() => {\r\n    const record = cash.find((item) => item.id === moneytype);\r\n    if (record) {\r\n      let money = parseInt(AddDeposite.amount);\r\n      let primmoney = parseInt(record.cach);\r\n      let sum = primmoney - money;\r\n      setAddDeposite({\r\n        ...AddDeposite,\r\n        cash: sum,\r\n      });\r\n      return { name: record.name, cash: sum };\r\n    } else {\r\n      // Handle the case when record is undefined\r\n      return { name: \"\", cash: 0 };\r\n    }\r\n  }, [Cash, moneytype, AddDeposite.amount]);\r\n\r\n  // const Now_date=new Date();\r\n  // console.log(now_date);\r\n  const [addreport, setaddreport] = useState({\r\n    discription: \"\",\r\n    amount: 0,\r\n    date: \"\",\r\n    // type: '',\r\n    account: 0,\r\n    // money:'',\r\n  });\r\n\r\n  const handlereport = (e) => {\r\n    setaddreport({\r\n      ...addreport,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // const [res,setres]=useState(false);\r\n  // console.log(withdraw)\r\n  const res = useMemo((result) => {\r\n    if (window.innerWidth > 768) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n  const convertToKabulTime = (dateStr) => {\r\n    const dateObj = new Date(dateStr);\r\n    dateObj.setMinutes(dateObj.getMinutes() + 540); // Kabul is UTC+4:30\r\n    const formattedDateStr = dateObj.toISOString().slice(0, 16);\r\n    return formattedDateStr;\r\n  };\r\n  // useEffect(() => {\r\n  //   let datetime = new Date();\r\n  //   const jalaliDate12 = {\r\n  //     year: datetime.getFullYear(),\r\n  //     month: datetime.getMonth() + 1,\r\n  //     day: datetime.getDay(),\r\n  //   };\r\n  //   const { year, month, day } = jalaliDate12;\r\n  //   const t = new Date();\r\n  //   const date = new Date();\r\n  //   const isoString = date.toISOString();\r\n  //   const fetchAccounts = async () => {\r\n  //     const token = localStorage.getItem(\"access\");\r\n  //     if (!token) return;\r\n  //     const fetchWithToken = async (token) => {\r\n  //       const startDate = new Date();\r\n  //       const endDate = new Date();\r\n  //       startDate.setDate(startDate.getDate() - 10);\r\n  //       endDate.setDate(endDate.getDate() + 10);\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           Source.getAddress() + \"/api/report/\",\r\n  //           {\r\n  //             headers: {\r\n  //               Authorization: `Bearer ${token}`,\r\n  //             },\r\n  //             params: {\r\n  //               startDate: startDate.toISOString(),\r\n  //               endDate: endDate.toISOString(),\r\n  //               delete: \"True\",\r\n  //             },\r\n  //           }\r\n  //         );\r\n  //         setRecords(response.data);\r\n  //       } catch (error) {\r\n  //         if (error.response && error.response.status === 401) {\r\n  //           const refreshToken = localStorage.getItem(\"refresh\");\r\n  //           if (!refreshToken) return;\r\n\r\n  //           try {\r\n  //             const refreshResponse = await axios.post(\r\n  //               Source.getAddress() + \"/api/token/refresh/\",\r\n  //               {\r\n  //                 refresh: refreshToken,\r\n  //               }\r\n  //             );\r\n  //             const newAccessToken = refreshResponse.data.access;\r\n  //             localStorage.setItem(\"access\", newAccessToken);\r\n  //             await fetchWithToken(newAccessToken);\r\n  //           } catch (refreshError) {\r\n  //             console.error(\"Error refreshing access token:\", refreshError);\r\n  //           }\r\n  //         } else {\r\n  //           console.error(\"Error fetching accounts:\", error);\r\n  //         }\r\n  //       }\r\n  //     };\r\n\r\n  //     await fetchWithToken(token);\r\n  //   };\r\n  //   fetchAccounts();\r\n  //   // setRecords();\r\n  //   let news = new Date();\r\n  //   let mmm = news.toISOString().slice(0, 16);\r\n  //   // let to = convertToKabulTime(mmm);\r\n  //   setAddDeposite({\r\n  //     ...AddDeposite,\r\n  //     date: isoString,\r\n  //     user: localStorage.getItem(\"userTokenid\"),\r\n  //   });\r\n  //   setEndDate(\r\n  //     `${news.getFullYear()}-${String(news.getMonth() + 1).padStart(\r\n  //       2,\r\n  //       \"0\"\r\n  //     )}-${String(news.getDate()).padStart(2, \"0\")}`\r\n  //   );\r\n  //   news.setDate(news.getDate() - 1);\r\n  //   setStartDate(\r\n  //     `${news.getFullYear()}-${String(news.getMonth() + 1).padStart(\r\n  //       2,\r\n  //       \"0\"\r\n  //     )}-${String(news.getDate()).padStart(2, \"0\")}`\r\n  //   );\r\n  // }, [withdraw]);\r\n\r\n  const handleRowClick = (row) => {\r\n    setEditAccount(row);\r\n    setEdit(true);\r\n  };\r\n  const convertToHijriShamsi = (gregorianDate) => {\r\n    const [jalaliYear, jalaliMonth, jalaliDay] = gregorianToJalali(\r\n      new Date(gregorianDate)\r\n    );\r\n\r\n    const hijriShamsiDate = `${jalaliYear}/${jalaliMonth}/${jalaliDay}`;\r\n\r\n    return hijriShamsiDate;\r\n  };\r\n  const date = (d) => {\r\n      const date = new Date(d);\r\n  \r\n      let formattedDate = `${date.getFullYear()}-${String(\r\n        date.getMonth() + 1\r\n      ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n      const hours = date.getHours();\r\n      const minutes = date.getMinutes();\r\n      const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n      let aa = ampm;\r\n      const formattedHours = hours % 12 || 12;\r\n      const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n      if (settings[0].date === \"Persian\") {\r\n        moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n        aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n        formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n      } else {\r\n        moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n      }\r\n  \r\n      return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    };\r\n\r\n  const handleViewBelance = (row) => {\r\n    const filteredBelance = belance.filter((item) => item.account === row.id);\r\n\r\n    setEditAccount(filteredBelance);\r\n    setId(row.id);\r\n    setOpenBelance(true);\r\n  };\r\n  const handleFilter = (e) => {\r\n    // console.log(accounts);\r\n    const newData = withdraw.filter((row) => {\r\n      if (typeof row.customer === \"string\") {\r\n        if (\r\n          row.customer.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n          row.moneyType.toLowerCase().includes(e.target.value.toLowerCase())\r\n        ) {\r\n          return row.customer;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n    setRecords(newData);\r\n  };\r\n\r\n  const ShowDeposit = (type) => {\r\n    return (\r\n      <p\r\n        className={`text-capitalize position-static p-2 mb-0 ${\r\n          type === \"deposite\" ? \"bg-success\" : type==='withdraw' ? \"bg-danger\" : \"bg-primary\"\r\n          // if(type==='deposite') return \"bg-success\"\r\n          // else if(type==='withdraw')'bg-danger'\r\n          // else \"bg-primary\"\r\n        } rounded text-light text-center `}\r\n        style={{ width: \"75px\" }}\r\n      >\r\n        {type}\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const PDcolumn = [\r\n    {\r\n      name: <strong><FormattedMessage id=\"ID\"/></strong>,\r\n      selector: (row) => row.id,\r\n      //  sortable: true\r\n    },\r\n\r\n    {\r\n      name: <strong><FormattedMessage id=\"Customer Name\"/></strong>,\r\n      selector: (row) => row.customer,\r\n      style: {\r\n        padding: \"0px 20px\",\r\n        justifyContent: \"left\",\r\n        textAlign: \"center\",\r\n      },\r\n      // sortable: true\r\n    },\r\n    {\r\n      name: <strong><FormattedMessage id=\"Transactions\"/></strong>,\r\n      selector: (row) => ShowDeposit(row.type),\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"170px\", maxWidth: \"200px\", width: \"200px\" }}\r\n        >\r\n          <FormattedMessage id=\"Date Created\"/>\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.date),\r\n      style: {\r\n        minWidth: \"170px\", // Adjust this value as needed\r\n        maxWidth: \"200px\", // Adjust this value as needed\r\n      },\r\n      // sortable: true,\r\n    },\r\n    // { name: <strong>Time Created</strong>, selector: (row) => time(row.date_created),\r\n    // //  sortable: true\r\n    // },\r\n    {\r\n      name: <strong>          <FormattedMessage id=\"Currency\"/>\r\n</strong>,\r\n      selector: (row) => row.moneyType,\r\n      //  sortable: true\r\n    },\r\n    {\r\n      name: <strong>          <FormattedMessage id=\"Amount\"/></strong>,\r\n      selector: (row) => formatNumber(row.amount),\r\n      //  sortable: true\r\n    },\r\n    {\r\n      name: <strong>          <FormattedMessage id=\"Description\"/></strong>,\r\n      selector: (row) => row.discription,\r\n    },\r\n    // {\r\n    //   name: <strong>Cash Belance</strong>,\r\n    //   selector: (row) => formatNumber(row.cash),\r\n    // },\r\n    {\r\n      name: <strong>          <FormattedMessage id=\"Added By\"/></strong>,\r\n      selector: (row) => row.user_name,\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{\r\n            textAlign: \"center\",\r\n            backgroundColor: \"tranceparent\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <FormattedMessage id=\"Restore\"/>\r\n        </strong>\r\n      ),\r\n      selector: (row) => (\r\n        <button\r\n          onClick={() => {\r\n            delete_restore(row);\r\n          }}\r\n          style={{\r\n            border: \"none\",\r\n            backgroundColor: \"transparent\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          {row.cach}\r\n          <img\r\n            height={\"30%\"}\r\n            width={\"30%\"}\r\n            src={Recover}\r\n            style={{ backgroundColor: \"tranceparent\" }}\r\n          />\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{\r\n            textAlign: \"center\",\r\n            backgroundColor: \"tranceparent\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n                    <FormattedMessage id=\"Delete\"/>\r\n        </strong>\r\n      ),\r\n      selector: (row) => (\r\n        <button\r\n          onClick={() => {\r\n            delete_report(row);\r\n          }}\r\n          style={{\r\n            border: \"none\",\r\n            backgroundColor: \"transparent\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <img\r\n            height={\"22%\"}\r\n            width={\"22%\"}\r\n            src={Trash}\r\n            style={{ backgroundColor: \"tranceparent\" }}\r\n          />\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const columnsTablet = [\r\n    // { name: \"Id\", selector: (row) => row.id, sortable: true },\r\n\r\n    { name: \"account_name\", selector: (row) => row.customer, sortable: true },\r\n    {\r\n      name: \"Date Created\",\r\n      selector: (row) => row.date_created,\r\n      sortable: true,\r\n    },\r\n    { name: \"moneyType\", selector: (row) => row.moneyType, sortable: true },\r\n    { name: \"belance\", selector: (row) => row.belance, sortable: true },\r\n  ];\r\n      const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\r\n    const columns = useMemo(() => {\r\n      let selectedColumns;\r\n    \r\n      if (\r\n        localStorage.getItem(\"language\") === \"pa\" ||\r\n        localStorage.getItem(\"language\") === \"da\"\r\n      ) {\r\n        selectedColumns = [...PDcolumn]; // معکوس کردن ستون‌ها\r\n      }else{\r\n        selectedColumns=PDcolumn;\r\n      }\r\n      return selectedColumns;\r\n    }, [isDesktop]);\r\n  const [select_user, setselect_user] = useState(\"\");\r\n  const ChangeUser = (e) => {\r\n    if (e.target.value !== \"all users\") {\r\n      const newData = withdraw.filter((row) => {\r\n        if (typeof row.user_name === \"string\") {\r\n          return row.user_name\r\n            .toLowerCase()\r\n            .includes(e.target.value.toLowerCase());\r\n        }\r\n        return false;\r\n      });\r\n      setRecords(newData);\r\n      console.log(e.target.value);\r\n    } else {\r\n      setRecords(withdraw);\r\n    }\r\n    setselect_user(e.target.value);\r\n  };\r\n\r\n  const filterRef = useRef(null);\r\n\r\n  const Hanlderef = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Check if the Enter key was pressed\r\n      e.preventDefault(); // Prevent default action if needed\r\n      if (filterRef.current) {\r\n        filterRef.current.click(); // Programmatically click the button\r\n      }\r\n    }\r\n  };\r\n  const { formatMessage } = useIntl();\r\n  const localization = {\r\n    pagination: {\r\n        \r\n        rowsPerPage:<FormattedMessage id=\"AddrowsPerPage\"/> , // مثلا: \"تعداد ردیف‌ها\"\r\n      previous: <FormattedMessage id=\"previous\"/>, // مثلا: \"قبلی\"\r\n      next: <FormattedMessage id=\"next\"/>, // مثلا: \"بعدی\"\r\n      page: <FormattedMessage id=\"page\"/>, // مثلا: \"صفحه\"\r\n    },\r\n    // شما می‌توانید تنظیمات بیشتر برای متون مورد نظر اضافه کنید.\r\n  };\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div\r\n          dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n        className=\"bg-light d-flex flex-column flex-lg-row justify-content-lg-between align-items-start align-items-lg-center\"\r\n        style={{ borderTop: \"5px solid #4a5cf2\" }}\r\n      >\r\n        <h2 className=\"m-2 fw-bold mb-4\"><FormattedMessage id=\"Draft Transactions\"/></h2>\r\n        <div className=\"d-flex flex-column flex-lg-row align-items-start align-items-lg-center\">\r\n          <div className=\"mb-1 mb-lg-0 me-lg-2 mt-1 \">\r\n            <Datepicker_Customer\r\n              default_value={StartDate}\r\n              handle_date={handle_date_start}\r\n              lebal={          <FormattedMessage id=\"Start\"/>              }\r\n              setSelectedDay={setStartDate}\r\n              selectedDay={StartDate}\r\n            ></Datepicker_Customer>\r\n          </div>\r\n          <div className=\"mb-1 mt-1 mb-lg-0 me-lg-2\">\r\n            <Datepicker_Customer\r\n              default_value={EndDate}\r\n              handle_date={handle_date_end}\r\n              lebal={          <FormattedMessage id=\"End\"/>              }\r\n              setSelectedDay={setEndDate}\r\n              selectedDay={EndDate}\r\n            ></Datepicker_Customer>\r\n          </div>\r\n          <ListBox\r\n            options={users}\r\n            selectedOption={selecteduser}\r\n            setSelectedOption={setSelecteduser}\r\n          />\r\n        </div>\r\n        <input\r\n          className=\"form-control m-2 mb-2 mt-4\"\r\n          style={{ width: \"100%\", maxWidth: \"200px\" }}\r\n          type=\"search\"\r\n          onChange={handleName}\r\n          value={namesearch}\r\n          placeholder={formatMessage({ id: \"Search\" })}\r\n          aria-label=\"Search\"\r\n        />\r\n      </div>\r\n      <DataTable\r\n                localization={localization} // ارسال ترجمه‌ها      \r\n\r\n        columns={columns}\r\n        data={records}\r\n        onRowClicked={handleRowClick}\r\n        striped\r\n        responsive\r\n        highlightOnHover\r\n        pagination\r\n      />\r\n      {edit && (\r\n        <AccountEdit\r\n          close={() => setEdit(false)}\r\n          account={editAccount}\r\n          setAccount={setEditAccount}\r\n        />\r\n      )}\r\n    {openBelance && (\r\n        <Belance\r\n          close={() => setOpenBelance(false)}\r\n          id={id}\r\n          accountbelance={editAccount}\r\n        />\r\n      )}\r\n      {addAccountModal && (\r\n        <AddAccount close={() => setAddAccountModal(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gregorianToJalali = exports.jalaliToGregorian = void 0;\nvar shamsi = require(\"shamsi\");\nvar gtj = shamsi.gregorianToJalali, jtg = shamsi.jalaliToGregorian;\nexports.jalaliToGregorian = jtg;\nfunction gregorianToJalali(yearOrDate, month, day) {\n    if (typeof yearOrDate !== 'number') {\n        var date = new Date(yearOrDate);\n        var y = date.getFullYear();\n        var m = (date.getMonth() + 1);\n        var d = date.getDate();\n        return gtj(y, m, d);\n    }\n    else {\n        return gtj(yearOrDate, month, day);\n    }\n}\nexports.gregorianToJalali = gregorianToJalali;\n"],"names":["Datepicker","_ref","handle_date","settings","default_value","lebal","onKeyDown","selectedDay","setSelectedDay","useState","_jsxs","className","children","_jsx","htmlFor","InputDatePicker","value","onChange","date","handl","year","_a","month","day","inputPlaceholder","locale","colorPrimary","maximumDate","minimumDate","Object","defineProperty","exports","jalaliToGregorian","gregorianToJalali","gy","gm","gd","jy","jm","jd","gy2","days","salA","parseInt","ListBox","isDisabled","options","selectedOption","setSelectedOption","width","formatMessage","useIntl","isRTL","allUsersOption","name","FormattedMessage","id","updatedOptions","useEffect","customStyles","control","base","state","_objectSpread","fontFamily","localStorage","getItem","backgroundColor","zIndex","borderRadius","border","isFocused","boxShadow","minHeight","padding","textAlign","direction","menu","overflow","option","_ref2","isSelected","color","cursor","fontSize","singleValue","fontWeight","placeholder","dropdownIndicator","menuPortal","input","style","dir","Select","classNamePrefix","getOptionLabel","getOptionValue","isClearable","isSearchable","menuPortalTarget","document","body","styles","components","DropdownIndicator","_ref3","innerProps","ChevronDown","size","ClearIndicator","defaultProps","formatNumber","number","toLocaleString","DraftTransaction","user","showAlert","useShowAlert","setValue","StartDate","setStartDate","EndDate","setEndDate","statuss","useSelector","selecteduser","setSelecteduser","users","statusu","namesearch","setnameSearch","Date_Start","setDate_start","Date_End","setDate_end","Cash","setCash","belance","setbelance","withdraw","setwithdraw","cash","totalRows","setTotalRows","loading","setLoading","currentPage","setCurrentPage","perPage","setPerPage","async","page","pageSize","response","axios","get","Source","getAddress","headers","concat","params","user_id","delete","search","length","type","setRecords","data","total","error","fetchData","moneytype","setmoneytype","money1","setmoney","cach","records","openBelance","setOpenBelance","edit","setEdit","editAccount","setEditAccount","setId","idbelance","setidbelance","Popup","setPopup","addAccountModal","setAddAccountModal","RotateResotore","setRotateResotore","intl","selectedBelance","setselectedBelance","account","date_created","AddDeposite","setAddDeposite","description","amount","addreport","setaddreport","useMemo","primar","record","find","item","money","sum","discription","PDcolumn","result","window","innerWidth","selector","row","customer","justifyContent","ShowDeposit","minWidth","maxWidth","d","Date","formattedDate","getFullYear","String","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes","aa","formattedHours","formattedMinutes","moment","format","moneyType","user_name","onClick","swalWithBootstrapButtons","Swal","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","_method","isConfirmed","post","Authorization","prevRecords","filter","position","showConfirmButton","timer","err","dismiss","cancel","delete_restore","height","src","Recover","accessToken","refreshToken","refreshResponse","refresh","setItem","access","refreshError","delete_report","Trash","isDesktop","setIsDesktop","columns","selectedColumns","select_user","setselect_user","useRef","localization","pagination","rowsPerPage","previous","next","borderTop","Datepicker_Customer","jalaliDate","now","jalaali","t","isoString","toISOString","e","target","DataTable","onRowClicked","striped","responsive","highlightOnHover","AccountEdit","close","setAccount","Belance","accountbelance","AddAccount","shamsi","require","gtj","yearOrDate","y","m"],"sourceRoot":""}