{"version":3,"file":"static/js/4162.1fbb2d09.chunk.js","mappings":"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","sources":["pages/forms/Combo_Customer.js","pages/Report/OwnAssets.js","pages/forms/Datepicker_customer.js"],"sourcesContent":["import React from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nconst Combo_Customer = ({ \r\n  isEditable = false, \r\n  name, \r\n  type, \r\n  options, \r\n  Onsearch, \r\n  selectedOption, \r\n  setAddAccountModal, \r\n  setSelectedOption, \r\n  searchQuery, \r\n  handleInputChange \r\n}) => {\r\n  const handleChange = (sselectedOption) => {\r\n    setSelectedOption(sselectedOption);\r\n    // console.log('hi');\r\n    // Onsearch(sselectedOption);\r\n  };\r\n// console.log(searchQuery);\r\n  const CustomMenuList = (props) => (\r\n    <components.MenuList {...props}>\r\n      {props.children}\r\n      {type && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            padding: \"10px\",\r\n            borderTop: \"1px solid #eaeaea\",\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#f9f9f9\",\r\n          }}\r\n          onClick={() => {\r\n            setAddAccountModal(searchQuery)\r\n            // setSelectedOption({id:0, name:searchQuery});\r\n          }}\r\n        >\r\n          <strong>{name}</strong>\r\n        </div>\r\n      )}\r\n    </components.MenuList>\r\n  );\r\n\r\n  const customStyles = {\r\n    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n  };\r\nconst { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <div className=\"w-40\">\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        inputValue={searchQuery}\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={options}\r\n        onInputChange={handleInputChange}\r\n        getOptionLabel={(option) => (\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <span>{`${option.name} `}</span>\r\n          </div>\r\n        )}\r\n        getOptionValue={(option) => `${option.name}`}\r\n        // placeholder=\"Search...\"\r\n        placeholder={formatMessage({ id: \"Search...\" })}\r\n        isClearable\r\n        components={{ MenuList: CustomMenuList }}\r\n        isSearchable\r\n        isDisabled={isEditable}\r\n        menuPortalTarget={document.body} // انتقال منو به `body`\r\n        styles={customStyles} // تنظیم `z-index`\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Combo_Customer;","import React, { useEffect, useRef, useState,useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useShowAlert  } from \"../../warrper\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Combo_stock from \"../Toiloring/Forms/Combo\";\r\nimport Combo_Customer from \"../forms/Combo_Customer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NumericFormat} from \"react-number-format\";\r\nimport jalaali from \"jalaali-js\";\r\nimport Datepicker_Customer from \"../forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport { FormControl, InputLabel, Select, MenuItem, FormGroup, FormControlLabel, Checkbox } from '@mui/material';\r\nimport AddStockPic from \"../../assets/icon/AddStock.png\";\r\nimport transformation from'../../assets/dashboard/transformation.png'\r\nimport money from'../../assets/dashboard/money.png'\r\nimport { ChevronDown, Plus, Trash2 } from 'lucide-react';\r\nimport {\r\n  Button,\r\nTableContainer,\r\n  TextField,\r\n  Typography,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n} from '@mui/material';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Divider,\r\n} from '@mui/material';\r\nimport {\r\n  Shirt,\r\n  DollarSign,\r\n  CalendarDays,\r\n  FileText,\r\n  User,\r\n  Scissors,\r\n  Ruler\r\n} from 'lucide-react';\r\nimport Source from '../../Source';\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nconst formatNumber = (number) => {\r\n  return number?.toLocaleString(); // Formats number with thousand separators\r\n};\r\nexport default function OwnAssets() {\r\n  const intl= useIntl();\r\n  const [dashboardData, setdashboardData] = useState({\r\n          Totalassets: 0,\r\n          cash:0,\r\n          mainBalance: 0,\r\n          stock: 0,\r\n          credit: 0,\r\n          debit:0,\r\n          benefit:0,\r\n          totalbenefit:0,\r\n          otherbenefit:0,\r\n  });\r\nconst cards = [\r\n  {\r\n    title: <FormattedMessage id=\"Total Assets\" />,\r\n    Show: \"tailoring\",\r\n    group: \"\",\r\n    text: dashboardData.Totalassets,\r\n    bg: \"#0077b6\", // آبی درخشان\r\n    textColor: \"white\",\r\n    link: \"./account\",\r\n    captions: <FormattedMessage id=\"Sell All\" />,\r\n  },\r\n  {\r\n    title: <FormattedMessage id=\"Debit\" />,\r\n    text: dashboardData.debit,\r\n    group: \"Transaction_Group\",\r\n    Show: \"Deposite\",\r\n    bg: \"#ff6f00\", // نارنجی تند\r\n    link: \"./debit\",\r\n    textColor: \"white\",\r\n    captions: <FormattedMessage id=\"Sell All\" />,\r\n  },\r\n  {\r\n    title: <FormattedMessage id=\"Credit\" />,\r\n    text: dashboardData.credit,\r\n    group: \"Transaction_Group\",\r\n    Show: \"Deposite\",\r\n    bg: \"#1976d2\", // آبی روشن ولی تیره‌تر از قبل\r\n    link: \"./credit\",\r\n    textColor: \"white\",\r\n    captions: <FormattedMessage id=\"Sell All\" />,\r\n  },\r\n  {\r\n    title: <FormattedMessage id=\"Main Balance\" />,\r\n    text: dashboardData.mainBalance,\r\n    group: \"Transaction_Group\",\r\n    Show: \"Deposite\",\r\n    bg: \"#388e3c\", // سبز تیره‌تر ولی پررنگ\r\n    link: \"./credit\",\r\n    textColor: \"white\",\r\n    captions: <FormattedMessage id=\"Sell All\" />,\r\n  },\r\n  {\r\n    title: <FormattedMessage id=\"Cash\" />,\r\n    text: dashboardData.cash,\r\n    group: \"Transaction_Group\",\r\n    Show: \"Deposite\",\r\n    bg: \"#fdd835\", // زرد خورشیدی پررنگ\r\n    link: \"./credit\",\r\n    textColor: \"white\", // برای کنتراست بهتر\r\n    captions: <FormattedMessage id=\"Sell All\" />,\r\n  },\r\n  {\r\n    title: <FormattedMessage id=\"Stock\" />,\r\n    text: dashboardData.stock,\r\n    group: \"Transaction_Group\",\r\n    Show: \"Deposite\",\r\n    bg: \"#ab47bc\", // بنفش تند\r\n    link: \"./credit\",\r\n    textColor: \"white\",\r\n    captions: <FormattedMessage id=\"Sell All\" />,\r\n  },\r\n  {\r\n    title: <FormattedMessage id=\"Benefit\" />,\r\n    text: dashboardData.benefit,\r\n    group: \"Transaction_Group\",\r\n    Show: \"Deposite\",\r\n    bg: \"#d81b60\", // صورتی-قرمز درخشان\r\n    link: \"./credit\",\r\n    textColor: \"white\",\r\n    captions: <FormattedMessage id=\"Sell All\" />,\r\n  },\r\n  // {\r\n  //   title: <FormattedMessage id=\"Total Benefit\" />,\r\n  //   text: dashboardData.totalbenefit,\r\n  //   group: \"Transaction_Group\",\r\n  //   Show: \"Deposite\",\r\n  //   bg: \"#009688\", // سبز آبی اشباع\r\n  //   link: \"./credit\",\r\n  //   textColor: \"white\",\r\n  //   captions: <FormattedMessage id=\"Sell All\" />,\r\n  // },\r\n  // {\r\n  //   title: <FormattedMessage id=\"Other Benefit\" />,\r\n  //   text: dashboardData.otherbenefit,\r\n  //   group: \"Transaction_Group\",\r\n  //   Show: \"Deposite\",\r\n  //   bg: \"#ef5350\", // قرمز ملایم ولی پررنگ\r\n  //   link: \"./credit\",\r\n  //   textColor: \"white\",\r\n  //   captions: <FormattedMessage id=\"Sell All\" />,\r\n  // },\r\n];\r\n\r\n\r\nconst { sidebars,statusSidebar} = useSelector((state) => state.sidebars);\r\nconst [totalRows, setTotalRows] = useState(0); // تعداد کل ردیف‌ها\r\nconst [loading, setLoading] = useState(false);\r\nconst [currentPage, setCurrentPage] = useState(1);  // صفحه فعلی\r\nconst [perPage, setPerPage] = useState(10); // تعداد آیتم‌ها در هر صفحه\r\n  const [search,setsearch]=useState();\r\n   \r\nconst currentLanguage = localStorage.getItem(\"language\") || 'en';\r\n  const [records, setRecords] = useState([]);\r\n  const [item,setitem]=useState([]);\r\n  const [AddStockModal,setAddStockModal]=useState(false);\r\n  const [EditStockModal,setEditStockModal]=useState(false);\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\r\nconst showAlert = useShowAlert(); \r\nconst handlePerRowsChange = async (newPerPage, page) => {\r\n  setPerPage(newPerPage);\r\n  setCurrentPage(page);\r\n};\r\nconst fetchData = async (page, pageSize) => {\r\n  setLoading(true);\r\n  try {\r\n    const response = await axios.get(Source.getAddress() + \"/api/item\",\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('access')}`,\r\n      },\r\n      params: {\r\n          assets:\"ok\",\r\n        page: page,\r\n        perPage: pageSize,\r\n        delete:0,\r\n        stock:'true',\r\n        search: search?.length >1 ?search : \"false\"\r\n      },\r\n    },\r\n    );\r\n    setdashboardData({\r\n          ...dashboardData,\r\n          Totalassets: response.data.Totalassets,\r\n          cash: response.data.cash,\r\n          mainBalance: response.data.mainBalance,\r\n          stock: response.data.stock,\r\n          credit: response.data.credit,\r\n          debit:response.data.debit,\r\n          benefit:response.data.benefit,\r\n          totalbenefit:response.data.totalbenefit,\r\n          otherbenefit:response.data.otherbenefit,\r\n        });\r\n    setRecords(response.data.data); // داده‌های صفحه جاری\r\n    setTotalRows(response.data.data.total); // تعداد کل ردیف‌ها\r\n    setLoading(false);\r\n  } catch (error) {\r\n    console.error('Error fetching data', error);\r\n    setLoading(false);\r\n  }\r\n};\r\nconst date = (d) => {\r\n\r\n  const date = new Date(d);\r\n\r\n  let formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n  const hours = date.getHours();\r\n  const minutes = date.getMinutes();\r\n  const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n  let aa = ampm;\r\n  const formattedHours = hours % 12 || 12;\r\n  const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  if (localStorage.getItem('date') === \"Persian\") {\r\n    moment.locale('fa'); // تنظیم لوکال به فارسی\r\n    aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n    formattedDate = moment(d).format('jYYYY-jMM-jDD');\r\n  } else {\r\n    moment.locale('en'); // تنظیم لوکال به انگلیسی\r\n  }\r\n\r\n  return `${formattedDate}`;\r\n};\r\nconst handleChange = (id,e) => {\r\n  setRecords(prevRecords =>\r\n         prevRecords.map(record =>\r\n           record.id === id ? { ...record, [e.target.name]: e.target.value } : record\r\n         )\r\n       );\r\n    // setRecords([{ ...records, [e.target.name]: e.target.value }]);\r\n\r\n  };\r\n  const Update=(row)=>{\r\n    row._method=\"put\";\r\n    // console.log(row);\r\n    axios.post(Source.getAddress() + \"/api/item/\"+row.id,row,\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('access')}`,\r\n      },\r\n    }).then((res)=>{\r\n      console.log(res);\r\n    }).catch((err)=>{\r\n      showAlert({\r\n        type: 'error',\r\n        message: intl.formatMessage({ id: 'Error' }),\r\n      });\r\n    })\r\n  }\r\n  const PDcolumn = [\r\n    {\r\n      name:               <FormattedMessage id=\"ID\" />      ,\r\n      selector: (row) => row.id,\r\n      sortable: true,\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"1px\",\r\n      },\r\n    },\r\n    {\r\n      name:               <FormattedMessage id=\"Photo\" />      ,\r\n      cell: (row) => (\r\n        <img\r\n          src={row.type.picture===null ? AddStockPic : row.type.picture\r\n          }\r\n          alt={row.name}\r\n          style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }}\r\n        />\r\n      ),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name:<FormattedMessage id=\"Item Type\" />\r\n,\r\n      selector: (row) => row.type.name,\r\n      sortable: true,\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"1px\",\r\n      },\r\n    },\r\n    {\r\n      name:<FormattedMessage id=\"Name\" />\r\n      ,\r\n      selector: (row) => row.name,\r\n      sortable: true,\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"1px\",\r\n      },\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"200px\", maxWidth: \"240px\", width: \"240px\" }}\r\n        >\r\n          <FormattedMessage id=\"Date Created\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.date_creation),\r\n    },\r\n\r\n    { name: <FormattedMessage id=\"Quantitny\" />, selector: (row) => formatNumber(row?.qty), sortable: true },\r\n    // { name: <FormattedMessage id=\"Quantitny\" />, selector: (row) => row.purchase_price, sortable: true },\r\n    \r\n    \r\n    // {\r\n    //     name: <strong><FormattedMessage id=\"Purchase Price\" /></strong>,\r\n    //     cell: (row) => (\r\n    //       <NumericFormat\r\n    //                     name={'sell_price'}\r\n    //                     // label={<FormattedMessage id={'Sell Price'} />}\r\n    //                     value={row.purchase_price}\r\n    //                     fullWidth\r\n    //                     size=\"small\"\r\n    //                     thousandSeparator=\",\"\r\n    //                      displayType=\"input\"\r\n    //                      customInput={TextField}\r\n    //                      dir=\"ltr\"\r\n    //                     // onChange={handleChange}\r\n    //                      onValueChange={(values) => {\r\n    //                        handleChange(row.id,{ target: { name:'purchase_price', value: values.value } });\r\n    //                      }}\r\n    //                      type=\"text\"\r\n    //                      className=\"text-danger\"\r\n    //                     //  InputProps={{\r\n    //                     //    startAdornment: <InputAdornment position=\"start\">AFG</InputAdornment>,\r\n    //                     //  }}\r\n    //                     />\r\n    //     ),\r\n    //   },\r\n// {\r\n//   name: <strong><FormattedMessage id=\"Update\" /></strong>,\r\n//   cell: (row) => (\r\n//     <button\r\n//       onClick={() => Update(row)}\r\n//       type=\"button\"\r\n//       onMouseEnter={(e) => {\r\n//         e.currentTarget.style.backgroundColor = \"#138496\";\r\n//         e.currentTarget.style.transform = \"scale(1.05)\";\r\n//         e.currentTarget.style.boxShadow = \"0 4px 12px rgba(0, 0, 0, 0.15)\";\r\n//       }}\r\n//       onMouseLeave={(e) => {\r\n//         e.currentTarget.style.backgroundColor = \"#17a2b8\";\r\n//         e.currentTarget.style.transform = \"scale(1)\";\r\n//         e.currentTarget.style.boxShadow = \"none\";\r\n//       }}\r\n//       style={{\r\n//         display: \"flex\",\r\n//         alignItems: \"center\",\r\n//         gap: \"8px\",\r\n//         padding: \"6px 12px\",\r\n//         borderRadius: \"12px\",\r\n//         backgroundColor: \"#17a2b8\", // رنگ آبی برای ویرایش\r\n//         color: \"#fff\",\r\n//         fontSize: \"0.95rem\",\r\n//         fontWeight: 500,\r\n//         border: \"none\",\r\n//         boxShadow: \"0 2px 6px rgba(0,0,0,0.05)\",\r\n//         transition: \"all 0.3s ease\",\r\n//         cursor: \"pointer\",\r\n//       }}\r\n//     >\r\n//       <i className=\"bi bi-pencil-square\"></i>\r\n//       <FormattedMessage id=\"update\" />\r\n//     </button>\r\n//   ),\r\n// }\r\n\r\n\r\n  ];\r\nconst columns = useMemo(() => {\r\n    let selectedColumns;\r\n  \r\n    if (\r\n      localStorage.getItem(\"language\") === \"pa\" ||\r\n      localStorage.getItem(\"language\") === \"da\"\r\n    ) {\r\n      selectedColumns = [...PDcolumn]; // معکوس کردن ستون‌ها\r\n    }else{\r\n      selectedColumns=PDcolumn;\r\n    }\r\n    return selectedColumns;\r\n  }, [isDesktop]);\r\n  \r\nuseEffect(()=>{\r\n  fetchData(currentPage,perPage);\r\n},[perPage,currentPage,search])\r\n\r\n\r\n\r\nconst handlePageChange = page => {\r\n  setCurrentPage(page); // برو به صفحه جدید\r\n};\r\n const localization = {\r\n      pagination: {\r\n          \r\n          rowsPerPage:<FormattedMessage id=\"AddrowsPerPage\"/> , // مثلا: \"تعداد ردیف‌ها\"\r\n        previous: <FormattedMessage id=\"previous\"/>, // مثلا: \"قبلی\"\r\n        next: <FormattedMessage id=\"next\"/>, // مثلا: \"بعدی\"\r\n        page: <FormattedMessage id=\"page\"/>, // مثلا: \"صفحه\"\r\n      },\r\n      // شما می‌توانید تنظیمات بیشتر برای متون مورد نظر اضافه کنید.\r\n    };\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(Source.getAddress() + \"/api/dashboard\", {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n  //       },\r\n  //       params:{\r\n  //         assets:\"ok\"\r\n  //       }\r\n  //     })\r\n  //     .then((res) => {\r\n        // setdashboardData({\r\n        //   ...dashboardData,\r\n        //   belance: res.data.belance,\r\n        //   sell: res.data.sell,\r\n        //   purchase: res.data.purchase,\r\n        //   transaction: res.data.transaction,\r\n        //   transformations: res.data.transformation,\r\n        //   money:res.data.money,\r\n        //   stock:res.data.stock,\r\n        //   debit:res.data.debit,\r\n        //   credit:res.data.credit,\r\n        //   expense:res.data.expense,\r\n        // });\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n\r\n  //   // if ( statuss === null) {\r\n  //   //   dispatch(getSettings());\r\n  //   // }\r\n  //   // if (tailors.length===0) {\r\n  //   //   dispatch(getTailors());\r\n  //   //   }\r\n  //   // if (statusu ===null) {\r\n  //   //   dispatch(getUsers());\r\n  //   //   }\r\n  //   //   if(statusSidebar===null){\r\n  //   //     dispatch(getSidebars());\r\n  //   // }\r\n\r\n  // }, []);\r\n\r\n\r\n  return (\r\n     <Paper\r\n                className=\"custom-scroll\"\r\n                elevation={3}\r\n                sx={{\r\n                  padding: 3,\r\n                  borderRadius: 2,\r\n                  maxWidth: '100%',\r\n                  width:2300,\r\n                  maxHeight: '90vh',\r\n                  overflowY: 'auto',\r\n                  margin: 'auto',\r\n                  backgroundColor: 'transparent',\r\n                }}\r\n              >\r\n                <div className=\"d-flex justify-content-end\">\r\n                 <h1\r\n                           className=\"text-center rounded p-1 w-50 text-light mb-3 mx-auto\"\r\n                           style={{ backgroundColor: \"var(--bs-info)\", width: \"100%\" ,fontSize:'1.8rem'}}\r\n                         >\r\n                           {/* <FormattedMessage id=\"Edit\" />{\" \"} */}\r\n                           <FormattedMessage id=\"Owne Assets\" />\r\n                         </h1>\r\n                </div>\r\n               \r\n               \r\n                <form dir={currentLanguage === 'en' ? 'ltr' : 'rtl'} >\r\n                  {/* Dependent Information Section */}\r\n                  {/* Measurement Specifications Section */}\r\n                  {/* Additional Details Section */}\r\n                  <div\r\n                            className=\"bg-light d-flex flex-column flex-lg-row justify-content-lg-between align-items-start align-items-lg-center\"\r\n                            style={{ borderTop: \"5px solid #4a5cf2\" }}\r\n                      dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n                          >\r\n                            {/* <div className=\"d-flex w-100 h-100 m-auto justify-content-between\"> */}\r\n                              <h2 className=\"m-2 fw-bold mb-4\"><FormattedMessage id=\"Stock\" /></h2>\r\n                            {/* </div> */}\r\n                          </div>\r\n          <DataTable\r\n          // title=\"Customers\"\r\n          localization={localization} // ارسال ترجمه‌ها      \r\n\r\n          columns={columns}\r\n          data={records}\r\n          // onRowClicked={handleRowClick}\r\n          progressPending={loading}\r\n          striped\r\n            responsive\r\n            highlightOnHover\r\n          pagination\r\n          paginationServer // فعال‌سازی صفحه‌بندی سرور ساید\r\n          paginationTotalRows={totalRows} // تعداد کل ردیف‌ها\r\n          onChangePage={handlePageChange} // تغییر صفحه\r\n          onChangeRowsPerPage={handlePerRowsChange} // تغییر تعداد ردیف‌ها در صفحه    \r\n          customStyles={{\r\n            headCells: {\r\n              style: {\r\n                fontWeight:'bolder',\r\n                display: 'flex',\r\n                minWidth: '10px', // تنظیم اندازه عنوان‌ها\r\n                maxWidth: '10px',\r\n                width: '10px',\r\n                margin: '0px',\r\n              },\r\n            },\r\n            cells: {\r\n              style: {\r\n                fontWeight:'bold',\r\n                minWidth: '10px', // تنظیم اندازه داده‌ها\r\n                maxWidth: '10px',\r\n                width: '15px',\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <div className=\"row g-4\">\r\n{cards.map((card, index) => {\r\n          // console.log(sidebars);\r\n          // console.log(index);\r\n          // console.log(sidebars[0][card.Show]);\r\n          // if(sidebars[0][card.Show]===0 || sidebars[0][card.group]===0){\r\n          //   return null;\r\n          // }\r\n          return (\r\n          <div className=\"col-md-4 col-lg-3 \" key={index}>\r\n            <div className={`card shadow-sm`} \r\n              style={{\r\n                color:'white',\r\n                backgroundColor:card.bg,\r\n                backgroundImage: `url(${card.img})`,\r\n                backgroundSize: '80px 45px', // اندازه دقیق تصویر\r\n                backgroundPosition: 'center', // موقعیت تصویر\r\n                backgroundRepeat: 'no-repeat', // جلوگیری از تکرار تصویر\r\n                // width:\"\"\r\n                // border: '2px solid black', // اضافه کردن حاشیه\r\n                // borderRadius: '10px', // گرد کردن گوشه‌ها\r\n              }}\r\n            >\r\n              <div className=\"fw-bold fs-6 center\">{card.title}</div>\r\n              <div className={`card-body bg-gradient `}>\r\n                <div className=\"d-flex mt-4\" style={{justifyContent:\"center\"}}>\r\n                  <p className={`card-text fs-2 ${card.textColor || \"\"} ${localStorage.getItem(\"language\") === \"en\" ? \"\" : \"afgFont\"}`} dir=\"ltr\">{formatNumber(parseInt(card.text))} <FormattedMessage id=\"AFG\"/></p>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"card-body text-center\">\r\n              </div> */}\r\n            </div>\r\n          </div>)\r\n        })}\r\n        </div>\r\n                </form>\r\n              </Paper>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport \"jalaali-react-date-picker/lib/styles/index.css\";\r\nimport { InputDatePicker } from \"jalaali-react-date-picker\";\r\nimport moment from 'moment-jalaali';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport zIndex from '@mui/material/styles/zIndex';\r\n\r\nexport default function Datepicker_customer({ handle_date,default_value ,lebal,setSelectedDay,selectedDay,onKeyDown,index=\"10000000000000\"}) {\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n  const handleDateChange = (date) => {  \r\n    setSelectedDay(date);\r\n        if(date!=null){\r\n        const handl={year:date._a[0],month:date._a[1]+1,day:date._a[2]}\r\n        // console.log(handl);\r\n      handle_date(handl);\r\n        } };\r\n  return (\r\n    <div className=\"col-3 m-2 mt-0 fw-normal\" style={{zIndex:index}}>\r\n      <label htmlFor=\"\" className='p-0 m-0 fw-bold'>{lebal}</label>\r\n      <InputDatePicker\r\n      // style={{zIndex:'10000000000000'}}\r\n        className='fw-normal afgFont'\r\n        onKeyDown={onKeyDown}\r\n        value={selectedDay}\r\n        sx={{\r\n          fontFamily: 'CustomFont1, sans-serif',\r\n          '& .MuiInputBase-input': {\r\n            fontFamily: 'CustomFont1, sans-serif !important'\r\n          }\r\n        }}\r\n        inputProps={{\r\n          style: {\r\n            fontFamily: 'CustomFont1' // ارث بری از تم\r\n          }\r\n        }}\r\n        popupStyles={{\r\n          fontFamily: \"'CustomFont1', sans-serif\",\r\n          // برای متن‌های داخل پاپ‌آپ تقویم\r\n          '& .jalaali-datepicker-header': {\r\n            fontFamily: \"'CustomFont1', sans-serif !important\",\r\n          },\r\n          '& .jalaali-datepicker-day-names': {\r\n            fontFamily: \"'CustomFont1', sans-serif !important\",\r\n          },\r\n          '& .jalaali-datepicker-days': {\r\n            fontFamily: \"'CustomFont1', sans-serif !important\",\r\n          },\r\n          '& .jalaali-datepicker-footer': {\r\n            fontFamily: \"'CustomFont1', sans-serif !important\",\r\n          },\r\n          '& *': {\r\n            fontFamily: \"'CustomFont1', sans-serif !important\",\r\n          }\r\n        }}\r\n        onChange={handleDateChange}\r\n        inputPlaceholder={settings[0].date === \"Persian\" ? 'تاریخ را وارد کنید' : 'Enter the date'}\r\n        locale={settings[0].date === \"Persian\" ? 'fa' : 'en'}\r\n        // locale='en'\r\n        colorPrimary=\"#0fbcf9\"\r\n        maximumDate={{ year: 9999, month: 12, day: 31 }}\r\n        minimumDate={{ year: 1, month: 1, day: 1 }}\r\n      />\r\n    </div>\r\n  );\r\n}"],"names":["_ref","isEditable","name","type","options","Onsearch","selectedOption","setAddAccountModal","setSelectedOption","searchQuery","handleInputChange","customStyles","menuPortal","base","_objectSpread","zIndex","formatMessage","useIntl","_jsx","className","children","Select","classNamePrefix","inputValue","value","onChange","sselectedOption","onInputChange","getOptionLabel","option","style","display","alignItems","concat","getOptionValue","placeholder","id","isClearable","components","MenuList","props","_jsxs","justifyContent","padding","borderTop","cursor","backgroundColor","onClick","isSearchable","isDisabled","menuPortalTarget","document","body","styles","formatNumber","number","toLocaleString","OwnAssets","dashboardData","setdashboardData","useState","Totalassets","cash","mainBalance","stock","credit","debit","benefit","totalbenefit","otherbenefit","cards","title","FormattedMessage","Show","group","text","bg","textColor","link","captions","sidebars","statusSidebar","useSelector","state","totalRows","setTotalRows","loading","setLoading","currentPage","setCurrentPage","perPage","setPerPage","search","setsearch","currentLanguage","localStorage","getItem","records","setRecords","item","setitem","AddStockModal","setAddStockModal","EditStockModal","setEditStockModal","isDesktop","setIsDesktop","window","innerWidth","PDcolumn","useShowAlert","selector","row","sortable","width","minWidth","cell","src","picture","AddStockPic","alt","height","borderRadius","maxWidth","d","date","Date","formattedDate","getFullYear","String","getMonth","padStart","getDate","hours","getHours","getMinutes","aa","moment","format","date_creation","qty","columns","useMemo","selectedColumns","useEffect","async","page","pageSize","response","axios","get","Source","getAddress","headers","Authorization","params","assets","delete","length","data","total","error","fetchData","localization","pagination","rowsPerPage","previous","next","Paper","elevation","sx","maxHeight","overflowY","margin","fontSize","dir","DataTable","progressPending","striped","responsive","highlightOnHover","paginationServer","paginationTotalRows","onChangePage","onChangeRowsPerPage","newPerPage","headCells","fontWeight","cells","map","card","index","color","backgroundImage","img","backgroundSize","backgroundPosition","backgroundRepeat","parseInt","Datepicker_customer","handle_date","default_value","lebal","setSelectedDay","selectedDay","onKeyDown","settings","errors","statuss","htmlFor","InputDatePicker","fontFamily","inputProps","popupStyles","handl","year","_a","month","day","inputPlaceholder","locale","colorPrimary","maximumDate","minimumDate"],"sourceRoot":""}