{"version":3,"file":"static/js/2251.eb96bd18.chunk.js","mappings":"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","sources":["pages/Items/Returns/Forms/AddPurchaseReturn.js","pages/Items/Returns/Forms/EditPurchaseReturn.js","pages/Items/Returns/PurchaseRetrun.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\n// import Source from \"../../../Source\";\r\nimport Source from \"../../../../Source\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport Datepicker_Customer from \"./../../../forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport jalaali from \"jalaali-js\";\r\n// import Combo_stock from \"./../../../forms/Combo_Customer\";\r\nimport ComboBo from'./ComboBo';\r\nimport Combo_item from \"./../../../forms/Combo_Customer\";\r\nimport Combo_Customer from \"./../../../forms/Combo_Customer\";\r\nimport { showAlert } from \"../../../../warrper\";\r\nimport ComboBox from \"./../../../forms/ComboBox\";\r\nimport Trash from \"./../../../../assets/icon/trash.png\";\r\nimport Print from \"./../../../../assets/icon/print.png\";\r\nimport Add from \"./../../../../assets/icon/add.png\";\r\nimport jsPDF from \"jspdf\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography\r\n} from '@mui/material';\r\nimport { Plus, Trash2, X } from 'lucide-react';\r\nimport { NumericFormat } from 'react-number-format';\r\n// import { getBelances } from \"../../Redux/belanceSlice\";\r\n// import { getMoneys } from \"../../Redux/moneysSlice\";\r\n// import { getCustomers } from \"../../Redux/customerSlice\";\r\n// import { getReports } from \"../../Redux/reportSlice\";\r\n// import { getItems } from \"../../Redux/itemSlice\";\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { addCustomerToCache } from \"../../Redux/customerSlice\";\r\n// import { updateBelanceInCache } from \"../../Redux/belanceSlice\";\r\n// import { updateStockInCache } from \"../../Redux/stockSlice\";\r\n// import AddAddress from \"../../../assets/icon/address.png\";\r\nimport { getSettings } from \"./../../../Redux/settingSlice\";\r\n// import { FormattedMessage } from \"react-intl\";\r\nimport { useShowAlert  } from \"../../../../warrper\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\n\r\nexport default function AddPurchaseReturn({\r\n  AddSellModal,\r\n  close,\r\n  records,\r\n  setRecords,\r\n  moneys,\r\n  belance,\r\n  setbelance,\r\n  setAddBalanceModal,\r\n  options1,\r\n  setOptions1,\r\n}) {\r\n  const showAlert = useShowAlert(); \r\n  const dispatch = useDispatch();\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n  const { sidebars } = useSelector((state) => state.sidebars);\r\n\r\n  useEffect(() => {\r\n    if (!statuss && settings?.lenght === 0) {\r\n      dispatch(getSettings());\r\n    }\r\n  }, [dispatch, statuss]);\r\n  // const { customers, errorc } = useSelector((state) => state.customers);\r\n  const { items, errori } = useSelector((state) => state.items);\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  // const [selectedDay1, setSelectedDay1] = useState(moment());\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [selectedOption1, setSelectedOption1] = useState();\r\n  const [EndDate, setEndDate] = useState(moment());\r\n  const [account, setaccount] = useState(false);\r\n  const [update, setupdate] = useState({ id: 0, belance: 0 });\r\n  const [selectedOptionAccount, setSelectedOptionAccount] = useState([]);\r\n  const [ExestQty, setExestQty] = useState(0);\r\n  const [AddItem, setAddItem] = useState({\r\n    purchase:null,\r\n    stocks_id: \"\",\r\n    qty: null,\r\n    weight: null,\r\n    dateInsert: new Date().toISOString(),\r\n    rate: null,\r\n    user_id: localStorage.getItem(\"userTokenid\"),\r\n    purchase_price: null,\r\n    description: \"\",\r\n    sell_price: null,\r\n    expiry_date: new Date().toISOString(),\r\n    accounts_id: \"\",\r\n    money: \"\",\r\n    stock: { name: \"\" },\r\n    e_id: 1,\r\n  });\r\n\r\n  const [shopingcart, setshopingcart] = useState([]);\r\n  const [TotalAmount, setTotalAmount] = useState(0);\r\n\r\n  const [primari, setprimari] = useState(0);\r\n\r\n  const algorithm = (e) => {\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        accounts_id: e.id,\r\n      });\r\n    }\r\n  };\r\n  const algorithm1 = (e) => {\r\n    setSelectedOption1(e);\r\n    // console.log(e);\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        stocks_id: e.stocks_id,\r\n        stock: e,\r\n        purchase:e.id\r\n      });\r\n    }\r\n  };\r\n  const handle_date = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setAddItem({\r\n        ...AddItem,\r\n        dateInsert: isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (localStorage.getItem(\"date\") === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n\r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n\r\n  const capitalizeWords = (text) => {\r\n    return text\r\n      .toLowerCase() // همه حروف را کوچک کنید\r\n      .split(\" \") // متن را به آرایه‌ای از کلمات تقسیم کنید\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1)) // حروف اول هر کلمه را بزرگ کنید\r\n      .join(\" \"); // کلمات را به هم وصل کنید\r\n  };\r\n  const generateInvoicePDF = (id) => {\r\n    const doc = new jsPDF();\r\n\r\n    // Title Section\r\n    doc.setFontSize(26);\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setTextColor(11, 105, 255); // Blue color for title\r\n    doc.text(\"Invoice\", 105, 10, null, null, \"center\");\r\n\r\n    doc.setFontSize(14);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n    doc.text(`${settings[0].company_name}`, 105, 20, null, null, \"center\");\r\n    doc.setFontSize(12);\r\n    doc.text(\r\n      `Seller Name: ${\r\n        selectedOption ? capitalizeWords(selectedOption.name) : \"N/A\"\r\n      }`,\r\n      105,\r\n      28,\r\n      null,\r\n      null,\r\n      \"center\"\r\n    );\r\n\r\n    // Invoice Details Section\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(11, 105, 255); // Blue color for the section heading\r\n    doc.text(`Invoice Number: ${id}`, 5, 19);\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n\r\n    const date = new Date(selectedDay);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (localStorage.getItem(\"date\") === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"pm\" : \"am\";\r\n      formattedDate = moment(selectedDay).format(\"jYYYY/jMM/jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n    const fromdata = `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    // return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    // doc.text(`Date: ${selectedDay ? date(selectedDay) : 'N/A'}`, 5, 29);\r\n    doc.text(`Date:${fromdata}`, 5, 29);\r\n\r\n    // Draw Horizontal Line\r\n    doc.setDrawColor(0, 0, 0); // Black color for line\r\n    doc.setLineWidth(0.5);\r\n    doc.line(5, 35, 205, 35);\r\n\r\n    // Company Image\r\n    if (settings[0].company_pic) {\r\n      const url = settings[0].company_pic;\r\n      const fileName = url.split(\"/\").pop();\r\n      doc.addImage(\r\n        Source.getAddress() + \"/api/getImage/\" + fileName,\r\n        \"JPEG\",\r\n        180,\r\n        5,\r\n        25,\r\n        25\r\n      );\r\n    } else {\r\n      doc.setFontSize(12);\r\n      doc.text(\"No Company Image Available\", 150, 20);\r\n    }\r\n\r\n    // Table with Purchase Details\r\n    doc.autoTable({\r\n      startY: 40,\r\n      head: [[\"No\", \"Name\", \"Quantity\", \"Price\", \"Total\"]],\r\n      body: shopingcart.map((row) => [\r\n        row.e_id,\r\n        row.stock.name,\r\n        row.qty,\r\n        row.sell_price +\r\n          `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n        row.sell_price * row.qty +\r\n          `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      ]),\r\n      theme: \"grid\",\r\n      headStyles: {\r\n        fillColor: [11, 105, 255],\r\n        textColor: [255, 255, 255],\r\n        fontSize: 10,\r\n        fontStyle: \"bold\",\r\n      },\r\n      bodyStyles: {\r\n        fontSize: 10,\r\n        textColor: [0, 0, 0],\r\n        fillColor: [255, 255, 255],\r\n      },\r\n      alternateRowStyles: {\r\n        fillColor: [245, 245, 245],\r\n      },\r\n    });\r\n\r\n    // Footer Section Positioned Dynamically\r\n    const finalY = doc.lastAutoTable.finalY || 40; // Ensure there's a fallback\r\n    doc.setFontSize(9);\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n\r\n    // Amount Details Section\r\n    doc.text(\r\n      `Total Amount: ${TotalAmount}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 5\r\n    );\r\n    doc.text(\r\n      `Paid Amount: ${PaidAmount ? PaidAmount : \"0.00\"}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 10\r\n    );\r\n    doc.text(\r\n      `Belance: ${update.belance}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 15\r\n    );\r\n\r\n    // Draw Horizontal Line\r\n    if (finalY + 15 > 144) {\r\n      doc.setDrawColor(0, 0, 0);\r\n      doc.setLineWidth(0.5);\r\n      doc.line(5, 278, 205, 278);\r\n      doc.text(`Address: ${settings[0].address}`, 10, 283);\r\n      doc.text(`Phone: ${settings[0].phone}`, 80, 283);\r\n      doc.text(`Email: ${settings[0].email}`, 140, 283);\r\n    } else {\r\n      doc.setDrawColor(0, 0, 0);\r\n      doc.setLineWidth(0.5);\r\n      doc.line(5, 139, 205, 139);\r\n      // Footer Address\r\n      doc.setFontSize(12);\r\n      // doc.addImage(AddAddress, 'png', 180, 5, 25, 25);\r\n      doc.text(`Address: ${settings[0].address}`, 10, 144);\r\n      doc.text(`Phone: ${settings[0].phone}`, 80, 144);\r\n      doc.text(`Email: ${settings[0].email}`, 140, 144);\r\n    }\r\n\r\n    // Save the document as a PDF\r\n    const pdfURL = doc.output(\"bloburl\");\r\n    const iframe = document.createElement(\"iframe\");\r\n    iframe.style.display = \"none\";\r\n    iframe.src = pdfURL;\r\n    document.body.appendChild(iframe);\r\n    iframe.contentWindow.print();\r\n  };\r\n  const Sumbit = (flag) => {\r\n    // console.log(add);\r\n    let BillId = 0;\r\n    // console.log(selectedOption||\r\n    //   shopingcart.length<=0);\r\n    // if (!Exesting && update.belance != 0) {\r\n    //   showAlert({\r\n    //     position: \"top-end\",\r\n    //     icon: \"error\",\r\n    //     title: \"You don't have enough belance!\",\r\n    //     showConfirmButton: false,\r\n    //     timer: 1000,\r\n    //   });\r\n    //   return;\r\n    // }\r\n    if (shopingcart.length <= 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"You must fill the item input!\",\r\n                title:  <FormattedMessage id=\"Select an item!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    let arr = [];\r\n    // console.log(shopingcart);\r\n    shopingcart.forEach((key) => {\r\n      // dispatch(updateItemInCache(key.item));\r\n      arr.push({\r\n        purchase:key.purchase,\r\n        stocks_id: key.stocks_id,\r\n        qty: key.qty,\r\n        weight: key.weight,\r\n        dateInsert: key.dateInsert,\r\n        rate: key.rate,\r\n        user_id: key.user_id,\r\n        purchase_price: key.purchase_price,\r\n        description: key.description,\r\n        expiry_date: key.expiry_date,\r\n        bill_id: \"\",\r\n        accounts_id: key.accounts_id,\r\n      });\r\n    });\r\n\r\n    let add = { arr: arr };\r\n    console.log(add);\r\n    axios\r\n      .post(Source.getAddress() + \"/api/purchasereturn\", add, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {\r\n          bill_prev:id,\r\n          Exesting: bill?.accounts_id ? \"ok\" : \"no\",\r\n          money: bill?.money_id || 0,\r\n          accounts_id: bill.accounts?.account_id,\r\n          PaidAmount: PaidAmount ? PaidAmount : 0,\r\n          TotalAmount: TotalAmount,\r\n          CustomerName: bill.temp_customer,\r\n          DateInsert: selectedDay,\r\n          bill_id:bill.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (flag) {\r\n          generateInvoicePDF(res.data.bill.id);\r\n        }\r\n        res.data.bill[\"money\"] = money;\r\n        res.data.bill[\"accounts\"] = { account: bill?.accounts?.account };\r\n        res.data.bill[\"temp_customer\"] = bill.temp_customer; \r\n        BillId = res.data.bill.id;\r\n        let add = {\r\n          purchase: shopingcart,\r\n          bill: res.data.bill,\r\n          money: money,\r\n        };\r\n        console.log(add);\r\n        setRecords([add, ...records]);\r\n        setSelectedDay(moment());\r\n        setSelectedOption({ name: \"\" });\r\n        setSelectedOption1({ name: \"\", type: { measuring: \"\" } });\r\n        setEndDate(moment());\r\n        setprimari(0);\r\n        setAddItem({\r\n          purchase:null,\r\n          stocks_id: 0,\r\n          qty: 0,\r\n          weight: 0,\r\n          dateInsert: new Date().toISOString(),\r\n          rate: 0,\r\n          user_id: localStorage.getItem(\"userTokenid\"),\r\n          purchase_price: 0,\r\n          description: \"Description\",\r\n          sell_price: 0,\r\n          expiry_date: new Date().toISOString(),\r\n          accounts_id: \"\",\r\n        });\r\n        setSearchQuery(\"\");\r\n        setSearchQuery1(\"\");\r\n        setupdate({ id: 0, belance: 0 });\r\n        setSelectedOptionmoney({ name: \"\" });\r\n        setaccount(false);\r\n        setshopingcart([]);\r\n        setSelectedDay(moment());\r\n        setSelectedOption();\r\n        setSelectedOptionmoney();\r\n        setupdate({ id: 0, belance: 0 });\r\n        setTotalAmount(0);\r\n        setPaidAmount(0);\r\n        setExestQty(0);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          // title: \"Stock has been created!\",\r\n                                                      title: <FormattedMessage id=\"Your record has been added!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          // title: \"Sosmething went wrong!\",\r\n                                      title:  <FormattedMessage id=\"You must enter the customer name!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      });\r\n  };\r\n  // const AddAccountModal = (name) => {\r\n  //   let add = { name: name, user_id: localStorage.getItem(\"userTokenid\") };\r\n  //   axios\r\n  //     .post(Source.getAddress() + \"/api/customers\", add, {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n  //       },\r\n  //     })\r\n  //     .then((res) => {\r\n  //       setSelectedOption(res.data.customer);\r\n  //       setOptions([res.data.customer, ...options]);\r\n  //       showAlert({\r\n  //         position: \"top-end\",\r\n  //         icon: \"success\",\r\n  //         title: \"Customer has been created!\",\r\n  //         showConfirmButton: false,\r\n  //         timer: 1000,\r\n  //       });\r\n  //       // dispatch(addCustomerToCache(res.data.customer));\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       showAlert({\r\n  //         position: \"top-end\",\r\n  //         icon: \"error\",\r\n  //         title: \"Sosmething went wrong!\",\r\n  //         showConfirmButton: false,\r\n  //         timer: 1000,\r\n  //       });\r\n  //     });\r\n  // };\r\n  const AddtoTable = () => {\r\n    // console.log(selectedOption1);\r\n    // بررسی اینکه تمام فیلدهای ضروری پر شده‌اند\r\n    if (!AddItem.qty) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title:  <FormattedMessage id=\"Select an item!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    const qty = AddItem.qty ? parseInt(AddItem.qty) : 0;\r\n    const weight= AddItem.weight ? parseFloat(AddItem.weight) : 1;\r\n    const sellPrice = AddItem.purchase_price ? parseInt(AddItem.purchase_price) : 0;\r\n    // console.log(sellPrice);\r\n    if (parseInt(selectedOption1.qty) - qty < 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"have not enuagh item!\",\r\n                title:  <FormattedMessage id=\"have not enuagh item!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    if (!qty || !sellPrice || !selectedOption1) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title:  <FormattedMessage id=\"Please select an item and fill the quantity and price!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    // اطمینان از مقدار مثبت برای موجودی\r\n    if (qty <= 0 || sellPrice <= 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title:  <FormattedMessage id=\"Quantity and price must be positive values!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    const addto ={...selectedOption1,...{purchase:AddItem.purchase}};\r\n    setSoldRecords((prevRecords) => \r\n      prevRecords.map((row) => {\r\n    if (row.id === selectedOption1.id) {\r\n      const updatedQty = parseInt(row.qty) - parseInt(AddItem.qty);\r\n      console.log({ ...row, qty: updatedQty });\r\n      return { ...row, qty: updatedQty };\r\n    }\r\n    return row;\r\n  })\r\n);\r\naddto.qty=AddItem.qty;\r\nsetshopingcart((prev) => [\r\n  ...shopingcart,\r\n  addto\r\n]);\r\nsetPaidAmount((prev) => prev + qty * sellPrice * weight);\r\nsetTotalAmount((prev) => prev + qty * sellPrice* weight);\r\nsetAddItem({\r\n  purchase:null,\r\n  stocks_id: \"\",\r\n  qty: \"\",\r\n  weight: null,\r\n  dateInsert: new Date().toISOString(),\r\n  rate: null,\r\n  user_id: localStorage.getItem(\"userTokenid\"),\r\n  purchase_price: \"\",\r\n  description: \"\",\r\n  sell_price: \"\",\r\n  expiry_date: new Date().toISOString(),\r\n  accounts_id: \"\",\r\n  money: \"\",\r\n  stock: { name: \"\" },\r\n  e_id: AddItem.e_id + 1,\r\n});\r\n// بازنشانی selectedOption1\r\nsetSelectedOption1(null);\r\n\r\n};\r\n  const handleItem = (e) => {\r\n    setAddItem({\r\n      ...AddItem,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const [options, setOptions] = useState();\r\n  // const [options1, setOptions1] = useState(items);\r\n\r\n  const handleSearch = async (query) => {\r\n    if (!Exesting) {\r\n      if (query) {\r\n        setAddItem({\r\n          ...AddItem,\r\n          temp_customer: query,\r\n        });\r\n        setSelectedOption({ id: 0, name: query });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSearch1 = async (query) => {\r\n  };\r\n  const handleInputChange = (newValue) => {\r\n    setSearchQuery(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const handleInputChange1 = (newValue) => {\r\n    setSearchQuery1(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch1(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchQuery1, setSearchQuery1] = useState(\"\");\r\n\r\n  const [selectedOptionmoney, setSelectedOptionmoney] = useState({ name: \"\" });\r\n  const algorithmmoney = (e) => {\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        money: e.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const Deleteshopingcart = (e) => {\r\n    setSoldRecords((prev) =>\r\n      prev.map((row) =>\r\n        row.id === e.purchase ? { ...row, qty: row.qty + e.qty } : row\r\n      )\r\n    );\r\n    setTotalAmount((prev) => prev - e.qty * e.sell_price*e.weight);\r\n    setPaidAmount((prev) => prev - e.qty * e.sell_price*e.weight);\r\n    setshopingcart((prev) => prev.filter((pre) => pre.e_id !== e.e_id));\r\n  };\r\n  const buttonRef = useRef(null);\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if (buttonRef.current && AddSellModal) {\r\n        buttonRef.current.click();\r\n      }\r\n    }\r\n  };\r\n  const [PaidAmount, setPaidAmount] = useState(0);\r\n  const handlepaid = (e) => {\r\n    setPaidAmount(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (!PaidAmount) {\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: -TotalAmount,\r\n      }));\r\n    } else {\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: PaidAmount - TotalAmount || 0,\r\n      }));\r\n    }\r\n\r\n    // }\r\n  }, [PaidAmount, TotalAmount, shopingcart]);\r\n  const [Exesting, setExesting] = useState();\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(\r\n  //         `${Source.getAddress()}/api/customers`,\r\n  //         {\r\n  //           headers: {\r\n  //             Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n  //           },\r\n  //           params: { query: searchQuery, do: \"ok\" }, // ارسال پارامتر جستجو به سرور\r\n  //         }\r\n  //       );\r\n  //       const data = response.data;\r\n  //       setOptions(data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching data:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   if (searchQuery) {\r\n  //     if (!searchQuery || searchQuery?.length < 3) {\r\n  //       setOptions([]);\r\n  //       return;\r\n  //     } else {\r\n  //       if (Exesting) {\r\n  //         fetchData();\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }, [searchQuery]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n  // console.log(searchQuery);\r\n  const [id,setid]=useState();\r\n  const [SoldRecords,setSoldRecords]=useState([]);\r\n  const [bill,setbill]=useState({});\r\n  const [money,setmoney]=useState();\r\n  const FindBill=()=>{\r\n    if(!id){\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"Please fill the bill number!\",\r\n        title:  <FormattedMessage id=\"Please fill the bill number!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n  return;\r\n}\r\n  else{  axios.get(Source.getAddress()+'/api/purchase/'+id,{headers: {\r\n      'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n    }}).then((res)=>{\r\n      console.log(res.data);\r\n      // console.log(res.data.sells);\r\n      setmoney(res.data.money);\r\n      setbill(res.data.bill);\r\n      setSoldRecords(res.data.purchase);\r\n    }).catch(()=>{\r\n      setbill([]);\r\n      setSoldRecords([]);\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"This bill number not found!\",\r\n                                    title:  <FormattedMessage id=\"This bill number not found!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n    })}\r\n  }\r\n      const { formatMessage } = useIntl();\r\n  return (\r\n    <div\r\n  dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n  className={`container rounded-5 popup transition ${account && \"sellpurchase\"} ${AddSellModal ? \"show\" : \"\"}`}\r\n  style={{\r\n    width: \"95%\",\r\n    maxWidth: \"95%\",\r\n    height: \"85vh\",\r\n    backgroundColor: \"#f8f9fa\",\r\n    padding: \"5px\",\r\n    fontSize: \"0.8rem\"\r\n  }}\r\n>\r\n  {/* Header Section */}\r\n  <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', mt: 1 }}>\r\n    <Typography variant=\"h6\" sx={{\r\n      textAlign: 'center',\r\n      borderRadius: 1,\r\n      p: 0.5,\r\n      color: 'white',\r\n      width: '100%',\r\n      fontSize: '0.9rem',\r\n      bgcolor: 'info.main'\r\n    }}>\r\n      <FormattedMessage id=\"Purchase Return\" />\r\n    </Typography>\r\n    <IconButton\r\n      size=\"small\"\r\n      className=\"hover_btn\"\r\n      onClick={close}\r\n      aria-label=\"Close\"\r\n    >\r\n      <X size={16} />\r\n    </IconButton>\r\n  </Box>\r\n\r\n  {/* Main Content */}\r\n  <Box sx={{ p: 0.5, borderRadius: 5 }}>\r\n    <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' } }}>\r\n      {/* Left Column (8 columns on desktop, 12 on mobile) */}\r\n      <Box sx={{ width: { xs: '100%', md: '66.66%' } }}>\r\n        {/* Search Bill Section */}\r\n        <Paper elevation={1} sx={{ p: 1, mb: 1, borderRadius: 3, px: 2 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ mt: 0.5, mb: 1, fontSize: '0.85rem' }}>\r\n            <FormattedMessage id=\"Search Bill\" />\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexDirection: { xs: 'column', sm: 'row' } }}>\r\n            <Box sx={{ width: '25%', mr: 1 }}>\r\n              <Typography fontWeight=\"bold\" variant=\"body2\">\r\n                <FormattedMessage id=\"Bill Number\" />\r\n              </Typography>\r\n              <TextField\r\n                onChange={(e) => setid(e.target.value)}\r\n                value={id}\r\n                type=\"number\"\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ mb: 1, '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n              />\r\n            </Box>\r\n            \r\n            <Button\r\n              onClick={FindBill}\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              size=\"small\"\r\n              sx={{ width: '6rem', fontSize: '0.8rem', height: '2rem', mt: 3, mx: 1 }}\r\n            >\r\n              <FormattedMessage id=\"Find Bill\" />\r\n            </Button>\r\n            <Box sx={{ width: '25%', ml: 1 }}>\r\n              <Typography fontWeight=\"bold\" variant=\"body2\">\r\n                <FormattedMessage id=\"Customer Name\" />\r\n              </Typography>\r\n              <TextField\r\n                readOnly\r\n                value={bill?.temp_customer || bill.accounts?.account.name}\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ mb: 1, '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n        {/* Customer Info Section */}\r\n        <Paper elevation={1} sx={{ p: 1, mb: 1, borderRadius: 3, px: 2 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ mt: 0.5, mb: 1, fontSize: '0.85rem' }}>\r\n            <FormattedMessage id=\"Customer Info\" />\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexDirection: { xs: 'column', sm: 'row' } }}>\r\n            <Box sx={{ width: '100%', mr: 1 }}>\r\n              <Typography fontWeight=\"bold\" variant=\"body2\">\r\n                <FormattedMessage id=\"Date\" />\r\n              </Typography>\r\n              <TextField\r\n                readOnly\r\n                value={bill?.dateInsert && date(bill?.dateInsert)}\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ mb: 1, '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ width: '100%', mr: 1 }}>\r\n              <Typography fontWeight=\"bold\" variant=\"body2\">\r\n                <FormattedMessage id=\"Total Amount\" />\r\n              </Typography>\r\n              <TextField\r\n                readOnly\r\n                value={bill?.total && String(bill?.total) + \" \" + bill.money?.name}\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ mb: 1, '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ width: '100%', mr: 1 }}>\r\n              <Typography fontWeight=\"bold\" variant=\"body2\">\r\n                <FormattedMessage id=\"Paid Amount\" />\r\n              </Typography>\r\n              <TextField\r\n                readOnly\r\n                value={bill?.PaidAmount && bill?.PaidAmount + \" \" + bill.money?.name}\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ mb: 1, '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ width: '100%' }}>\r\n              <Typography fontWeight=\"bold\" variant=\"body2\">\r\n                <FormattedMessage id=\"Remain Amount\" />\r\n              </Typography>\r\n              <TextField\r\n                readOnly\r\n                value={bill?.Remain && bill?.Remain + \" \" + bill.money?.name}\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ mb: 1, '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n        {/* Item Information Section */}\r\n       <Paper elevation={1} sx={{ p: 1, mb: 0.5, borderRadius: 3, px: 2 }}>\r\n  <Typography variant=\"subtitle2\" sx={{ mt: 0.5, mb: 1, fontSize: '0.85rem' }}>\r\n    <FormattedMessage id=\"Item information\" />\r\n  </Typography>\r\n\r\n  <Box\r\n    sx={{\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      gap: 1,\r\n      mb: 0.5\r\n    }}\r\n  >\r\n    {/* Item Name */}\r\n    <Box sx={{ flex: '1 1 200px', minWidth: '180px' }}>\r\n      <Typography fontWeight=\"bold\" variant=\"body2\">\r\n        <FormattedMessage id=\"Item Name\" />\r\n      </Typography>\r\n      <ComboBo\r\n        searchQuery={searchQuery1}\r\n        setSearchQuery={setSearchQuery1}\r\n        handleInputChange={handleInputChange1}\r\n        handleSearch={handleSearch1}\r\n        setSelectedOption={algorithm1}\r\n        selectedOption={selectedOption1}\r\n        options={SoldRecords}\r\n        compactMode={true}\r\n      />\r\n    </Box>\r\n\r\n    {/* Quantity */}\r\n    <Box sx={{ flex: '1 1 120px', minWidth: '120px' }}>\r\n      <Typography fontWeight=\"bold\" variant=\"body2\">\r\n        <FormattedMessage id=\"Quantity\" />\r\n      </Typography>\r\n      <NumericFormat\r\n        customInput={TextField}\r\n        onKeyDown={handleKeyDown}\r\n        onValueChange={({ value }) =>\r\n          handleItem({ target: { name: 'qty', value } })\r\n        }\r\n        value={AddItem.qty}\r\n        name=\"qty\"\r\n        size=\"small\"\r\n        fullWidth\r\n        thousandSeparator\r\n        sx={{ '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n      />\r\n    </Box>\r\n\r\n    {/* Purchase Price */}\r\n    <Box sx={{ flex: '1 1 150px', minWidth: '120px' }}>\r\n      <Typography fontWeight=\"bold\" variant=\"body2\">\r\n        <FormattedMessage id=\"Purchase Price\" />\r\n      </Typography>\r\n      <NumericFormat\r\n        customInput={TextField}\r\n        onKeyDown={handleKeyDown}\r\n        onValueChange={({ value }) =>\r\n          handleItem({ target: { name: 'purchase_price', value } })\r\n        }\r\n        value={AddItem.purchase_price}\r\n        name=\"purchase_price\"\r\n        size=\"small\"\r\n        fullWidth\r\n        thousandSeparator\r\n        sx={{ '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n      />\r\n    </Box>\r\n\r\n    {/* Weight (if gold) */}\r\n    {sidebars[0]?.type === 'gold' && (\r\n      <Box sx={{ flex: '1 1 120px', minWidth: '120px' }}>\r\n        <Typography fontWeight=\"bold\" variant=\"body2\">\r\n          <FormattedMessage id=\"weight\" />\r\n        </Typography>\r\n        <NumericFormat\r\n          customInput={TextField}\r\n          onKeyDown={handleKeyDown}\r\n          thousandSeparator={true}\r\n                decimalSeparator=\".\"\r\n        decimalScale={3}\r\n          onValueChange={({ value }) =>\r\n            handleItem({ target: { name: 'weight', value } })\r\n          }\r\n          value={AddItem.weight}\r\n          name=\"weight\"\r\n          size=\"small\"\r\n          fullWidth\r\n          thousandSeparator\r\n          sx={{ '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n        />\r\n      </Box>\r\n    )}\r\n\r\n    {/* Description */}\r\n    <Box sx={{ flex: '2 1 200px', minWidth: '180px' }}>\r\n      <Typography fontWeight=\"bold\" variant=\"body2\">\r\n        <FormattedMessage id=\"Description\" />\r\n      </Typography>\r\n      <TextField\r\n        name=\"description\"\r\n        multiline\r\n        minRows={1}\r\n        size=\"small\"\r\n        fullWidth\r\n        sx={{ fontSize: '0.8rem' }}\r\n        value={AddItem.description}\r\n        onChange={handleItem}\r\n      />\r\n    </Box>\r\n\r\n    {/* Add Button */}\r\n    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n      <Button\r\n        onClick={AddtoTable}\r\n        variant=\"contained\"\r\n        color=\"success\"\r\n        size=\"small\"\r\n        sx={{\r\n          width: '5rem',\r\n          fontSize: '0.8rem',\r\n          height: '2rem',\r\n          mb: 1,\r\n          mt: { xs: 1, sm: 4 }\r\n        }}\r\n      >\r\n        <Plus size={15} />\r\n      </Button>\r\n    </Box>\r\n  </Box>\r\n</Paper>\r\n\r\n      </Box>\r\n\r\n      {/* Right Column (4 columns on desktop, 12 on mobile) */}\r\n      <Box sx={{ width: { xs: '100%', md: '33.33%' }, ml: { md: 1 } }}>\r\n        <Box sx={{ m: 0.5, mt: 0, maxHeight: '200px', overflow: 'auto', height: '200px' }}>\r\n          <Typography variant=\"subtitle1\" sx={{\r\n            textAlign: 'center',\r\n            borderRadius: 1,\r\n            p: 0.5,\r\n            color: 'white',\r\n            mb: 0.5,\r\n            fontSize: '0.85rem',\r\n            bgcolor: 'info.main'\r\n          }}>\r\n            <FormattedMessage id=\"Item Sold\" />\r\n          </Typography>\r\n          <Table size=\"small\" sx={{ fontSize: '0.8rem' }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ width: '30%' }}><FormattedMessage id=\"Name\" /></TableCell>\r\n                <TableCell sx={{ width: '20%' }}><FormattedMessage id=\"Quantity\" /></TableCell>\r\n                {sidebars[0].type==='gold' && <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"weight\" /></TableCell>}\r\n                <TableCell sx={{ width: '25%' }}><FormattedMessage id=\"Price\" /></TableCell>\r\n                <TableCell sx={{ width: '25%' }}><FormattedMessage id=\"Description\" /></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {SoldRecords?.map((row, idx) => (\r\n                <TableRow key={idx}>\r\n                  <TableCell>{row.stock.name}</TableCell>\r\n                  <TableCell>{row.qty}</TableCell>\r\n                  {sidebars[0].type==='gold'&&< TableCell>{row.weight}</TableCell>}\r\n                  <TableCell>{row.purchase_price}</TableCell>\r\n                  <TableCell>{row.description}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n        <Typography fontWeight=\"bold\" variant=\"body2\">\r\n          <FormattedMessage id=\"Total Return Amount\" />\r\n        </Typography>\r\n        <TextField\r\n          readOnly\r\n          value={TotalAmount}\r\n          size=\"small\"\r\n          fullWidth\r\n          sx={{ mb: 1, '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n        />\r\n        <Typography fontWeight=\"bold\" variant=\"body2\">\r\n          <FormattedMessage id=\"Paid Return Amount\" />\r\n        </Typography>\r\n        <TextField\r\n          readOnly={!Exesting}\r\n          onChange={handlepaid}\r\n          value={PaidAmount}\r\n          size=\"small\"\r\n          fullWidth\r\n          sx={{ mb: 1, '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n        />\r\n        <Typography fontWeight=\"bold\" variant=\"body2\">\r\n          <FormattedMessage id=\"Remain Return Amount\" />\r\n        </Typography>\r\n        <TextField\r\n          readOnly\r\n          value={update.belance}\r\n          type=\"number\"\r\n          size=\"small\"\r\n          fullWidth\r\n          sx={{ mb: 1, '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n\r\n  {/* Footer Section */}\r\n  <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, m: 0, p: 0 }}>\r\n    <Box sx={{ width: { xs: '100%', md: '66.66%' } }}>\r\n      <Box sx={{ maxHeight: '300px', overflow: 'auto' }}>\r\n        <Typography variant=\"subtitle1\" sx={{\r\n          textAlign: 'center',\r\n          borderRadius: 1,\r\n          p: 0.5,\r\n          color: 'white',\r\n          mb: 0.5,\r\n          fontSize: '0.85rem',\r\n          bgcolor: 'info.main'\r\n        }}>\r\n          <FormattedMessage id=\"Return Item Sold\" />\r\n        </Typography>\r\n        <Table size=\"small\" sx={{ fontSize: '0.8rem' }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell sx={{ width: '5%' }}><FormattedMessage id=\"No\" /></TableCell>\r\n              <TableCell sx={{ width: '20%' }}><FormattedMessage id=\"Name\" /></TableCell>\r\n              <TableCell sx={{ width: '15%' }}><FormattedMessage id=\"Quantity\" /></TableCell>\r\n              {sidebars[0].type==='gold' && <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"weight\" /></TableCell>}\r\n              <TableCell sx={{ width: '15%' }}><FormattedMessage id=\"Price\" /></TableCell>\r\n              <TableCell sx={{ width: '15%' }}><FormattedMessage id=\"Total\" /></TableCell>\r\n              <TableCell sx={{ width: '20%' }}><FormattedMessage id=\"Description\" /></TableCell>\r\n              <TableCell sx={{ width: '10%' }}><FormattedMessage id=\"Delete\" /></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {shopingcart?.map((row, idx) => (\r\n              <TableRow key={idx}>\r\n                <TableCell>{row.e_id}</TableCell>\r\n                <TableCell>{row.stock.name}</TableCell>\r\n                <TableCell>{row.qty}</TableCell>\r\n                {sidebars[0].type==='gold'&&< TableCell>{row.weight}</TableCell>}\r\n                <TableCell>{row.purchase_price}</TableCell>\r\n                <TableCell>{row.purchase_price * row.qty}</TableCell>\r\n                <TableCell>{row.description}</TableCell>\r\n                <TableCell>\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => Deleteshopingcart(row)}\r\n                  >\r\n                    <Trash2 size={15} />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Box>\r\n    </Box>\r\n    <Box sx={{ width: { xs: '100%', md: '33.33%' } }}>\r\n      <Box className=\"date-picker-container\">\r\n        <Datepicker_Customer\r\n          default_value={EndDate}\r\n          handle_date={handle_date}\r\n          lebal={<FormattedMessage id=\"Date\" />}\r\n          setSelectedDay={setSelectedDay}\r\n          selectedDay={selectedDay}\r\n          compactMode={true}\r\n        />\r\n      </Box>\r\n      <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, justifyContent: 'center', mt: 1 }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          size=\"small\"\r\n          sx={{ width: '120px', fontSize: '0.8rem', py: 0.5, mb: 0.5, mr: { md: 0.5 }, ml: 0.5 }}\r\n          onClick={close}\r\n        >\r\n          <FormattedMessage id=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          sx={{ width: '120px', fontSize: '0.8rem', py: 0.5, mb: 0.5, mr: { md: 0.5 }, ml: 0.5 }}\r\n          onClick={() => Sumbit(false)}\r\n        >\r\n          <FormattedMessage id=\"Save\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          sx={{ width: '120px', fontSize: '0.8rem', py: 0.5, mb: 0.5, ml: 0.5 }}\r\n          onClick={() => Sumbit(true)}\r\n        >\r\n          <FormattedMessage id=\"Print And Save\" />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n</div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\n// import Source from \"../../../Source\";\r\nimport { showAlert } from \"../../../../warrper\";\r\nimport Source from \"../../../../Source\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport Datepicker_Customer from \"./../../../forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport jalaali from \"jalaali-js\";\r\n// import Combo_stock from \"./../../../forms/Combo_Customer\";\r\nimport ComboBo from \"./ComboBo\";\r\nimport Combo_item from \"./../../../forms/Combo_Customer\";\r\nimport Combo_Customer from \"./../../../forms/Combo_Customer\";\r\nimport ComboBox from \"./../../../forms/ComboBox\";\r\nimport Trash from \"./../../../../assets/icon/trash.png\";\r\nimport Print from \"./../../../../assets/icon/print.png\";\r\nimport Add from \"./../../../../assets/icon/add.png\";\r\nimport jsPDF from \"jspdf\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getSettings } from \"./../../../Redux/settingSlice\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\n// import { useShowAlert  } from \"../warrper\";\r\nimport { useShowAlert  } from \"../../../../warrper\";\r\nimport { NumericFormat } from 'react-number-format';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography\r\n} from '@mui/material';\r\nimport { Plus, Trash2, X } from 'lucide-react';\r\nexport default function EditSellReturn({\r\n  AddSellModal,\r\n  close,\r\n  // settings,\r\n  records,\r\n  setRecords,\r\n  moneys,\r\n  shopingcart,\r\n  setshopingcart,\r\n  // addAccountModal,\r\n  // setAddAccountModal,\r\n  // setcustomer,customer,\r\n  belance,\r\n  setbelance,\r\n  setAddBalanceModal,\r\n  options1,\r\n  setOptions1,\r\n  SoldRecords,\r\n  setSoldRecords,\r\n  bill,\r\n  setbill,\r\n  money,\r\n  setmoney,\r\n  returnbill,\r\n  setreturnbill,\r\n  TotalAmount,\r\n  setTotalAmount,\r\n  PaidAmount,\r\n  setPaidAmount,\r\n}) {\r\n  const showAlert = useShowAlert(); \r\n  const dispatch = useDispatch();\r\n  // const { customers, errorc, statusc } = useSelector(\r\n  //   (state) => state.customers\r\n  // );\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n  const {sidebars} = useSelector((state) => state.sidebars);\r\n  useEffect(() => {\r\n    if (!statuss && settings?.lenght === 0) {\r\n      dispatch(getSettings());\r\n    }\r\n  }, [dispatch, statuss]);\r\n  // const { customers, errorc } = useSelector((state) => state.customers);\r\n  const { items, errori } = useSelector((state) => state.items);\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  // const [selectedDay1, setSelectedDay1] = useState(moment());\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [selectedOption1, setSelectedOption1] = useState();\r\n  const [EndDate, setEndDate] = useState(moment());\r\n  const [account, setaccount] = useState(false);\r\n  const [update, setupdate] = useState({ id: 0, belance: 0 });\r\n  const [selectedOptionAccount, setSelectedOptionAccount] = useState([]);\r\n  const [ExestQty, setExestQty] = useState(0);\r\n  const [AddItem, setAddItem] = useState({\r\n    purchase: null,\r\n    stocks_id: \"\",\r\n    qty: null,\r\n    weight: null,\r\n    dateInsert: new Date().toISOString(),\r\n    rate: null,\r\n    user_id: localStorage.getItem(\"userTokenid\"),\r\n    purchase_price: null,\r\n    description: \"\",\r\n    sell_price: null,\r\n    expiry_date: new Date().toISOString(),\r\n    accounts_id: \"\",\r\n    money: \"\",\r\n    stock: { name: \"\" },\r\n    e_id: 1,\r\n  });\r\n\r\n  const [primari, setprimari] = useState(0);\r\n\r\n  const algorithm = (e) => {\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        accounts_id: e.id,\r\n      });\r\n    }\r\n  };\r\n  const algorithm1 = (e) => {\r\n    setSelectedOption1(e);\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        stocks_id: e.stocks_id,\r\n        stock: e,\r\n        purchase: e.id,\r\n        // id:e.id\r\n      });\r\n    }\r\n  };\r\n  const handle_date = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setAddItem({\r\n        ...AddItem,\r\n        dateInsert: isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (settings[0].date === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n\r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n\r\n  const capitalizeWords = (text) => {\r\n    return text\r\n      .toLowerCase() // همه حروف را کوچک کنید\r\n      .split(\" \") // متن را به آرایه‌ای از کلمات تقسیم کنید\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1)) // حروف اول هر کلمه را بزرگ کنید\r\n      .join(\" \"); // کلمات را به هم وصل کنید\r\n  };\r\n  const generateInvoicePDF = (id) => {\r\n    const doc = new jsPDF();\r\n\r\n    // Title Section\r\n    doc.setFontSize(26);\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setTextColor(11, 105, 255); // Blue color for title\r\n    doc.text(\"Invoice\", 105, 10, null, null, \"center\");\r\n\r\n    doc.setFontSize(14);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n    doc.text(`${settings[0].company_name}`, 105, 20, null, null, \"center\");\r\n    doc.setFontSize(12);\r\n    doc.text(\r\n      `Seller Name: ${\r\n        selectedOption ? capitalizeWords(selectedOption.name) : \"N/A\"\r\n      }`,\r\n      105,\r\n      28,\r\n      null,\r\n      null,\r\n      \"center\"\r\n    );\r\n\r\n    // Invoice Details Section\r\n    doc.setFontSize(14);\r\n    doc.setTextColor(11, 105, 255); // Blue color for the section heading\r\n    doc.text(`Invoice Number: ${id}`, 5, 19);\r\n    doc.setFontSize(12);\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n\r\n    const date = new Date(selectedDay);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (localStorage.getItem(\"date\") === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"pm\" : \"am\";\r\n      formattedDate = moment(selectedDay).format(\"jYYYY/jMM/jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n    const fromdata = `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    // return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    // doc.text(`Date: ${selectedDay ? date(selectedDay) : 'N/A'}`, 5, 29);\r\n    doc.text(`Date:${fromdata}`, 5, 29);\r\n\r\n    // Draw Horizontal Line\r\n    doc.setDrawColor(0, 0, 0); // Black color for line\r\n    doc.setLineWidth(0.5);\r\n    doc.line(5, 35, 205, 35);\r\n\r\n    // Company Image\r\n    if (settings[0].company_pic) {\r\n      const url = settings[0].company_pic;\r\n      const fileName = url.split(\"/\").pop();\r\n      doc.addImage(\r\n        Source.getAddress() + \"/api/getImage/\" + fileName,\r\n        \"JPEG\",\r\n        180,\r\n        5,\r\n        25,\r\n        25\r\n      );\r\n    } else {\r\n      doc.setFontSize(12);\r\n      doc.text(\"No Company Image Available\", 150, 20);\r\n    }\r\n\r\n    // Table with Purchase Details\r\n    doc.autoTable({\r\n      startY: 40,\r\n      head: [[\"No\", \"Name\", \"Quantity\", \"Price\", \"Total\"]],\r\n      body: shopingcart.map((row) => [\r\n        row.e_id,\r\n        row.stock.name,\r\n        row.qty,\r\n        row.sell_price +\r\n          `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n        row.sell_price * row.qty +\r\n          `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      ]),\r\n      theme: \"grid\",\r\n      headStyles: {\r\n        fillColor: [11, 105, 255],\r\n        textColor: [255, 255, 255],\r\n        fontSize: 10,\r\n        fontStyle: \"bold\",\r\n      },\r\n      bodyStyles: {\r\n        fontSize: 10,\r\n        textColor: [0, 0, 0],\r\n        fillColor: [255, 255, 255],\r\n      },\r\n      alternateRowStyles: {\r\n        fillColor: [245, 245, 245],\r\n      },\r\n    });\r\n\r\n    // Footer Section Positioned Dynamically\r\n    const finalY = doc.lastAutoTable.finalY || 40; // Ensure there's a fallback\r\n    doc.setFontSize(9);\r\n    doc.setTextColor(0, 0, 0); // Black color for text\r\n\r\n    // Amount Details Section\r\n    doc.text(\r\n      `Total Amount: ${TotalAmount}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 5\r\n    );\r\n    doc.text(\r\n      `Paid Amount: ${PaidAmount ? PaidAmount : \"0.00\"}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 10\r\n    );\r\n    doc.text(\r\n      `Belance: ${update.belance}` +\r\n        `${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}`,\r\n      152,\r\n      finalY + 15\r\n    );\r\n\r\n    // Draw Horizontal Line\r\n    if (finalY + 15 > 144) {\r\n      doc.setDrawColor(0, 0, 0);\r\n      doc.setLineWidth(0.5);\r\n      doc.line(5, 278, 205, 278);\r\n      doc.text(`Address: ${settings[0].address}`, 10, 283);\r\n      doc.text(`Phone: ${settings[0].phone}`, 80, 283);\r\n      doc.text(`Email: ${settings[0].email}`, 140, 283);\r\n    } else {\r\n      doc.setDrawColor(0, 0, 0);\r\n      doc.setLineWidth(0.5);\r\n      doc.line(5, 139, 205, 139);\r\n      // Footer Address\r\n      doc.setFontSize(12);\r\n      // doc.addImage(AddAddress, 'png', 180, 5, 25, 25);\r\n      doc.text(`Address: ${settings[0].address}`, 10, 144);\r\n      doc.text(`Phone: ${settings[0].phone}`, 80, 144);\r\n      doc.text(`Email: ${settings[0].email}`, 140, 144);\r\n    }\r\n\r\n    // Save the document as a PDF\r\n    const pdfURL = doc.output(\"bloburl\");\r\n    const iframe = document.createElement(\"iframe\");\r\n    iframe.style.display = \"none\";\r\n    iframe.src = pdfURL;\r\n    document.body.appendChild(iframe);\r\n    iframe.contentWindow.print();\r\n  };\r\n  const Sumbit = (flag) => {\r\n    let BillId = 0;\r\n    let arr = [];\r\n    shopingcart.forEach((key) => {\r\n      arr.push({\r\n        purchase: key.purchase,\r\n        stocks_id: key.stocks_id,\r\n        qty: parseInt(key.qty),\r\n        weight: key.weight,\r\n        dateInsert: key.dateInsert,\r\n        rate: key.rate,\r\n        user_id: key.user_id,\r\n        purchase_price: key.purchase_price,\r\n        description: key.description,\r\n        expiry_date: key.expiry_date,\r\n        bill_id: \"\",\r\n        accounts_id: key.accounts_id,\r\n      });\r\n    });\r\n    console.log(arr);\r\n    let add = { arr: arr,\r\n      _method:\"put\"\r\n     };\r\n    axios\r\n      .post(Source.getAddress() + \"/api/purchasereturn/\" + returnbill.id, add, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {\r\n          Exesting: bill?.accounts_id ? \"ok\" : \"no\",\r\n          money: bill?.money_id || 0,\r\n          accounts_id: bill.accounts?.account_id,\r\n          PaidAmount: PaidAmount ? PaidAmount : 0,\r\n          TotalAmount: TotalAmount,\r\n          CustomerName: bill.temp_customer,\r\n          DateInsert: selectedDay,\r\n          bill_id: bill.id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (flag) {\r\n          generateInvoicePDF(res.data.bill.id);\r\n        }\r\n        res.data.bill[\"money\"] = money;\r\n        res.data.bill[\"accounts\"] = { account: bill?.accounts?.account };\r\n        res.data.bill[\"temp_customer\"] = bill.temp_customer;\r\n        BillId = res.data.bill.id;\r\n        let add = {\r\n          sells: shopingcart,\r\n          bill: res.data.bill,\r\n          money: money,\r\n        };\r\n        // setRecords([add, ...records]);\r\n        setSelectedDay(moment());\r\n        setSelectedOption({ name: \"\" });\r\n        setSelectedOption1({ name: \"\", type: { measuring: \"\" } });\r\n        setEndDate(moment());\r\n        setprimari(0);\r\n        setAddItem({\r\n          stocks_id: 0,\r\n          qty: 0,\r\n          weight: 0,\r\n          dateInsert: new Date().toISOString(),\r\n          rate: 0,\r\n          user_id: localStorage.getItem(\"userTokenid\"),\r\n          purchase_price: 0,\r\n          description: \"Description\",\r\n          sell_price: 0,\r\n          expiry_date: new Date().toISOString(),\r\n          accounts_id: \"\",\r\n        });\r\n        setSearchQuery(\"\");\r\n        setSearchQuery1(\"\");\r\n        setSelectedOptionmoney({ name: \"\" });\r\n        setaccount(false);\r\n        setSelectedDay(moment());\r\n        setSelectedOption();\r\n        setSelectedOptionmoney();\r\n        setExestQty(0);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: \"Stock has been created!\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"Sosmething went wrong!\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      });\r\n  };\r\n  const AddtoTable = () => {\r\n    if (!AddItem.qty) {\r\n        showAlert({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: \"Select an item!\",\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n        });\r\n        return;\r\n    }\r\n\r\n    const qty = parseInt(AddItem.qty) || 0;\r\n    const weight = AddItem.weight || 1;\r\n    const sellPrice = parseInt(AddItem.purchase_price) || 0;\r\n\r\n    if (parseInt(selectedOption1.qty) - qty < 0) {\r\n        showAlert({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: \"Not enough items!\",\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n        });\r\n        return;\r\n    }\r\n\r\n    if (!qty || !sellPrice || !selectedOption1) {\r\n        showAlert({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: \"Please select an item and fill the quantity and price!\",\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n        });\r\n        return;\r\n    }\r\n\r\n    if (qty <= 0 || sellPrice <= 0) {\r\n        showAlert({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: \"Quantity and price must be positive values!\",\r\n                showConfirmButton:false,\r\n                timer :1000\r\n              });\r\n              return;\r\n          }\r\n    \r\n          // Create new item with updated details\r\n          const newItem = { ...selectedOption1, purchase_price : AddItem.purchase_price , qty };\r\n    \r\n          // Update existing sold records by reducing quantity\r\n          setSoldRecords((prevRecords) =>\r\n              prevRecords.map((row) => {\r\n                  if (row.id === selectedOption1.id && row.qty >= qty ) { \r\n                      const updatedQty = parseInt(row.qty - qty);\r\n                      return { ...row, qty : updatedQty };\r\n                  }\r\n                  return row;  \r\n              })\r\n           );\r\n    \r\n           let nextId=shopingcart.length > 0 ? shopingcart[shopingcart.length-1].id +1 :1 ;\r\n           newItem.id=nextId;\r\n\r\n           setshopingcart((prevItems)=> [...prevItems,newItem]);\r\n\r\n           setPaidAmount(prevAmount=> prevAmount+qty*sellPrice*weight);\r\n           setTotalAmount(prevTotal=> prevTotal+qty*sellPrice*weight);\r\n\r\n         // Reset form fields after adding to cart\r\n         setAddItem({\r\n             stocks_id:\"\",\r\n             qty:\"\",\r\n             weight:null ,\r\n             dateInsert:new Date().toISOString(),\r\n             rate:null ,\r\n             user_id : localStorage.getItem(\"userTokenid\"),\r\n             purchase_price:\"\",\r\n             description:\"\",\r\n             sell_price:\"\",\r\n               expiry_date:new Date().toISOString(),\r\n               accounts_id:\"\" ,\r\n               money:\"\" ,\r\n               stock:{name:\"\"},\r\n               id : null \r\n         });\r\n\r\n       setSelectedOption1(null);   \r\n};\r\n\r\n  const handleItem = (e) => {\r\n    setAddItem({\r\n      ...AddItem,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [options, setOptions] = useState();\r\n  const handleSearch = async (query) => {\r\n    if (!Exesting) {\r\n      if (query) {\r\n        setAddItem({\r\n          ...AddItem,\r\n          temp_customer: query,\r\n        });\r\n        setSelectedOption({ id: 0, name: query });\r\n      }\r\n    }\r\n  };\r\n  const handleSearch1 = async (query) => {};\r\n  const handleInputChange = (newValue) => {\r\n    setSearchQuery(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const handleInputChange1 = (newValue) => {\r\n    setSearchQuery1(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch1(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchQuery1, setSearchQuery1] = useState(\"\");\r\n\r\n  const [selectedOptionmoney, setSelectedOptionmoney] = useState({ name: \"\" });\r\n  const Deleteshopingcart = (e) => {\r\n    setSoldRecords((prev) =>\r\n      prev.map((row) =>\r\n        row.id === e.purchase ? { ...row, qty: row.qty + e.qty } : row\r\n      )\r\n    );\r\n    setTotalAmount((prev) => parseInt(prev) - parseInt(e.qty * e.purchase_price*e.weight));\r\n    setPaidAmount((prev) => parseInt(prev) - parseInt(e.qty * e.purchase_price*e.weight));\r\n    setshopingcart((prev) => prev.filter((pre) => pre.id !== e.id));\r\n  };\r\n  const buttonRef = useRef(null);\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if (buttonRef.current && AddSellModal) {\r\n        buttonRef.current.click();\r\n      }\r\n    }\r\n  };\r\n  const handlepaid = (e) => {\r\n    setPaidAmount(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (!PaidAmount) {\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: -TotalAmount,\r\n      }));\r\n    } else {\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: PaidAmount - TotalAmount || 0,\r\n      }));\r\n    }\r\n\r\n    // }\r\n  }, [PaidAmount, TotalAmount, shopingcart]);\r\n  const [Exesting, setExesting] = useState();\r\n  const [id, setid] = useState();\r\n  // console.log(shopingcart[shopingcart.length - 1]);\r\n  let e_id = 0;\r\n        const { formatMessage } = useIntl();\r\n  return (\r\n   <div\r\n  dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n  className={`container rounded-5 popup transition ${account && \"sellpurchase\"} ${AddSellModal ? \"show\" : \"\"}`}\r\n  style={{\r\n    width: \"95%\",\r\n    maxWidth: \"95%\",\r\n    height: \"85vh\",\r\n    backgroundColor: \"#f8f9fa\",\r\n    padding: \"5px\",\r\n    fontSize: \"0.8rem\",\r\n    overflowY: \"auto\"\r\n  }}\r\n>\r\n  {/* Header */}\r\n  <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', mt: 1 }}>\r\n    <Typography variant=\"h6\" sx={{\r\n      textAlign: 'center', borderRadius: 1, p: 0.5, color: 'white',\r\n      width: '100%', fontSize: '0.9rem', bgcolor: 'info.main'\r\n    }}>\r\n      <FormattedMessage id=\"Purchase Return\" />\r\n    </Typography>\r\n    <IconButton size=\"small\" className=\"hover_btn\" onClick={close}><X size={16} /></IconButton>\r\n  </Box>\r\n\r\n  {/* Main */}\r\n  <Box sx={{ p: 0.5, borderRadius: 5 }}>\r\n    <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' } }}>\r\n      {/* Left Section */}\r\n      <Box sx={{ width: { xs: '100%', md: '66.66%' } }}>\r\n        {/* Search Bill */}\r\n        <Paper elevation={1} sx={{ p: 1, mb: 1, borderRadius: 3, px: 2 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1, fontSize: '0.85rem' }}>\r\n            <FormattedMessage id=\"Search Bill\" />\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexDirection: { xs: 'column', sm: 'row' }, gap: 1 }}>\r\n            <Box sx={{ flex: 1 }}>\r\n              <Typography fontWeight=\"bold\" variant=\"body2\"><FormattedMessage id=\"Bill Number\" /></Typography>\r\n              <TextField onChange={(e) => setid(e.target.value)} value={bill.id || ''} type=\"number\" size=\"small\" fullWidth />\r\n            </Box>\r\n            <Box sx={{ flex: 1 }}>\r\n              <Typography fontWeight=\"bold\" variant=\"body2\"><FormattedMessage id=\"Customer Name\" /></Typography>\r\n              <TextField readOnly value={bill?.temp_customer || bill.accounts?.account.name} size=\"small\" fullWidth />\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n\r\n        {/* Customer Info */}\r\n        <Paper elevation={1} sx={{ p: 1, mb: 1, borderRadius: 3, px: 2 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1, fontSize: '0.85rem' }}>\r\n            <FormattedMessage id=\"Customer Info\" />\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n            {[\r\n              { label: \"Date\", value: bill?.dateInsert && date(bill?.dateInsert) },\r\n              { label: \"Total Amount\", value: bill?.total && `${bill?.total} ${bill.money?.name}` },\r\n              { label: \"Paid Amount\", value: bill?.PaidAmount && `${bill?.PaidAmount} ${bill.money?.name}` },\r\n              { label: \"Remain Amount\", value: bill?.Remain && `${bill?.Remain} ${bill.money?.name}` }\r\n            ].map((field, i) => (\r\n              <Box key={i} sx={{ flex: \"1 1 45%\" }}>\r\n                <Typography fontWeight=\"bold\" variant=\"body2\"><FormattedMessage id={field.label} /></Typography>\r\n                <TextField readOnly value={field.value} size=\"small\" fullWidth />\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </Paper>\r\n\r\n              <Paper elevation={1} sx={{ p: 1, mb: 0.5, borderRadius: 3, px: 2 }}>\r\n  <Typography variant=\"subtitle2\" sx={{ mt: 0.5, mb: 1, fontSize: '0.85rem' }}>\r\n    <FormattedMessage id=\"Item information\" />\r\n  </Typography>\r\n\r\n  <Box\r\n    sx={{\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      gap: 1,\r\n      mb: 0.5\r\n    }}\r\n  >\r\n    {/* Item Name */}\r\n    <Box sx={{ flex: '1 1 200px', minWidth: '180px' }}>\r\n      <Typography fontWeight=\"bold\" variant=\"body2\">\r\n        <FormattedMessage id=\"Item Name\" />\r\n      </Typography>\r\n      <ComboBo\r\n        searchQuery={searchQuery1}\r\n        setSearchQuery={setSearchQuery1}\r\n        handleInputChange={handleInputChange1}\r\n        handleSearch={handleSearch1}\r\n        setSelectedOption={algorithm1}\r\n        selectedOption={selectedOption1}\r\n        options={SoldRecords}\r\n        compactMode={true}\r\n      />\r\n    </Box>\r\n\r\n    {/* Quantity */}\r\n    <Box sx={{ flex: '1 1 120px', minWidth: '120px' }}>\r\n      <Typography fontWeight=\"bold\" variant=\"body2\">\r\n        <FormattedMessage id=\"Quantity\" />\r\n      </Typography>\r\n      <NumericFormat\r\n        customInput={TextField}\r\n        onKeyDown={handleKeyDown}\r\n        onValueChange={({ value }) =>\r\n          handleItem({ target: { name: 'qty', value } })\r\n        }\r\n        value={AddItem.qty}\r\n        name=\"qty\"\r\n        size=\"small\"\r\n        fullWidth\r\n        thousandSeparator\r\n        sx={{ '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n      />\r\n    </Box>\r\n\r\n    {/* Purchase Price */}\r\n    <Box sx={{ flex: '1 1 150px', minWidth: '120px' }}>\r\n      <Typography fontWeight=\"bold\" variant=\"body2\">\r\n        <FormattedMessage id=\"Purchase Price\" />\r\n      </Typography>\r\n      <NumericFormat\r\n        customInput={TextField}\r\n        onKeyDown={handleKeyDown}\r\n        onValueChange={({ value }) =>\r\n          handleItem({ target: { name: 'purchase_price', value } })\r\n        }\r\n        value={AddItem.purchase_price}\r\n        name=\"purchase_price\"\r\n        size=\"small\"\r\n        fullWidth\r\n        thousandSeparator\r\n        sx={{ '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n      />\r\n    </Box>\r\n\r\n    {/* Weight (if gold) */}\r\n    {sidebars[0]?.type === 'gold' && (\r\n      <Box sx={{ flex: '1 1 120px', minWidth: '120px' }}>\r\n        <Typography fontWeight=\"bold\" variant=\"body2\">\r\n          <FormattedMessage id=\"weight\" />\r\n        </Typography>\r\n        <NumericFormat\r\n          customInput={TextField}\r\n          onKeyDown={handleKeyDown}\r\n          thousandSeparator={true}\r\n                decimalSeparator=\".\"\r\n        decimalScale={3}\r\n          onValueChange={({ value }) =>\r\n            handleItem({ target: { name: 'weight', value } })\r\n          }\r\n          value={AddItem.weight}\r\n          name=\"weight\"\r\n          size=\"small\"\r\n          fullWidth\r\n          sx={{ '& .MuiInputBase-input': { fontSize: '0.8rem', py: 0.5 } }}\r\n        />\r\n      </Box>\r\n    )}\r\n\r\n    {/* Description */}\r\n    <Box sx={{ flex: '2 1 200px', minWidth: '180px' }}>\r\n      <Typography fontWeight=\"bold\" variant=\"body2\">\r\n        <FormattedMessage id=\"Description\" />\r\n      </Typography>\r\n      <TextField\r\n        name=\"description\"\r\n        multiline\r\n        minRows={1}\r\n        size=\"small\"\r\n        fullWidth\r\n        sx={{ fontSize: '0.8rem' }}\r\n        value={AddItem.description}\r\n        onChange={handleItem}\r\n      />\r\n    </Box>\r\n\r\n    {/* Add Button */}\r\n    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n      <Button\r\n        onClick={AddtoTable}\r\n        variant=\"contained\"\r\n        color=\"success\"\r\n        size=\"small\"\r\n        sx={{\r\n          width: '5rem',\r\n          fontSize: '0.8rem',\r\n          height: '2rem',\r\n          mb: 1,\r\n          mt: { xs: 1, sm: 4 }\r\n        }}\r\n      >\r\n        <Plus size={15} />\r\n      </Button>\r\n    </Box>\r\n  </Box>\r\n</Paper>\r\n      </Box>\r\n      {/* Right Section */}\r\n      <Box sx={{ width: { xs: '100%', md: '33.33%' }, ml: { md: 1 } }}>\r\n        <Box sx={{ maxHeight: 200, overflowX: 'auto', overflowY: 'auto' }}>\r\n          <Typography variant=\"subtitle1\" sx={{ textAlign: 'center', bgcolor: 'info.main', color: 'white', fontSize: '0.85rem' }}>\r\n            <FormattedMessage id=\"Item Sold\" />\r\n          </Typography>\r\n          <Table size=\"small\" sx={{ minWidth: 600 }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell><FormattedMessage id=\"Name\" /></TableCell>\r\n                <TableCell><FormattedMessage id=\"Quantity\" /></TableCell>\r\n                                 {sidebars[0]?.type==='gold' && <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"weight\" /></TableCell>}\r\n                <TableCell><FormattedMessage id=\"Price\" /></TableCell>\r\n                <TableCell><FormattedMessage id=\"Description\" /></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {SoldRecords?.map((row, idx) => (\r\n                <TableRow key={idx}>\r\n                  <TableCell>{row.stock.name}</TableCell>\r\n                  <TableCell>{row.qty}</TableCell>\r\n                                      {sidebars[0]?.type==='gold'&&< TableCell>{row.weight}</TableCell>}\r\n                  <TableCell>{row.purchase_price}</TableCell>\r\n                  <TableCell>{row.description}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n\r\n        {[[\"Total Return Amount\", TotalAmount], [\"Paid Return Amount\", PaidAmount], [\"Remain Return Amount\", update.belance]].map(([label, value], i) => (\r\n          <Box key={i}>\r\n            <Typography fontWeight=\"bold\" variant=\"body2\"><FormattedMessage id={label} /></Typography>\r\n            <TextField\r\n              readOnly={label !== \"Paid Return Amount\" || !Exesting ? true : false}\r\n              onChange={label === \"Paid Return Amount\" ? handlepaid : undefined}\r\n              value={value}\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n\r\n  {/* Footer */}\r\n  <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 1 }}>\r\n    <Box sx={{ width: { xs: '100%', md: '66.66%' }, maxHeight: 300, overflow: 'auto' }}>\r\n      <Typography variant=\"subtitle1\" sx={{ textAlign: 'center', bgcolor: 'info.main', color: 'white', fontSize: '0.85rem' }}>\r\n        <FormattedMessage id=\"Return Item Sold\" />\r\n      </Typography>\r\n      <Table size=\"small\" sx={{ minWidth: 800 }}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell><FormattedMessage id=\"No\" /></TableCell>\r\n            <TableCell><FormattedMessage id=\"Name\" /></TableCell>\r\n            <TableCell><FormattedMessage id=\"Quantity\" /></TableCell>\r\n                             {sidebars[0]?.type==='gold' && <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"weight\" /></TableCell>}\r\n            <TableCell><FormattedMessage id=\"Price\" /></TableCell>\r\n            <TableCell><FormattedMessage id=\"Total\" /></TableCell>\r\n            <TableCell><FormattedMessage id=\"Description\" /></TableCell>\r\n            <TableCell><FormattedMessage id=\"Delete\" /></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {shopingcart?.map((row, idx) => (\r\n            <TableRow key={idx}>\r\n              <TableCell>{row.e_id}</TableCell>\r\n              <TableCell>{row.stock.name}</TableCell>\r\n              <TableCell>{row.qty}</TableCell>\r\n                                  {sidebars[0]?.type==='gold'&&< TableCell>{row.weight}</TableCell>}\r\n              <TableCell>{row.purchase_price}</TableCell>\r\n              <TableCell>{row.purchase_price * row.qty}</TableCell>\r\n              <TableCell>{row.description}</TableCell>\r\n              <TableCell>\r\n                <IconButton size=\"small\" onClick={() => Deleteshopingcart(row)}>\r\n                  <Trash2 size={15} />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Box>\r\n\r\n    <Box sx={{ width: { xs: '100%', md: '33.33%' } }}>\r\n      <Box className=\"date-picker-container\">\r\n        <Datepicker_Customer\r\n          default_value={EndDate}\r\n          handle_date={handle_date}\r\n          lebal={<FormattedMessage id=\"Date\" />}\r\n          setSelectedDay={setSelectedDay}\r\n          selectedDay={selectedDay}\r\n          compactMode={true}\r\n        />\r\n      </Box>\r\n      <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, justifyContent: 'center', mt: 1, gap: 1 }}>\r\n        <Button variant=\"contained\" color=\"error\" size=\"small\" sx={{ width: '120px' }} onClick={close}>\r\n          <FormattedMessage id=\"Cancel\" />\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"success\" size=\"small\" sx={{ width: '120px' }} onClick={() => Sumbit(false)}>\r\n          <FormattedMessage id=\"Save\" />\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"success\" size=\"small\" sx={{ width: '120px' }} onClick={() => Sumbit(true)}>\r\n          <FormattedMessage id=\"Print And Save\" />\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  </Box>\r\n</div>\r\n\r\n    );\r\n}","import axios from \"axios\";\r\nimport { useState,useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport React, { useEffect } from \"react\";\r\nimport Source from \"../../../Source\";\r\nimport AddSell from \"../forms/AddSell\";\r\nimport { showAlert } from \"../../../warrper\";\r\nimport Swal from \"sweetalert2\";\r\nimport moment from \"moment-jalaali\";\r\nimport AddSellReturn from \"./Forms/AddSellReturn\";\r\nimport EditSellReturn from \"./Forms/EditSellReturn\";\r\nimport Trash from \"../../../assets/icon/trash.png\";\r\nimport pencil from \"../../../assets/icon/pencil.png\";\r\nimport EditSell from \"../forms/EditSell\";\r\nimport { getSettings } from \"../../Redux/settingSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport AddPurchaseReturn from \"./Forms/AddPurchaseReturn\";\r\nimport EditPurchaseReturn from \"./Forms/EditPurchaseReturn\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {useIntl } from \"react-intl\";\r\nimport { useShowAlert  } from \"../../../warrper\";\r\n\r\nexport default function PurchaseReturn() {\r\n  const showAlert = useShowAlert(); \r\n  const dispatch = useDispatch();\r\n  const { moneys, errorm, statusm } = useSelector((state) => state.moneys);\r\n  const { belances, errorb, statusb } = useSelector((state) => state.belances);\r\n  const { customers, errorc, statusc } = useSelector(\r\n    (state) => state.customers\r\n  );\r\n  const [item, setitem] = useState([]);\r\n  const [customer, setcustomer] = useState(customers);\r\n  const [belance, setbelance] = useState(belances);\r\n  const [options, setOptions] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [addAccountModal, setAddAccountModal] = useState(false);\r\n  const [AddSellModal, setAddSellModal] = useState(false);\r\n  const [AddBalanceModal, setAddBalanceModal] = useState(false);\r\n  const [EditSellModal, setEditSellModal] = useState(false);\r\n  const [EditSellModalm, setEditSellModalm] = useState(false);\r\n  const [MoneyEdit, setMoneyEdit] = useState([]);\r\n  const [Customer, setCustomer] = useState([]);\r\n  const [shopingcart, setShopingCart] = useState([]);\r\n  const { items, errori, statusi } = useSelector((state) => state.items);\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n  const [id, setid] = useState();\r\n  const [SoldRecords, setSoldRecords] = useState([]);\r\n  const [bill, setbill] = useState({});\r\n  const [money1, setmoney1] = useState();\r\n  const FindBill = (id) => {\r\n    if (!id) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title: \"Please fill the bill number!\",\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    } else {\r\n      axios\r\n        .get(Source.getAddress() + \"/api/purchase/\" + id, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          // console.log(res.data.sells);\r\n          setmoney(res.data.money);\r\n          setbill(res.data.bill);\r\n          setSoldRecords(res.data.purchase);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          setbill([]);\r\n          setSoldRecords([]);\r\n          showAlert({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            title: \"This bill number not found!\",\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n        });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!statuss && settings?.lenght === 0) {\r\n      dispatch(getSettings());\r\n    }\r\n  }, [dispatch,  settings, statuss]);\r\n\r\n  const [setting, setsettings] = useState([]);\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (localStorage.getItem(\"date\") === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n\r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    setPerPage(newPerPage);\r\n    setCurrentPage(page);\r\n  };\r\n  // const [data, setData] = useState([]);\r\n  const [totalRows, setTotalRows] = useState(0); // تعداد کل ردیف‌ها\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1); // صفحه فعلی\r\n  const [perPage, setPerPage] = useState(10); // تعداد آیتم‌ها در هر صفحه\r\n\r\n  // دریافت داده‌ها از سرور\r\n  const fetchData = async (page, pageSize) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        Source.getAddress() + \"/api/purchasereturn\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            page: page,\r\n            perPage: pageSize,\r\n            delete: 0,\r\n            product: \"sell\",\r\n          },\r\n        }\r\n      );\r\n      console.log(response);\r\n      setRecords(response.data.data); // داده‌های صفحه جاری\r\n      setTotalRows(response.data.total);\r\n      // تعداد کل ردیف‌ها\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data\", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // فراخوانی داده‌ها هنگام بارگذاری صفحه یا تغییر صفحه\r\n  useEffect(() => {\r\n    fetchData(currentPage, perPage);\r\n  }, [currentPage, perPage]);\r\n\r\n  // مدیریت تغییر صفحه\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page); // برو به صفحه جدید\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    setAddAccountModal(true);\r\n  };\r\n  const [expandedRows, setExpandedRows] = useState([]);\r\n\r\n  const toggleRowDetails = (rowId) => {\r\n    setExpandedRows((prev) =>\r\n      prev.includes(rowId)\r\n        ? prev.filter((id) => id !== rowId)\r\n        : [...prev, rowId]\r\n    );\r\n  };\r\n  const [TotalAmount, setTotalAmount] = useState(0);\r\n  const [PaidAmount, setPaidAmount] = useState(0);\r\n\r\n  const deleteSell = async (row) => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success\",\r\n        cancelButton: \"btn btn-danger\",\r\n      },\r\n      buttonsStyling: false,\r\n    });\r\n\r\n    const result = await swalWithBootstrapButtons.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, cancel!\",\r\n      reverseButtons: true,\r\n    });\r\n\r\n    if (result.isConfirmed) {\r\n      const update = {\r\n        money: row.money.id,\r\n        bill: row.bill.id,\r\n        sell: row.sells[0]?.id || row.sells[0]?.e_id, // Ensure you are passing the correct 'sell' id\r\n      };\r\n\r\n      try {\r\n        const res = await axios.put(\r\n          `${Source.getAddress()}/api/sell/${row.bill.id}`,\r\n          update,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"access\")}`, // Add the access token here\r\n            },\r\n            params: {\r\n              type: \"delete\", // If you need additional parameters, you can add them here\r\n              // account: row.account // Uncomment and use if necessary\r\n            },\r\n          }\r\n        );\r\n\r\n        showAlert({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Item record successfully deleted!\",\r\n          showConfirmButton: false,\r\n          timer: 600,\r\n        });\r\n\r\n        // Remove the deleted item from the records\r\n        setRecords((prevRecords) =>\r\n          prevRecords.filter((record) => record.bill.id !== row.bill.id)\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n        showAlert({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          title: \"Item record not deleted\",\r\n          showConfirmButton: false,\r\n          timer: 600,\r\n        });\r\n      }\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      showAlert({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        text: \"Your item record is safe :)\",\r\n        showConfirmButton: false,\r\n        timer: 600,\r\n      });\r\n    }\r\n  };\r\n  const [returnbill, setreturnbill] = useState();\r\n        const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\r\n  const PDcolumn = [\r\n    {\r\n      name: \"Id\",\r\n      selector: (row) => row.bill.id,\r\n      sortable: true,\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"1px\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Name\",\r\n      selector: (row) =>\r\n        row.bill.accounts?.account\r\n          ? row.bill.accounts.account.name\r\n          : row.bill.temp_customer,\r\n      sortable: true,\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"1px\",\r\n      },\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"200px\", maxWidth: \"240px\", width: \"240px\" }}\r\n        >\r\n          Date Created\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.bill.dateInsert),\r\n    },\r\n    {\r\n      name: \"Currency\",\r\n      selector: (row) => row.bill?.money?.name,\r\n      sortable: true,\r\n    },\r\n    { name: \"Total Amount\", selector: (row) => row.bill.total, sortable: true },\r\n    {\r\n      name: \"Paid Amount\",\r\n      selector: (row) => row.bill.PaidAmount,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Rmain Amount\",\r\n      selector: (row) => row.bill.Remain,\r\n      sortable: true,\r\n    },\r\n    // { name: \"Add By\", selector: (row) => row.bill.user.name, sortable: true },\r\n\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{\r\n            textAlign: \"center\",\r\n            backgroundColor: \"tranceparent\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          Show\r\n        </strong>\r\n      ),\r\n      selector: (row) => (\r\n        <button\r\n          onClick={(e) => {\r\n            // console.log(row);\r\n            setShopingCart(row.sells);\r\n            setTotalAmount(row.bill.total);\r\n            setPaidAmount(row.bill.PaidAmount);\r\n            setreturnbill(row.bill);\r\n            FindBill(row.bill.bill_purchase);\r\n            setEditSellModalm(true);\r\n          }}\r\n          style={{\r\n            border: \"none\",\r\n            backgroundColor: \"transparent\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <img\r\n            height={\"15%\"}\r\n            width={\"15%\"}\r\n            src={pencil}\r\n            style={{ backgroundColor: \"tranceparent\" }}\r\n          />\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n  const columns = useMemo(() => {\r\n    let selectedColumns;\r\n  \r\n    if (\r\n      localStorage.getItem(\"language\") === \"pa\" ||\r\n      localStorage.getItem(\"language\") === \"da\"\r\n    ) {\r\n      selectedColumns = [...PDcolumn]; // معکوس کردن ستون‌ها\r\n    }else{\r\n      selectedColumns=PDcolumn;\r\n    }\r\n    return selectedColumns;\r\n  }, [isDesktop]);\r\n  const [money, setmoney] = useState([]);\r\n  const getcustomer = () => {};\r\n  const ExpandedComponent = ({ data }) => (\r\n    <div className=\"p-3\">\r\n      <h5>{data.name}</h5>\r\n      <p>Status: {data.status}</p>\r\n      <p>Registered: {data.registered}</p>\r\n      <button className=\"btn btn-info btn-sm\">Edit</button>\r\n      <button className=\"btn btn-danger btn-sm ms-2\">Delete</button>\r\n    </div>\r\n  );\r\n  const [Exesting, setExesting] = useState(false);\r\n  const { formatMessage } = useIntl();\r\n  const localization = {\r\n    pagination: {\r\n        \r\n        rowsPerPage:<FormattedMessage id=\"AddrowsPerPage\"/> , // مثلا: \"تعداد ردیف‌ها\"\r\n      previous: <FormattedMessage id=\"previous\"/>, // مثلا: \"قبلی\"\r\n      next: <FormattedMessage id=\"next\"/>, // مثلا: \"بعدی\"\r\n      page: <FormattedMessage id=\"page\"/>, // مثلا: \"صفحه\"\r\n    },\r\n    // شما می‌توانید تنظیمات بیشتر برای متون مورد نظر اضافه کنید.\r\n  };\r\n  // dispatch(getCustomers());\r\n  return (\r\n    <div className={`w-100 ${\"iransans\"}`}>\r\n      <div className=\"m-auto mt-5 m-5\" style={{ height: \"100%\", width: \"99%\" }}>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-info mb-1 p-1\"\r\n          style={{ width: \"100px\" }}\r\n          onClick={() => {\r\n            setAddSellModal(true);\r\n            getcustomer();\r\n          }}\r\n        >\r\n      <FormattedMessage id=\"Add\"/>\r\n        </button>\r\n        <div\r\n            dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n          className=\"bg-light d-flex justify-content-lg-betweend-flex flex-column flex-lg-row justify-content-lg-between align-items-start align-items-lg-center\"\r\n          style={{ borderTop: \"5px solid #4a5cf2\" }}\r\n        >\r\n          {/* <div className=\"d-flex w-100 h-100 m-auto justify-content-between\"> */}\r\n            <h2 className=\"m-2 fw-bold mb-4\"><FormattedMessage id=\"Purchase Return\"/></h2>\r\n          {/* </div> */}\r\n          <input\r\n            className=\"form-control m-2 mb-4\"\r\n            style={{ width: \"100%\", maxWidth: \"200px\" }}\r\n            type=\"search\"\r\n            placeholder={formatMessage({ id: \"Search\" })}\r\n            aria-label=\"Search\"\r\n          />\r\n        </div>\r\n        <DataTable\r\n          localization={localization} // ارسال ترجمه‌ها      \r\n          columns={columns}\r\n          data={records}\r\n          progressPending={loading}\r\n          striped\r\n          responsive\r\n          highlightOnHover\r\n          pagination\r\n          paginationServer // فعال‌سازی صفحه‌بندی سرور ساید\r\n          paginationTotalRows={totalRows} // تعداد کل ردیف‌ها\r\n          onChangePage={handlePageChange} // تغییر صفحه\r\n          onChangeRowsPerPage={handlePerRowsChange} // تغییر تعداد ردیف‌ها در صفحه\r\n          customStyles={{\r\n            headCells: {\r\n              style: {\r\n                fontWeight: \"bold\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <AddPurchaseReturn\r\n          options1={item}\r\n          setOptions1={setitem}\r\n          customer={customer}\r\n          setcustomer={setcustomer}\r\n          settings={setting}\r\n          setsettings={setsettings}\r\n          records={records}\r\n          setRecords={setRecords}\r\n          addAccountModal={addAccountModal}\r\n          setAddAccountModal={setAddAccountModal}\r\n          moneys={money}\r\n          AddSellModal={AddSellModal}\r\n          close={() => setAddSellModal(false)}\r\n          setAddBalanceModal={setAddBalanceModal}\r\n        />\r\n        <EditPurchaseReturn\r\n          PaidAmount={PaidAmount}\r\n          setPaidAmount={setPaidAmount}\r\n          TotalAmount={TotalAmount}\r\n          setTotalAmount={setTotalAmount}\r\n          returnbill={returnbill}\r\n          setreturnbill={setreturnbill}\r\n          SoldRecords={SoldRecords}\r\n          setSoldRecords={setSoldRecords}\r\n          bill={bill}\r\n          setbill={setbill}\r\n          money={money1}\r\n          setmoney={setmoney1}\r\n          Exesting={Exesting}\r\n          setExesting={setExesting}\r\n          records={records}\r\n          setRecords={setRecords}\r\n          settings={setting}\r\n          setsettings={setsettings}\r\n          AddSellModal={EditSellModalm}\r\n          close={(e) => setEditSellModalm(false)}\r\n          // money={MoneyEdit}\r\n          moneys={money}\r\n          options1={item}\r\n          setOptions1={setitem}\r\n          customers={customer}\r\n          Customer={Customer}\r\n          setCustomer={setCustomer}\r\n          shopingcart={shopingcart}\r\n          setshopingcart={setShopingCart}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["AddPurchaseReturn","_ref","_bill$accounts3","_bill$money","_bill$money2","_bill$money3","_sidebars$","AddSellModal","close","records","setRecords","moneys","belance","setbelance","setAddBalanceModal","options1","setOptions1","showAlert","useShowAlert","dispatch","useDispatch","settings","errors","statuss","useSelector","state","sidebars","useEffect","lenght","getSettings","items","errori","selectedDay","setSelectedDay","useState","moment","selectedOption","setSelectedOption","selectedOption1","setSelectedOption1","EndDate","setEndDate","account","setaccount","update","setupdate","id","selectedOptionAccount","setSelectedOptionAccount","ExestQty","setExestQty","AddItem","setAddItem","purchase","stocks_id","qty","weight","dateInsert","Date","toISOString","rate","user_id","localStorage","getItem","purchase_price","description","sell_price","expiry_date","accounts_id","money","stock","name","e_id","shopingcart","setshopingcart","TotalAmount","setTotalAmount","primari","setprimari","Sumbit","flag","_bill$accounts","BillId","length","position","icon","title","_jsx","FormattedMessage","showConfirmButton","timer","arr","forEach","key","push","bill_id","add","axios","post","Source","getAddress","headers","Authorization","concat","params","bill_prev","Exesting","bill","money_id","accounts","account_id","PaidAmount","CustomerName","temp_customer","DateInsert","then","res","_bill$accounts2","doc","jsPDF","setFontSize","setFont","setTextColor","text","company_name","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","date","formattedDate","getFullYear","String","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes","aa","formattedHours","formattedMinutes","format","fromdata","setDrawColor","setLineWidth","line","company_pic","fileName","pop","addImage","autoTable","startY","head","body","row","selectedOptionmoney","theme","headStyles","fillColor","textColor","fontSize","fontStyle","bodyStyles","alternateRowStyles","finalY","lastAutoTable","address","phone","email","pdfURL","output","iframe","document","createElement","style","display","src","appendChild","contentWindow","print","generateInvoicePDF","data","type","measuring","setSearchQuery","setSearchQuery1","setSelectedOptionmoney","setPaidAmount","catch","err","handleItem","e","_objectSpread","target","value","options","setOptions","handleSearch1","async","searchQuery","searchQuery1","buttonRef","useRef","handleKeyDown","preventDefault","current","click","prevState","setExesting","setid","SoldRecords","setSoldRecords","setbill","setmoney","formatMessage","useIntl","_jsxs","dir","className","width","maxWidth","height","backgroundColor","padding","children","Box","sx","justifyContent","alignItems","mt","Typography","variant","textAlign","borderRadius","p","color","bgcolor","IconButton","size","onClick","X","flexDirection","xs","md","Paper","elevation","mb","px","sm","mr","fontWeight","TextField","onChange","fullWidth","py","Button","FindBill","get","mx","ml","readOnly","d","total","Remain","flexWrap","gap","flex","minWidth","ComboBo","handleInputChange","newValue","handleSearch","compactMode","NumericFormat","customInput","onKeyDown","onValueChange","_ref2","thousandSeparator","_ref3","decimalSeparator","decimalScale","_ref4","multiline","minRows","AddtoTable","parseInt","parseFloat","sellPrice","addto","prevRecords","updatedQty","prev","Plus","m","maxHeight","overflow","Table","TableHead","TableRow","TableCell","TableBody","idx","Deleteshopingcart","filter","pre","Trash2","Datepicker_Customer","default_value","handle_date","jalaliDate","year","month","day","now","jalaali","t","isoString","lebal","EditSellReturn","_sidebars$2","_sidebars$4","returnbill","setreturnbill","_method","handlepaid","overflowY","label","field","i","newItem","nextId","prevItems","prevAmount","prevTotal","overflowX","_sidebars$3","_ref5","undefined","_sidebars$5","PurchaseReturn","errorm","statusm","belances","errorb","statusb","customers","errorc","statusc","item","setitem","customer","setcustomer","addAccountModal","setAddAccountModal","setAddSellModal","AddBalanceModal","EditSellModal","setEditSellModal","EditSellModalm","setEditSellModalm","MoneyEdit","setMoneyEdit","Customer","setCustomer","setShopingCart","statusi","money1","setmoney1","setting","setsettings","totalRows","setTotalRows","loading","setLoading","currentPage","setCurrentPage","perPage","setPerPage","page","pageSize","response","delete","product","error","fetchData","expandedRows","setExpandedRows","isDesktop","setIsDesktop","window","innerWidth","PDcolumn","selector","sortable","_row$bill$accounts","_row$bill","_row$bill$money","sells","bill_purchase","border","pencil","columns","useMemo","selectedColumns","localization","pagination","rowsPerPage","previous","next","borderTop","placeholder","DataTable","progressPending","striped","responsive","highlightOnHover","paginationServer","paginationTotalRows","onChangePage","onChangeRowsPerPage","newPerPage","customStyles","headCells","EditPurchaseReturn"],"sourceRoot":""}