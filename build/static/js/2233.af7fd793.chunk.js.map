{"version":3,"file":"static/js/2233.af7fd793.chunk.js","mappings":"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","sources":["pages/forms/Combo_Customer.js","pages/forms/Datepicker.js","pages/Transformations/ComboBoxT.js","../node_modules/shamsi/index.js","pages/Edit_withdraw.js","pages/Withdraw.js","pages/forms/Edit_account.js","pages/forms/ListBox.js","../node_modules/shamsi-date-converter/lib/index.js","pages/Transformations/ComboBoxDeposite.js","pages/forms/ComboBox.js"],"sourcesContent":["import React from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nconst Combo_Customer = ({ \r\n  isEditable = false, \r\n  name, \r\n  type, \r\n  options, \r\n  Onsearch, \r\n  selectedOption, \r\n  setAddAccountModal, \r\n  setSelectedOption, \r\n  searchQuery, \r\n  handleInputChange \r\n}) => {\r\n  const handleChange = (sselectedOption) => {\r\n    setSelectedOption(sselectedOption);\r\n    // console.log('hi');\r\n    // Onsearch(sselectedOption);\r\n  };\r\n// console.log(searchQuery);\r\n  const CustomMenuList = (props) => (\r\n    <components.MenuList {...props}>\r\n      {props.children}\r\n      {type && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            padding: \"10px\",\r\n            borderTop: \"1px solid #eaeaea\",\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#f9f9f9\",\r\n          }}\r\n          onClick={() => {\r\n            setAddAccountModal(searchQuery)\r\n            // setSelectedOption({id:0, name:searchQuery});\r\n          }}\r\n        >\r\n          <strong>{name}</strong>\r\n        </div>\r\n      )}\r\n    </components.MenuList>\r\n  );\r\n\r\n  const customStyles = {\r\n    menuPortal: (base) => ({ ...base, zIndex: 9999 }),\r\n  };\r\nconst { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <div className=\"w-40\">\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        inputValue={searchQuery}\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={options}\r\n        onInputChange={handleInputChange}\r\n        getOptionLabel={(option) => (\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <span>{`${option.name} `}</span>\r\n          </div>\r\n        )}\r\n        getOptionValue={(option) => `${option.name}`}\r\n        // placeholder=\"Search...\"\r\n        placeholder={formatMessage({ id: \"Search...\" })}\r\n        isClearable\r\n        components={{ MenuList: CustomMenuList }}\r\n        isSearchable\r\n        isDisabled={isEditable}\r\n        menuPortalTarget={document.body} // انتقال منو به `body`\r\n        styles={customStyles} // تنظیم `z-index`\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Combo_Customer;","import React, { useEffect, useState } from 'react';\r\nimport \"jalaali-react-date-picker/lib/styles/index.css\";\r\nimport { InputDatePicker } from \"jalaali-react-date-picker\";\r\nimport moment, { months } from 'moment-timezone';\r\n\r\nexport default function Datepicker({ handle_date, settings,default_value ,lebal,onKeyDown}) {\r\n  const [selectedDay, setSelectedDay] = useState();\r\n  const handleDateChange = (date) => {\r\n    setSelectedDay(date);\r\n        if(date!=null){\r\n        const handl={year:date._a[0],month:date._a[1]+1,day:date._a[2]}\r\n      handle_date(handl);\r\n        }\r\n    };\r\n  return (\r\n    <div className=\"col-3 m-2 mt-3\"\r\n    >\r\n      <label htmlFor=\"\" className='p-0 m-0'>{lebal}</label>\r\n      <InputDatePicker\r\n      onKeyDown={onKeyDown}\r\n        value={selectedDay}\r\n        onChange={handleDateChange}\r\n        inputPlaceholder={settings[0].date === 'Persian' ? 'تاریخ را وارد کنید' : 'Enter the date'}\r\n        locale={settings[0].date === 'Persian' ? 'fa' : 'en'}\r\n        colorPrimary=\"#0fbcf9\"\r\n        maximumDate={{ year: 9999, month: 12, day: 31 }}\r\n        minimumDate={{ year: 1, month: 1, day: 1 }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\n\r\nconst Combo_Customer = ({ \r\n  isEditable = false, \r\n  options, \r\n  Onsearch, \r\n  selectedOption, \r\n  setSelectedOption, \r\n  searchQuery, \r\n  handleInputChange \r\n}) => {\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n    Onsearch(selectedOption);\r\n  };\r\n\r\n  const { formatMessage } = useIntl();\r\n\r\n    const customStyles = {\r\n      menuPortal: (base) => ({ ...base, zIndex: 9999,  ...( {\r\n        // fontSize: '0.1rem!important',\r\n      }) }),\r\n      // control: (provided, state) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem!important',\r\n      //   padding: '0',\r\n      //   minHeight: 'calc(0.5em + 0.5rem + 2px)',\r\n      //   borderRadius: '2px',\r\n      //   borderColor: state.isFocused ? '#2684FF' : '#ced4da',\r\n      //   boxShadow: state.isFocused ? '0 0 0 1px #2684FF' : 'none',\r\n      //   '&:hover': {\r\n      //     borderColor: state.isFocused ? '#2684FF' : '#adb5bd'\r\n      //   }\r\n      // }),\r\n      // input: (provided) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem',\r\n      //   margin: '0!important',\r\n      //   padding: '0!important',\r\n      // }),\r\n      // option: (provided, state) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem!important',\r\n      //   padding: '0',\r\n      //   backgroundColor: state.isSelected ? '#2684FF' : state.isFocused ? '#f8f9fa' : 'white',\r\n      //   color: state.isSelected ? 'white' : '#212529',\r\n      //   '&:active': {\r\n      //     backgroundColor: '#dee2e6'\r\n      //   }\r\n      // }),\r\n      // menu: (provided) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem',\r\n      //   zIndex: 10000000,\r\n      //   marginTop: '0.25rem'\r\n      // }),\r\n      // singleValue: (provided) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem'\r\n      // }),\r\n      // placeholder: (provided) => ({\r\n      //   ...provided,\r\n      //   fontSize: '0.6rem',\r\n      //   color: '#6c757d'\r\n      // }),\r\n      // dropdownIndicator: (provided) => ({\r\n      //   ...provided,\r\n      //   padding: '0'\r\n      // }),\r\n      // clearIndicator: (provided) => ({\r\n      //   ...provided,\r\n      //   padding: '0rem'\r\n      // }),\r\n      // valueContainer: (provided) => ({\r\n      //   ...provided,\r\n      //   padding: '0'\r\n      // })\r\n    };\r\n\r\n  return (\r\n    <div className=\"w-100\">\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        inputValue={searchQuery}\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={options}\r\n        onInputChange={handleInputChange}\r\n        getOptionLabel={(option) => (\r\n          <div style={{ display: 'flex', alignItems: 'center' }} className='afgFont'>\r\n            <span>{`${option.account_name} ${option.moneyType}`}</span>\r\n          </div>\r\n        )}\r\n        getOptionValue={(option) => `${option.account_name} ${option.moneyType}`}\r\n        placeholder={formatMessage({ id: \"Search...\" })}\r\n        isClearable\r\n        isSearchable\r\n        isDisabled={isEditable}\r\n        styles={customStyles}\r\n        menuPortalTarget={document.body}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Combo_Customer;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jalaliToGregorian = exports.gregorianToJalali = void 0;\nfunction gregorianToJalali(gy, gm, gd) {\n  var gdm, jy, jm, jd, gy2, days;\n  gdm = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n  gy2 = gm > 2 ? gy + 1 : gy;\n  days =\n    355666 +\n    365 * gy +\n    ~~((gy2 + 3) / 4) -\n    ~~((gy2 + 99) / 100) +\n    ~~((gy2 + 399) / 400) +\n    gd +\n    gdm[gm - 1];\n  jy = -1595 + 33 * ~~(days / 12053);\n  days %= 12053;\n  jy += 4 * ~~(days / 1461);\n  days %= 1461;\n  if (days > 365) {\n    jy += ~~((days - 1) / 365);\n    days = (days - 1) % 365;\n  }\n  if (days < 186) {\n    jm = 1 + ~~(days / 31);\n    jd = 1 + (days % 31);\n  } else {\n    jm = 7 + ~~((days - 186) / 30);\n    jd = 1 + ((days - 186) % 30);\n  }\n  return [jy, jm, jd];\n}\nexports.gregorianToJalali = gregorianToJalali;\nfunction jalaliToGregorian(jy, jm, jd) {\n  var salA, gy, gm, gd, days;\n  jy += 1595;\n  days =\n    -355668 +\n    365 * jy +\n    ~~(jy / 33) * 8 +\n    ~~(((jy % 33) + 3) / 4) +\n    jd +\n    (jm < 7 ? (jm - 1) * 31 : (jm - 7) * 30 + 186);\n  gy = 400 * ~~(days / 146097);\n  days %= 146097;\n  if (days > 36524) {\n    gy += 100 * ~~(--days / 36524);\n    days %= 36524;\n    if (days >= 365) {\n      days++;\n    }\n  }\n  gy += 4 * ~~(days / 1461);\n  days %= 1461;\n  if (days > 365) {\n    gy += ~~((days - 1) / 365);\n    days = (days - 1) % 365;\n  }\n  gd = days + 1;\n  salA = [\n    0,\n    31,\n    (gy % 4 === 0 && gy % 100 !== 0) || gy % 400 === 0 ? 29 : 28,\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31,\n  ];\n  for (gm = 0; gm < 13 && gd > salA[parseInt(gm, 10)]; gm++) {\n    gd -= salA[parseInt(gm, 10)];\n  }\n  return [gy, gm, gd];\n}\nexports.jalaliToGregorian = jalaliToGregorian;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Source from \"../Source\";\r\n// import Swal from \"sweetalert2\";\r\nimport { showAlert } from \"../warrper\";\r\nimport Profile from \"../assets/icon/profile.png\";\r\nimport jalaali from \"jalaali-js\";\r\nimport IdNational from \"../assets/icon/national_id.png\";\r\nimport ComboBox from \"./forms/ComboBox\";\r\nimport Select from \"react-select\";\r\nimport Datepicker_Customer from \"./forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport Combo_Customer from \"./forms/Combo_Customer\";\r\nimport Edit_account from \"./forms/Edit_account\";\r\nimport '../pages/edite.css';\r\nimport Belance from \"./forms/Belance\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getBelances, updateBelanceInCache } from \"./Redux/belanceSlice\";\r\nimport { getMoneys, updateMoneyInCache } from \"./Redux/moneysSlice\";\r\nimport Updatemoney from \"./forms/Updatemoney\";\r\nimport { updateReportInCache } from \"./Redux/reportSlice\";\r\nimport ComboBoxT from './Transformations/ComboBoxT';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useShowAlert  } from \"../warrper\";\r\nexport default function Edit_withdraw({\r\n  MainDW,\r\n      setMainDW,\r\n  selectedOption,\r\n  setSelectedOption,\r\n  Edit_Deposit,\r\n  closeEdit,\r\n  open,\r\n  settings,\r\n  EndDateE,\r\n  account,\r\n  inputRef,\r\n  setEditDeposit,\r\n  selectedDay,\r\n  setSelectedDay,\r\n  Diversity,\r\n  setDiversity,\r\n  belance,\r\n  setbelance,\r\n  records,\r\n  setRecords,\r\n}) {\r\n  const showAlert = useShowAlert(); \r\n  const dispatch=useDispatch();\r\n  const [moneyid,setmoneyid]=useState();\r\n  const Onsearch = (row) => {\r\n    if (row) {\r\n      setmoneyid(row.moneyId);\r\n      setmoneyname(row.moneyType);\r\n      setusername(row.account_name);\r\n      setmoneytype(row.moneyId);\r\n      setidbelance(row.id);\r\n      setselectedBelance((prevState) => ({\r\n        ...prevState,\r\n        id: row.id,\r\n        moneyId: row.moneyId,\r\n        user: row.user,\r\n        moneyType: row.moneyType,\r\n        account: row.account,\r\n        account_name: row.account_name,\r\n        type: row.type,\r\n        belance: row.belance, // Assuming 'belance' is correct, it seems like a typo\r\n        date_created: row.date_created,\r\n      }));\r\n      let belanceName = row.account_name + \" \" + row.moneyType;\r\n      // console.log(row);\r\n      setEditDeposit({\r\n        ...Edit_Deposit,\r\n        account: row.id,\r\n      });\r\n    }\r\n  };\r\n  const [selectedBelance, setselectedBelance] = useState({\r\n    id: 0,\r\n    account_name: \"\",\r\n    moneyType: \"\",\r\n    account: 0,\r\n    moneyId: 0,\r\n    user: 0,\r\n    type: 0,\r\n    belance: 0,\r\n    date_created: \"\",\r\n  });\r\n  const [idbelance, setidbelance] = useState(0);\r\n  const [moneytype, setmoneytype] = useState(0);\r\n  const [username, setusername] = useState(\"\");\r\n  const [moneyname, setmoneyname] = useState(\"\");\r\n\r\n  const Submit_Edit = async () => {\r\n      if (account === Edit_Deposit.account) {\r\n        Edit_Deposit._method='put';\r\n         axios.post(\r\n          `${Source.getAddress()}/api/report/${Edit_Deposit.id}/`,\r\n          Edit_Deposit, { headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n            // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n          }}\r\n        ).then((res)=>{\r\n          setRecords(prevRecords =>\r\n            prevRecords.map(record =>\r\n              record.id === res.data.report.id ? { ...record, ...res.data.report } : record\r\n            )\r\n          );\r\n          // dispatch(updateBelanceInCache(res.data.belance));\r\n          // dispatch(updateReportInCache(res.data.report_belance));\r\n          // dispatch(updateMoneyInCache(res.data.moneys));\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"success\",\r\n        // title: \"Updated Successfully!\",\r\n             title: <FormattedMessage id=\"Updated Successfully!\"/>,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n\r\n        }).catch((err)=>{\r\n          console.log(err);\r\n          showAlert({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            // title: \"Not updated successfully!\",\r\n                     title: <FormattedMessage id=\"Not Updated Successfully!\"/>,\r\n            \r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n        })\r\n        \r\n        \r\n        // const belacne_delete_primary_response = await axios.get(\r\n        //   `${Source.getAddress()}/api/belance/${Edit_Deposit.account}/`, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // const belacne_delete_primary = belacne_delete_primary_response.data;\r\n  \r\n        // let belance_delete = {\r\n        //   account: belacne_delete_primary.account,\r\n        //   type: belacne_delete_primary.type,\r\n        //   belance: String(belacne_delete_primary.belance - TotalDeversity),\r\n        // };\r\n  \r\n        // const money_delete_primary_response = await axios.get(\r\n        //   `${Source.getAddress()}/api/money/${belacne_delete_primary.moneyId}/`, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // const money_delete_primary = money_delete_primary_response.data;\r\n        // let cash_primary = parseInt(money_delete_primary.cach);\r\n  \r\n        // let money_delete = {\r\n        //   cach: cash_primary - TotalDeversity,\r\n        // };\r\n  \r\n        // await axios.put(\r\n        //   `${Source.getAddress()}/api/belance/${belacne_delete_primary.id}/`,\r\n        //   belance_delete, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // belacne_delete_primary.belance -= TotalDeversity;\r\n        // setbelance(prevBelance =>\r\n        //   prevBelance.map(a =>\r\n        //     a.id === belacne_delete_primary.id ? belacne_delete_primary : a\r\n        //   )\r\n        // );\r\n  \r\n        // await axios.put(\r\n        //   `${Source.getAddress()}/api/money/${money_delete_primary.id}/`,\r\n        //   money_delete, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // money_delete_primary.cach -= TotalDeversity;\r\n        // setCash(prevCash =>\r\n        //   prevCash.map(a =>\r\n        //     a.id === money_delete_primary.id ? money_delete_primary : a\r\n        //   )\r\n        // );\r\n  \r\n      } else {\r\n        // Edit_Deposit['MainWDW']=MainDW;\r\n        // console.log(Edit_Deposit);\r\n        axios.put(\r\n          `${Source.getAddress()}/api/report/${Edit_Deposit.id}/`,\r\n          Edit_Deposit, {\r\n            params:{\r\n              type:'change',\r\n            },\r\n            headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n            // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n          }}\r\n        ).then((res)=>{\r\n          setRecords(prevRecords =>\r\n            prevRecords.map(record =>\r\n              record.id === res.data.report.id ? { ...record, ...res.data.report } : record\r\n            )\r\n          );\r\n          // dispatch(updateBelanceInCache(res.data.belance));\r\n          // dispatch(updateBelanceInCache(res.data.secondbelance));\r\n          // dispatch(updateReportInCache(res.data.secondreport_belance));\r\n          // dispatch(updateReportInCache(res.data.report_belance));\r\n          // dispatch(updateMoneyInCache(res.data.moneys));\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"success\",\r\n        // title: \"Updated Successfully!\",\r\n             title: <FormattedMessage id=\"Updated Successfully!\"/>,\r\n        \r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n        }).catch((err)=>{\r\n          console.log(err);\r\n          showAlert({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            // title: \"Not updated successfully!\",\r\n                     title: <FormattedMessage id=\"Not Updated Successfully!\"/>,\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n        })\r\n\r\n\r\n\r\n\r\n        // const belacne_delete_primary_response = await axios.get(\r\n        //   `${Source.getAddress()}/api/belance/${account}/`, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // const belacne_delete_primary = belacne_delete_primary_response.data;\r\n  \r\n        // let belance_delete = {\r\n        //   belance: String(belacne_delete_primary.belance + parseInt(Diversity)),\r\n        // };\r\n  \r\n        // const money_delete_primary_response = await axios.get(\r\n        //   `${Source.getAddress()}/api/money/${belacne_delete_primary.moneyId}/`, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // const money_delete_primary = money_delete_primary_response.data;\r\n        // let cash_primary = parseInt(money_delete_primary.cach);\r\n  \r\n        // let money_delete = {\r\n        //   cach: cash_primary + parseInt(Diversity),\r\n        // };\r\n  \r\n        // await axios.put(\r\n        //   `${Source.getAddress()}/api/belance/${belacne_delete_primary.id}/`,\r\n        //   belance_delete, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // belacne_delete_primary.belance += parseInt(Diversity);\r\n        // setbelance(prevBelance =>\r\n        //   prevBelance.map(a =>\r\n        //     a.id === belacne_delete_primary.id ? belacne_delete_primary : a\r\n        //   )\r\n        // );\r\n  \r\n        // await axios.put(\r\n        //   `${Source.getAddress()}/api/money/${money_delete_primary.id}/`,\r\n        //   money_delete, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // money_delete_primary.cach += parseInt(Diversity);\r\n        // setCash(prevCash =>\r\n        //   prevCash.map(a =>\r\n        //     a.id === money_delete_primary.id ? money_delete_primary : a\r\n        //   )\r\n        // );\r\n  \r\n        // const belacne_delete_primary_response1 = await axios.get(\r\n        //   `${Source.getAddress()}/api/belance/${Edit_Deposit.account}/`, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // const belacne_delete_primary1 = belacne_delete_primary_response1.data;\r\n  \r\n        // let belance_delete1 = {\r\n        //   belance:String(belacne_delete_primary1.belance - parseInt(Edit_Deposit.amount)),\r\n        // };\r\n  \r\n        // const money_delete_primary_response1 = await axios.get(\r\n        //   `${Source.getAddress()}/api/money/${belacne_delete_primary1.moneyId}/`, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // const money_delete_primary1 = money_delete_primary_response1.data;\r\n        // let cash_primary1 = parseInt(money_delete_primary1.cach);\r\n  \r\n        // let money_delete1 = {\r\n        //   cach: cash_primary1 - parseInt(Edit_Deposit.amount),\r\n        // };\r\n  \r\n        // await axios.put(\r\n        //   `${Source.getAddress()}/api/belance/${belacne_delete_primary1.id}/`,\r\n        //   belance_delete1, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // belacne_delete_primary1.belance -= parseInt(Edit_Deposit.amount);\r\n        // setbelance(prevBelance =>\r\n        //   prevBelance.map(a =>\r\n        //     a.id === belacne_delete_primary1.id ? belacne_delete_primary1 : a\r\n        //   )\r\n        // );\r\n  \r\n        // await axios.put(\r\n        //   `${Source.getAddress()}/api/money/${money_delete_primary1.id}/`,\r\n        //   money_delete1, { headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   }}\r\n        // );\r\n        // money_delete_primary1.cach -= parseInt(Edit_Deposit.amount);\r\n        // setCash(prevCash =>\r\n        //   prevCash.map(a =>\r\n        //     a.id === money_delete_primary1.id ? money_delete_primary1 : a\r\n        //   )\r\n        // );\r\n  \r\n        // Edit_Deposit.customer = username;\r\n        // Edit_Deposit.moneyType = moneyname;\r\n        // Edit_Deposit.moneyId = moneyid;\r\n        // Edit_Deposit.account = idbelance;\r\n        \r\n      }\r\n      \r\n      \r\n    // } catch (err) {\r\n      // showAlert({\r\n      //   position: \"top-end\",\r\n      //   icon: \"error\",\r\n      //   title: \"Not updated successfully!\",\r\n      //   showConfirmButton: false,\r\n      //   timer: 1000,\r\n      // });\r\n    // }\r\n    closeEdit();\r\n  };\r\n  \r\n\r\n  const handle_date = (jalaliDate) => {\r\n    setDiversity(0);\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setEditDeposit({\r\n        ...Edit_Deposit,\r\n        date: isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n\r\n  const handleAll = (e) => {\r\n    if (e.target.name === \"amount\") {\r\n      setEditDeposit((prev)=>({\r\n        ...prev,\r\n        [e.target.name]: e.target.value,\r\n      }));\r\n    } else {\r\n      setEditDeposit({\r\n        ...Edit_Deposit,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Check if the Enter key was pressed\r\n      e.preventDefault(); // Prevent default action if needed\r\n      if (buttonRef.current) {\r\n        buttonRef.current.click(); // Programmatically click the button\r\n      }\r\n    }\r\n  };\r\n\r\n  const buttonRef = useRef(null);\r\n\r\n\r\n  const [add, setadd] = useState({\r\n    id: 0,\r\n    account: 0,\r\n    type: 0,\r\n    belance: 0,\r\n    date_created: \"\",\r\n    moneyType: \"\",\r\n    account_name: \"\",\r\n    moneyId: 0,\r\n    user: 0,\r\n    user_name: \"\",\r\n    delete: false,\r\n  });\r\n  const [bbelance, setbbelance] = useState({\r\n    account: null,\r\n    type: null,\r\n    belance: 0,\r\n    date_created: \"\",\r\n    user: null,\r\n    delete: false,\r\n  });\r\n  const [smoney, setsmeony] = useState();\r\n  const [nmoney, setnmoney] = useState();\r\n\r\n  const handle = (e) => {\r\n    const date = new Date();\r\n    const isoString = date.toISOString();\r\n\r\n    setnmoney(e);\r\n    if (e) {\r\n      setbbelance({\r\n        ...bbelance,\r\n        user: localStorage.getItem(\"userTokenid\"),\r\n        type: e.id,\r\n        date_created: isoString,\r\n      });\r\n    }\r\n  };\r\n  const [SearchQueryTo,setSearchQueryTo]=useState();\r\n  const handleInputChangeTo = (newValue) => {\r\n    setSearchQueryTo(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    // handleSearchTo(newValue); // ارسال درخواست جستجو به سرور\r\n  };   \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: { query: SearchQueryTo ,do:'ok'}, // ارسال پارامتر جستجو به سرور\r\n        });\r\n        setbelance(response.data);\r\n        const data = response.data;\r\n        console.log(data);\r\n  \r\n        // if (data && data.length === 0) {\r\n        //   setSelectedOptionTo({ id: 0, name: searchQueryTo });\r\n        // } else {\r\n        //   setOptionsTo(data); // ذخیره داده‌ها برای نمایش در لیست\r\n        // }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n  \r\n    // if(selectedOption){\r\n      if (!SearchQueryTo|| SearchQueryTo.length < 3) {\r\n        setbelance([]);\r\n        return;\r\n      }else{\r\n        fetchData();\r\n      }\r\n    // }\r\n  }, [SearchQueryTo]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n   \r\n  return (\r\n    <div\r\n    dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n      className={`container rounded-5 popup res ${open ? \"show\" : \"\"}`}\r\n      style={{\r\n        // maxWidth: \"80%\",\r\n        // zIndex:'1000000',\r\n        zIndex:'10000',\r\n        overflowX: \"auto\",\r\n        overflowY: \"auto\",\r\n        backgroundColor: \"#f8f9fa\",\r\n        padding: \"20px\",\r\n      }}\r\n    >\r\n      <div className=\"d-flex justify-content-end \">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-close align-self-end p-2 m-1 mt-0 hover_btn\"\r\n          onClick={closeEdit}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n      <div\r\n        className=\"h-50 rounded-5\"\r\n        style={{ transition: \"all\", transitionDuration: 1000 }}\r\n      >\r\n        <div className=\"row\" style={{ flexWrap: \"wrap\", margin: 0 }}>\r\n          <h1\r\n            className=\"text-center rounded p-3 text-light\"\r\n            style={{ backgroundColor: \"var(--bs-info)\", width: \"100%\",fontSize: \"1.1rem\",padding:'0.1rem!important' }}\r\n          ><FormattedMessage id=\"Edit Withdraw\" />\r\n          </h1>\r\n          <div className=\"col-12 col-md-6 d-flex flex-column  mt-5 \">\r\n            <label for=\"category\">            <FormattedMessage id=\"Customer\"/>\r\n            </label>\r\n            {/* <ComboBox\r\n              setSelectedOption={setSelectedOption}\r\n              selectedOption={selectedOption}\r\n              options={belance}\r\n              Onsearch={Onsearch}\r\n              onKeyDown={handleKeyDown}\r\n            /> */}\r\n            <ComboBoxT\r\n          searchQuery={SearchQueryTo}\r\n          setSearchQuery={setSearchQueryTo}\r\n          handleInputChange={handleInputChangeTo}\r\n          // handleSearch={handleSearchTo}\r\n          setSelectedOption={setSelectedOption}\r\n          selectedOption={selectedOption}\r\n          options={belance}\r\n          Onsearch={Onsearch}\r\n          onKeyDown={handleKeyDown}\r\n          />\r\n            <Datepicker_Customer\r\n              onKeyDown={handleKeyDown}\r\n              default_value={EndDateE}\r\n              settings={settings}\r\n              handle_date={handle_date}\r\n              lebal={<FormattedMessage id=\"End\" />}\r\n              setSelectedDay={setSelectedDay}\r\n              selectedDay={selectedDay}\r\n            ></Datepicker_Customer>\r\n            <div\r\n              className=\"col-12 mt-1 mb-6\"\r\n              style={{ maxWidth: \"100%\", padding: \"0 15px\" }}\r\n            >\r\n            </div>\r\n\r\n            <div\r\n              className=\"col-12 mt-1\"\r\n              style={{ maxWidth: \"100%\", padding: \"0 15px\" }}\r\n            ></div>\r\n          </div>\r\n          <div\r\n            className=\"col-12 col-md-6 mt-5\"\r\n            style={{ maxWidth: \"100%\", padding: \"0 15px\" }}\r\n          >\r\n            <label htmlFor=\"national_id_number\"><FormattedMessage id=\"Amount\"/></label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"amount\"\r\n              ref={inputRef}\r\n              placeholder={<FormattedMessage id=\"Amount\"/>}\r\n              onKeyDown={handleKeyDown}\r\n              className=\"form-control fs-6 mb-3\"\r\n              value={Edit_Deposit.amount}\r\n              onChange={handleAll}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n            <div class=\"form-floating\">\r\n              <textarea\r\n                name=\"discription\"\r\n                class=\"form-control h-50\"\r\n                placeholder=\"\"\r\n                id=\"floatingTextarea2\"\r\n                value={Edit_Deposit.discription}\r\n                onChange={handleAll}\r\n                onKeyDown={handleKeyDown}\r\n              ></textarea>\r\n              <label for=\"floatingTextarea2\"><FormattedMessage id=\"Description\"/></label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12 d-flex flex-column flex-md-row justify-content-center margin mt-4\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"text-center form-control w-100 w-md-25 btn btn-outline-danger me-1 mb-2 mb-md-0 ms-1\"\r\n              onClick={closeEdit}\r\n            >\r\n              <FormattedMessage id=\"Cancel\"/>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n                ref={buttonRef}\r\n              className=\"text-center form-control w-100 w-md-25 btn btn-outline-success ms-1\"\r\n              onClick={()=>{\r\n                open && Submit_Edit()}}\r\n            >\r\n              <FormattedMessage id=\"Submit\"/>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport axios from \"axios\";\r\nimport AccountEdit from \"./CustomersEdit\";\r\nimport Datepicker from \"./forms/Datepicker\";\r\nimport Add from \"../assets/icon/add.png\";\r\nimport Belance from \"./forms/Belance\";\r\nimport AddAccount from \"./AddAccount\";\r\nimport Trash from \"../assets/icon/trash.png\";\r\nimport Swal from \"sweetalert2\";\r\nimport { showAlert } from \"../warrper\";\r\nimport Source from \"../Source\";\r\nimport { gregorianToJalali } from \"shamsi-date-converter\";\r\nimport jalaali from \"jalaali-js\";\r\nimport ComboBox from \"./forms/ComboBox\";\r\nimport moment from \"moment-jalaali\";\r\nimport Datepicker_Customer from \"./forms/Datepicker_customer\";\r\nimport { NumericFormat } from \"react-number-format\";\r\nimport { useRef } from \"react\";\r\nimport Edit_withdraw from \"./Edit_withdraw\";\r\nimport { getReports, updateReportInCache } from './Redux/reportSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getBelances, updateBelanceInCache } from \"./Redux/belanceSlice\";\r\nimport { getMoneys, updateMoneyInCache } from \"./Redux/moneysSlice\";\r\nimport ComboBoxDeposite from \"./Transformations/ComboBoxDeposite\";\r\nimport ListBox from \"./forms/ListBox\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useShowAlert  } from \"../warrper\";\r\nconst formatNumber = (number) => {\r\n  return number.toLocaleString(); // Formats number with thousand separators\r\n};\r\nexport default function Withdraw({\r\n  \r\n  user,\r\n  // settings,\r\n  \r\n}) {\r\n\r\n  const showAlert = useShowAlert(); \r\n  // const dispatch = useDispatch();\r\n  // //  const { belances, errorb } = useSelector((state) => state.belances);\r\n  //   // const { moneys, errorm } = useSelector((state) => state.moneys);\r\n  //   // const { customers, errorc } = useSelector((state) => state.customers); \r\n  //   const { belances, errorb, statusb } = useSelector((state) => state.belances);\r\n  //         // const { moneys, errorm, statusm } = useSelector((state) => state.moneys);\r\n  //         // const { customers, errorc, statusc } = useSelector((state) => state.customers);\r\n          \r\n  //         useEffect(() => {\r\n  //           // بررسی و بارگذاری `belances`\r\n  //           if (!statusb && belances?.lenght===0) {\r\n  //             dispatch(getBelances());\r\n  //           }\r\n          \r\n  //           // // بررسی و بارگذاری `moneys`\r\n  //           // if (statusm === 'idle' && !moneys) {\r\n  //           //   dispatch(getMoneys());\r\n  //           // }\r\n          \r\n  //           // // بررسی و بارگذاری `customers`\r\n  //           // if (statusc === 'idle' && !customers) {\r\n  //           //   dispatch(getCustomers());\r\n  //           // }\r\n  //         }, [dispatch, statusb, belances]);\r\n\r\n  const { settings, statuss } = useSelector((state) => state.settings);\r\n   const [selecteduser, setSelecteduser] = useState();\r\n    const { users, statusu } = useSelector((state) => state.users);\r\n    const [namesearch, setnameSearch] = useState();\r\n    // const [EndDate, setEndDate] = useState();\r\n    //   const [StartDate, setStartDate] = useState();\r\n      const [Date_Start, setDate_start] = useState();\r\n      const [Date_End, setDate_end] = useState();\r\n      const handle_date_start = (jalaliDate) => {\r\n        if (jalaliDate) {\r\n          const { year, month, day } = jalaliDate;\r\n          const gregorianDate = jalaali.toGregorian(year, month, day);\r\n          // Get current time\r\n          const now = new Date();\r\n          const hours = String(now.getHours()).padStart(2, \"0\");\r\n          const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n          // Create the ISO date string\r\n          let isoDateString;\r\n          const t = new Date();\r\n          const date = new Date(\r\n            jalaliDate.year,\r\n            jalaliDate.month - 1,\r\n            jalaliDate.day,\r\n            t.getHours(),\r\n            t.getMinutes()\r\n          );\r\n    \r\n          // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n          const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n          // setIsoDate(isoString);\r\n          setDate_start(isoString);\r\n          // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n        }\r\n      };\r\n      const handle_date_end = (jalaliDate) => {\r\n        if (jalaliDate) {\r\n          const { year, month, day } = jalaliDate;\r\n          const gregorianDate = jalaali.toGregorian(year, month, day);\r\n          // Get current time\r\n          const now = new Date();\r\n          const hours = String(now.getHours()).padStart(2, \"0\");\r\n          const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n          // Create the ISO date string\r\n          let isoDateString;\r\n          const t = new Date();\r\n          const date = new Date(\r\n            jalaliDate.year,\r\n            jalaliDate.month - 1,\r\n            jalaliDate.day,\r\n            t.getHours(),\r\n            t.getMinutes()\r\n          );\r\n    \r\n          // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n          const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n          // setIsoDate(isoString);\r\n          setDate_end(isoString);\r\n          // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n        }\r\n      };\r\n      const handleName = (e) => {\r\n        setnameSearch(e.target.value);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n          \r\n  const [withdraw,setwithdraw]=useState([]);\r\n  const [belance,setbelance]=useState([]);\r\n  // const [Cash,setCash]=useState(moneys);\r\n\r\n  const [Diversity, setDiversity] = useState();\r\n  const [selectedDayE, setSelectedDayE] = useState();\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  const [EndDateE, setEndDateE] = useState(null);\r\n  const [OpenEdit, setOpenEdit] = useState(false);\r\n  const [EditDeposit, setEditDeposit] = useState({\r\n    id: 0,\r\n    account: 0,\r\n    date: \"\",\r\n    amount: 0,\r\n    discription: \"\",\r\n    type: \"\",\r\n    customer: \"\",\r\n    moneyType: \"\",\r\n    cash: 0,\r\n    // isdelete: false,\r\n    user: localStorage.getItem(\"userTokenid\"),\r\n    user_id:localStorage.getItem(\"userTokenid\"),\r\n    user_name: \"\",\r\n    moneyid: 0,\r\n  });\r\n  const handle_date = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      setAddDeposite({\r\n        ...AddDeposite,\r\n        date: isoString,\r\n      });\r\n    }\r\n  };\r\n\r\n  const [moneytype, setmoneytype] = useState(0);\r\n  const [money1, setmoney] = useState({ name: \"\", cach: 0 });\r\n  const [records, setRecords] = useState();\r\n  // const [belance, setBelance] = useState([]);\r\n  const [openBelance, setOpenBelance] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n  const [editAccount, setEditAccount] = useState(null);\r\n  const [MainDW,setMainDW]=useState();\r\n  const [id, setId] = useState(\"\");\r\n  const [idbelance, setidbelance] = useState(0);\r\n  const [value, setValue] = useState(\"\");\r\n  const [StartDate, setStartDate] = useState(\"\");\r\n  const [EndDate, setEndDate] = useState(\"\");\r\n  const [Popup, setPopup] = useState(false);\r\n\r\n\r\n  // مدیریت تغییر صفحه\r\n  const handlePageChange = page => {\r\n    setCurrentPage(page); // برو به صفحه جدید\r\n  };\r\n  const [username, setusername] = useState(\"\");\r\n  const [moneyname, setmoneyname] = useState(\"\");\r\n  const [addAccountModal, setAddAccountModal] = useState(false);\r\n  const onChange = (row) => {\r\n    setPopup(true);\r\n    setValue(row.target.value);\r\n  };\r\n  const [selectedBelance, setselectedBelance] = useState({\r\n    id: 0,\r\n    account_name: \"\",\r\n    moneyType: \"\",\r\n    account: 0,\r\n    moneyId: 0,\r\n    user: 0,\r\n    type: 0,\r\n    belance: 0,\r\n    date_created: \"\",\r\n  });\r\n\r\n  const columnsDesktop = [\r\n    {\r\n      name: <strong style={{ width: \"1px\" }}>ID</strong>,\r\n      selector: (row) => row.id,\r\n      //  sortable: true\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"10px\",\r\n      },\r\n    },\r\n\r\n    {\r\n      name: <strong>Customer Name</strong>,\r\n      selector: (row) => row.customer,\r\n      style: {\r\n        padding: \"0px 20px\",\r\n        justifyContent: \"left\",\r\n        textAlign: \"center\",\r\n      },\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"170px\", maxWidth: \"210px\", width: \"210px\" }}\r\n        >\r\n          Date Created\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.date),\r\n      style: {\r\n        minWidth: \"170px\", // Adjust this value as needed\r\n        maxWidth: \"200px\", // Adjust this value as needed\r\n        // Width: '600px',    // Set a specific width\r\n      },\r\n      // sortable: true,\r\n    },\r\n    // { name: <strong>Time Created</strong>, selector: (row) => time(row.date_created),\r\n    // //  sortable: true\r\n    // },\r\n    {\r\n      name: <strong>Money Type</strong>,\r\n      selector: (row) => row.moneyType,\r\n      //  sortable: true\r\n    },\r\n    {\r\n      name: <strong className=\"w-50 text-center\">Amount</strong>,\r\n      selector: (row) => formatNumber(row.amount),\r\n      //  sortable: true\r\n      style: {\r\n        textAlign: \"center\",\r\n        // minWidth:'100px',\r\n      },\r\n    },\r\n    {\r\n      name: <strong>Description</strong>,\r\n      selector: (row) => row.discription,\r\n    },\r\n    // {\r\n    //   name: <strong>Cash Belance</strong>,\r\n    //   selector: (row) => formatNumber(row.cash),\r\n    // },\r\n    {\r\n      name: <strong>Added by </strong>,\r\n      selector: (row) => row.user_name,\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{\r\n            textAlign: \"center\",\r\n            backgroundColor: \"tranceparent\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          Delete\r\n        </strong>\r\n      ),\r\n      selector: (row) => (\r\n        <button\r\n          onClick={() => {\r\n            delete_report(row);\r\n            // setEdit(row);\r\n            // setUpdate(true);\r\n            // seTtitle('Edit Type Money');\r\n          }}\r\n          style={{\r\n            border: \"none\",\r\n            backgroundColor: \"transparent\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <img\r\n            height={\"15%\"}\r\n            width={\"15%\"}\r\n            src={Trash}\r\n            style={{ backgroundColor: \"tranceparent\" }}\r\n          />\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const columnsDesktopsimple = [\r\n    {\r\n      name: <strong style={{ width: \"1px\" }}>ID</strong>,\r\n      selector: (row) => row.id,\r\n      //  sortable: true\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"10px\",\r\n      },\r\n    },\r\n\r\n    {\r\n      name: <strong>Customer Name</strong>,\r\n      selector: (row) => row.customer,\r\n      style: {\r\n        padding: \"0px 20px\",\r\n        justifyContent: \"left\",\r\n        textAlign: \"center\",\r\n      },\r\n      // sortable: true\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"170px\", maxWidth: \"200px\", width: \"200px\" }}\r\n        >\r\n          Date Created\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.date),\r\n      style: {\r\n        minWidth: \"170px\", // Adjust this value as needed\r\n        maxWidth: \"200px\", // Adjust this value as needed\r\n        // Width: '600px',    // Set a specific width\r\n      },\r\n      // sortable: true,\r\n    },\r\n    // { name: <strong>Time Created</strong>, selector: (row) => time(row.date_created),\r\n    // //  sortable: true\r\n    // },\r\n    {\r\n      name: <strong>Money Type</strong>,\r\n      selector: (row) => row.moneyType,\r\n      //  sortable: true\r\n    },\r\n    {\r\n      name: <strong className=\"w-50 text-center\">Amount</strong>,\r\n      selector: (row) => formatNumber(row.amount),\r\n      //  sortable: true\r\n      style: {\r\n        textAlign: \"center\",\r\n        // minWidth:'100px',\r\n      },\r\n    },\r\n    {\r\n      name: <strong>Description</strong>,\r\n      selector: (row) => row.discription,\r\n    },\r\n    {\r\n      name: <strong>Cash Belance</strong>,\r\n      selector: (row) => formatNumber(row.cash),\r\n    },\r\n  ];\r\n\r\n  const columnsTablet = [\r\n    // { name: \"Id\", selector: (row) => row.id, sortable: true },\r\n\r\n    { name: \"account_name\", selector: (row) => row.customer, sortable: true },\r\n    ,\r\n    { name: \"moneyType\", selector: (row) => row.moneyType, sortable: true },\r\n    {\r\n      name: \"belance\",\r\n      selector: (row) => formatNumber(row.cash),\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const PDcolumn= [\r\n    // { name: <strong>Time Created</strong>, selector: (row) => time(row.date_created),\r\n    // //  sortable: true\r\n    // },\r\n    \r\n    // {\r\n    //   name: <strong>Cash Belance</strong>,\r\n    //   selector: (row) => formatNumber(row.cash),\r\n    // },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{\r\n            textAlign: \"center\",\r\n            backgroundColor: \"tranceparent\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n                       <FormattedMessage id=\"Delete\"/>\r\n        </strong>\r\n      ),\r\n      selector: (row) => (\r\n        <button\r\n          onClick={() => {\r\n            delete_report(row);\r\n            // setEdit(row);\r\n            // setUpdate(true);\r\n            // seTtitle('Edit Type Money');\r\n          }}\r\n          style={{\r\n            border: \"none\",\r\n            backgroundColor: \"transparent\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <img\r\n            height={\"15%\"}\r\n            width={\"15%\"}\r\n            src={Trash}\r\n            style={{ backgroundColor: \"tranceparent\" }}\r\n          />\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      name: <strong>                       <FormattedMessage id=\"Add By\"/>\r\n</strong>,\r\n      selector: (row) => row.user_name,\r\n    },\r\n   \r\n    {\r\n      name: <strong>                       <FormattedMessage id=\"Description\"/>\r\n</strong>,\r\n      selector: (row) => row.discription,\r\n    },\r\n    \r\n    {\r\n      name: <strong className=\"w-50 text-center\">                       <FormattedMessage id=\"Amount\"/>\r\n</strong>,\r\n      selector: (row) => formatNumber(row.amount),\r\n      //  sortable: true\r\n      style: {\r\n        textAlign: \"center\",\r\n        // minWidth:'100px',\r\n      },\r\n    },\r\n   \r\n    {\r\n      name: <strong>                       <FormattedMessage id=\"Currency\"/>\r\n</strong>,\r\n      selector: (row) => row.moneyType,\r\n      //  sortable: true\r\n    }, \r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"170px\", maxWidth: \"200px\", width: \"200px\" }}\r\n        >\r\n                                 <FormattedMessage id=\"Date Created\"/>\r\n\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.date),\r\n      style: {\r\n        minWidth: \"170px\", // Adjust this value as needed\r\n        maxWidth: \"200px\", // Adjust this value as needed\r\n        // Width: '600px',    // Set a specific width\r\n      },\r\n      // sortable: true,\r\n    },\r\n   \r\n    {\r\n      name: <strong>                       <FormattedMessage id=\"Customer Name\"/>\r\n</strong>,\r\n      selector: (row) => row.customer,\r\n      style: {\r\n        padding: \"0px 20px\",\r\n        justifyContent: \"left\",\r\n        textAlign: \"center\",\r\n      },\r\n      // sortable: true\r\n    },\r\n   \r\n    {\r\n      name: <strong style={{ width: \"1px\" }}>\r\n                       <FormattedMessage id=\"ID\"/>\r\n\r\n      </strong>,\r\n      selector: (row) => row.id,\r\n      //  sortable: true\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"10px\",\r\n      },\r\n    },\r\n\r\n  ];\r\n  const filterDeposite = () => {\r\n    // console.log(StartDate);\r\n    const startDate = new Date(\r\n      `${StartDate.year}-${StartDate.month}-${StartDate.day}`\r\n    ); // Start date\r\n    const endDate = new Date(`${EndDate.year}-${EndDate.month}-${EndDate.day}`); // End date\r\n    endDate.setDate(endDate.getDate() + 2);\r\n    const type = \"withdraw\";\r\n    axios\r\n      .get(Source.getAddress() + \"/api/report\", {\r\n        params: {\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n          type: type,\r\n          delete: \"False\",\r\n        },headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access')}`\r\n  }\r\n      })\r\n      .then((res) => {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: \"Deposite Table filterd successfully\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n        setRecords(res.data); // This will contain filtered data from the server\r\n      })\r\n      .catch((err) => {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"Something went wrong !\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n  const [formattedValue, setFormattedValue] = useState(\"\");\r\n  const [unformattedValue, setUnformattedValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const formattedValue = e.target.value;\r\n    // Remove the thousand separators (commas)\r\n    const unformattedValue = formattedValue.replace(/,/g, \"\").replace(\"$\", \"\");\r\n    setFormattedValue(formattedValue);\r\n    setAddDeposite({\r\n      ...AddDeposite,\r\n      amount: unformattedValue,\r\n      user: localStorage.getItem(\"userTokenid\"),\r\n    });\r\n  };\r\n  const handleDeposite = (e) => {\r\n    setAddDeposite({\r\n      ...AddDeposite,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const Onsearch = (row) => {\r\n    if (row) {\r\n      setusername(row.account_name);\r\n      setmoneyname(row.moneyType);\r\n      setmoneytype(row.moneyId);\r\n      setidbelance(row.id);\r\n      setselectedBelance((prevState) => ({\r\n        ...prevState,\r\n        id: row.id,\r\n        moneyId: row.moneyId,\r\n        user: row.user,\r\n        user_id:localStorage.getItem(\"userTokenid\"),\r\n        moneyType: row.moneyType,\r\n        account: row.account,\r\n        account_name: row.account_name,\r\n        type: row.type,\r\n        belance: row.belance, // Assuming 'belance' is correct, it seems like a typo\r\n        date_created: row.date_created,\r\n      }));\r\n      let belanceName = row.account_name + \" \" + row.moneyType;\r\n      setAddDeposite({\r\n        ...AddDeposite,\r\n        account: row.id,\r\n      });\r\n      setPopup(false);\r\n      setValue(belanceName);\r\n    }\r\n  };\r\n  const [AddDeposite, setAddDeposite] = useState({\r\n    user: 0,\r\n    user_id:localStorage.getItem(\"userTokenid\"),\r\n    // isdelete: \"False\",\r\n    discription: \"\",\r\n    amount: 0,\r\n    date: new Date().toISOString(),\r\n    account: 0,\r\n    type: \"withdraw\",\r\n    cash: 0,\r\n  });\r\n\r\n      // const primary = () => {\r\n      //   if (selectedBelance.belance === \"0\") {\r\n      //     return -parseInt(AddDeposite.amount);\r\n      //   } else {\r\n      //     let money = parseInt(AddDeposite.amount);\r\n      //     let primar = parseInt(selectedBelance.belance);\r\n      //     let sum = primar - money;\r\n      //     console.log(money);\r\n      //     console.log(primar);\r\n      //     console.log(sum);\r\n      //     return sum;\r\n      //   }\r\n      // };\r\n  \r\n  const SumbitReport = () => {\r\n    if (AddDeposite.amount !== 0 && AddDeposite.account !== 0) {\r\n      let add_deposite = {\r\n        user_id: localStorage.getItem(\"userTokenid\"),\r\n        discription: \"\",\r\n        amount: 0,\r\n        date_created: null,\r\n        account_id: 0,\r\n        type: \"deposite\",\r\n        cash: 0,\r\n        isdelete: 0,\r\n      };\r\n      add_deposite.user_id = AddDeposite.user;\r\n      add_deposite.amount = AddDeposite.amount;\r\n      add_deposite.discription = AddDeposite.discription;\r\n      add_deposite.date_created = AddDeposite.date;\r\n      add_deposite.account_id = AddDeposite.account;\r\n      add_deposite.type = AddDeposite.type;\r\n      let submitwithdraw=AddDeposite;\r\n      const date = new Date();\r\n          const isoString = date.toISOString();\r\n          setAddDeposite({\r\n            user_id: localStorage.getItem(\"userTokenid\"),\r\n            user:localStorage.getItem(\"userTokenid\"),\r\n            isdelete:0,\r\n            discription: \"\",\r\n            amount: 0,\r\n            date: isoString,\r\n            account_id: 0,\r\n            type: \"withdraw\",\r\n            cash: 0,\r\n          });\r\n      axios\r\n        .post(`${Source.getAddress()}/api/report`, add_deposite,{ headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n        },})\r\n        .then((response) => {\r\n          let add = {\r\n            id: 0,\r\n            user_name: \"\",\r\n            moneyType: \"\",\r\n            customer: \"\",\r\n            user_id: localStorage.getItem(\"userTokenid\"),\r\n            user: 0,\r\n            discription: \"\",\r\n            amount: 0,\r\n            date: null,\r\n            account: 0,\r\n            type: \"deposite\",\r\n            cash: 0,\r\n            // isdelete: \"False\",\r\n            account: 0,\r\n            moneyId:0,\r\n          };\r\n\r\n          add.id = response.data.report;\r\n          add.account = submitwithdraw.account;\r\n          add.user = localStorage.getItem(\"userTokenid\");\r\n          add.discription = submitwithdraw.discription;\r\n          add.amount = submitwithdraw.amount;\r\n          add.date = submitwithdraw.date;\r\n          add.account = submitwithdraw.account;\r\n          add.type = submitwithdraw.type;\r\n          // add.isdelete = AddDeposite.isdelete;\r\n          add.customer = username;\r\n          add.user_name = localStorage.getItem(\"userToken\");\r\n          add.moneyType = moneyname;\r\n          setRecords(prevRecords => [add, ...prevRecords]);\r\n          setSelectedDay(moment());\r\n          setFormattedValue(\"\");\r\n          setSelectedOption(\"\");\r\n          let add_cash = response.data.belance\r\n          setbelance(prevBelance =>\r\n            prevBelance.map(item => (item.id === add_cash.id ? add_cash : item))\r\n          );\r\n          // dispatch(updateBelanceInCache(add_cash));\r\n          // dispatch(updateReportInCache(response.data.report_belance));\r\n          let update_money =response.data.moneys;\r\n          // setCash(prevcash=>\r\n          //   prevcash.map((a) => (a.id === moneytype ? update_money : a))\r\n          // );\r\n          // dispatch(updateMoneyInCache(update_money));\r\n          showAlert({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n                        title: <FormattedMessage id=\"Your record has been added!\" />,\r\n            \r\n            // title: \"Your record has been added !\",\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n\r\n        })\r\n        .catch((error) => {\r\n          showAlert({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            // title: \"Not working ,please try again !\",\r\n                        title: <FormattedMessage id=\"Not working ,please try again!\" />\r\n            ,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n        });\r\n    } else {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"You must fill Customer name and Amount input !\",\r\n                title: <FormattedMessage id=\"You must fill Customer name and Amount input!\" />,\r\n        \r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    }\r\n  };\r\n  const res = useMemo((result) => {\r\n    if (window.innerWidth > 768) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n    const intl = useIntl(); // استفاده از هوک useIntl برای دسترسی به ترجمه‌ها\r\n  const delete_report = async (row) => {\r\n    setOpenEdit(false)\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success\",\r\n        cancelButton: \"btn btn-danger\",\r\n      },\r\n      buttonsStyling: false,\r\n    });\r\n  \r\n    const result = await swalWithBootstrapButtons.fire({\r\n        title: intl.formatMessage({id:\"Are you sure?\"})\r\n          ,\r\n          text:intl.formatMessage({id:\"You won't be able to revert this!\"})\r\n          ,\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonText: intl.formatMessage({id:\"Yes, delete it!\"})\r\n          ,\r\n          cancelButtonText: intl.formatMessage({id:\"No, cancel!\"})\r\n          ,\r\n          reverseButtons: true,\r\n    });\r\n  \r\n    if (result.isConfirmed) {\r\n      \r\n        // let amount_delete = parseInt(row.amount);\r\n        // let belacne_delete_primary_response = await axios.get(\r\n        //   Source.getAddress() + `/api/belance/${row.account}`,{ headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   },}\r\n        // );\r\n  \r\n        // const belacne_delete_primary = belacne_delete_primary_response.data;\r\n        // let belance_amount = parseInt(belacne_delete_primary.belance);\r\n        // let belance_delete = {\r\n        //   account: belacne_delete_primary.account,\r\n        //   type: belacne_delete_primary.type,\r\n        //   belance: String(belance_amount + amount_delete)\r\n        // };\r\n  \r\n        // let money_delete_primary_response = await axios.get(\r\n        //   Source.getAddress() + `/api/money/${belacne_delete_primary.moneyId}`,{ headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   },}\r\n        // );\r\n  \r\n        // const money_delete_primary = money_delete_primary_response.data;\r\n        // let cash_primary = parseInt(money_delete_primary.cach);\r\n        // let money_delete = {\r\n        //   cach: cash_primary + amount_delete,\r\n        // };\r\n  \r\n        // await axios.put(\r\n        //   Source.getAddress() + `/api/belance/${belacne_delete_primary.id}`,\r\n        //   belance_delete,{ headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   },}\r\n        // );\r\n  \r\n        // belacne_delete_primary.belance = belance_delete.belance;\r\n        // belacne_delete_primary.isdelete = belance_delete.isdelete;\r\n  \r\n        // setbelance((prevBelance) =>\r\n        //   prevBelance.map((a) =>\r\n        //     a.id === belacne_delete_primary.id ? belacne_delete_primary : a\r\n        //   )\r\n        // );\r\n  \r\n        // // Update the money\r\n        // await axios.put(\r\n        //   Source.getAddress() + `/api/money/${money_delete_primary.id}`,\r\n        //   money_delete,{ headers: {\r\n        //     'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        //     // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        //   },}\r\n        // );\r\n  \r\n        // money_delete_primary.cach = money_delete.cach;\r\n        // setCash((prevCash) =>\r\n        //   prevCash.map((a) =>\r\n        //     a.id === money_delete_primary.id ? money_delete_primary : a\r\n        //   )\r\n        // );\r\n  \r\n        // // Update the report to mark it as deleted\r\n        let update = {\r\n          isdelete: 1,\r\n          _method:'put'\r\n        };\r\n        axios.post(Source.getAddress() + `/api/report/${row.id}`, update,{ \r\n          params:{type:'delete'},\r\n          headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n          // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        },}).then((res)=>{\r\n          Swal.fire({\r\n            position: \"center\",\r\n            icon: \"success\",\r\n            title: \r\n                        `Withdraw ${intl.formatMessage({id:\"record successfully deleted!\"})}`,\r\n            showConfirmButton: false,\r\n            timer: 600,\r\n          });\r\n          setRecords((prevRecords) =>\r\n            prevRecords.filter((record) => record.id !== row.id)\r\n          );\r\n          // setCash((prevCash) =>\r\n          //   prevCash.map((a) =>\r\n          //     a.id === res.data.moneys.id ? res.data.moneys : a\r\n          //   ));\r\n            setbelance((prevBelance) =>\r\n              prevBelance.map((a) =>\r\n                a.id === res.data.belance.id ? res.data.belance : a\r\n              )\r\n            );\r\n          // dispatch(updateBelanceInCache(res.data.belance));\r\n          // dispatch(updateReportInCache(res.data.report_belance));\r\n          // dispatch(updateMoneyInCache(res.data.moneys));\r\n        }).catch((e)=>{\r\n          Swal.fire({\r\n            position: \"center\",\r\n            icon: \"error\",\r\n            title: intl.formatMessage({id:\"Something went wrong!\"}),\r\n            showConfirmButton: false,\r\n            timer: 600,\r\n          });\r\n        })\r\n  \r\n        setRecords((prevRecords) =>\r\n          prevRecords.filter((record) => record.id !== row.id)\r\n        );\r\n        \r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        text:intl.formatMessage({id:\"Your Withdraw record is safe :)\"}),\r\n        showConfirmButton: false,\r\n        timer: 600,\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  const [account, setAccount] = useState();\r\n  const [selectedOption1, setSelectedOption1] = useState();\r\n  const inputRef=useRef();\r\n\r\n  const handleRowClick = (row) => {\r\n    inputRef.current.select();\r\n    setAccount(row.account);\r\n    let edit = {\r\n      account_name: row.customer,\r\n      moneyType: row.moneyType,\r\n    };\r\n    setSelectedOption1(edit);\r\n    setDiversity(row.amount);\r\n    let news;\r\n    try {\r\n      news = new Date(row.date);\r\n      if (isNaN(news.getTime())) {\r\n        throw new Error(\"Invalid date\");\r\n      }\r\n    } catch (error) {\r\n      console.error('Invalid date format:', row.date);\r\n      return;\r\n    }\r\n  \r\n    news.setDate(news.getDate());\r\n    const jalaliDate = jalaali.toJalaali(\r\n      news.getFullYear(),\r\n      news.getMonth() + 1,\r\n      news.getDate()\r\n    );\r\nconst gregorianMoment = moment(news);\r\n    setSelectedDayE(gregorianMoment);\r\n    setEditAccount(row);\r\n    setMainDW(row);\r\n    setEdit(true);\r\n    setEditDeposit(row);\r\n    setOpenEdit(prev=>!prev);\r\n  };\r\n  const convertToHijriShamsi = (gregorianDate) => {\r\n    const [jalaliYear, jalaliMonth, jalaliDay] = gregorianToJalali(\r\n      new Date(gregorianDate)\r\n    );\r\n\r\n    const hijriShamsiDate = `${jalaliYear}/${jalaliMonth}/${jalaliDay}`;\r\n\r\n    return hijriShamsiDate;\r\n  };\r\n  const date = (d) => {\r\n      const date = moment.utc(d); // تبدیل تاریخ بدون در نظر گرفتن تایم زون\r\n      let formattedDate = `${date.year()}-${String(date.month() + 1).padStart(2, \"0\")}-${String(date.date()).padStart(2, \"0\")}`;\r\n      const hours = date.hours();\r\n      const minutes = date.minutes();\r\n      const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n      let aa = ampm;\r\n      const formattedHours = hours % 12 || 12;\r\n      const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    \r\n      if (settings[0].date === \"Persian\") {\r\n        moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n        aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n        formattedDate = moment.utc(d).format(\"jYYYY-jMM-jDD\");\r\n      } else {\r\n        moment.locale(\"en\");\r\n      }\r\n    \r\n      return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    };\r\n  \r\n  const handleViewBelance = (row) => {\r\n    const filteredBelance = belance.filter((item) => item.account === row.id);\r\n\r\n    setEditAccount(filteredBelance);\r\n    setId(row.id);\r\n    setOpenBelance(true);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleFilter = (e) => {\r\n    // console.log(accounts);\r\n    const newData = withdraw.filter((row) => {\r\n      if (typeof row.customer === \"string\") {\r\n        if (\r\n          row.customer.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n          row.moneyType.toLowerCase().includes(e.target.value.toLowerCase())\r\n        ) {\r\n          return row.customer;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n    setRecords(newData);\r\n  };\r\n\r\n  const handleAddAccount = () => {\r\n    setAddAccountModal(true);\r\n  };\r\n\r\n  \r\n  const [select_user, setselect_user] = useState(\"\");\r\n  const ChangeUser = (e) => {\r\n    if (e.target.value !== \"all users\") {\r\n      const newData = withdraw.filter((row) => {\r\n        if (typeof row.user_name === \"string\") {\r\n          return row.user_name\r\n            .toLowerCase()\r\n            .includes(e.target.value.toLowerCase());\r\n        }\r\n        return false;\r\n      });\r\n      setRecords(newData);\r\n    } else {\r\n      setRecords(withdraw);\r\n    }\r\n    setselect_user(e.target.value);\r\n  };\r\n  const [selectedOption, setSelectedOption] = useState();\r\n\r\n  const buttonRef = useRef(null);\r\n  const filterRef = useRef(null);\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Check if the Enter key was pressed\r\n      e.preventDefault(); // Prevent default action if needed\r\n      if (buttonRef.current) {\r\n        buttonRef.current.click(); // Programmatically click the button\r\n      }\r\n    }\r\n  };\r\n\r\n  const Hanlderef = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Check if the Enter key was pressed\r\n      e.preventDefault(); // Prevent default action if needed\r\n      if (filterRef.current) {\r\n        filterRef.current.click(); // Programmatically click the button\r\n      }\r\n    }\r\n  };\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\r\n\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    setPerPage(newPerPage);\r\n    setCurrentPage(page);\r\n  };\r\n  const [data, setData] = useState([]);\r\n  const [totalRows, setTotalRows] = useState(0); // تعداد کل ردیف‌ها\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);  // صفحه فعلی\r\n  const [perPage, setPerPage] = useState(10); // تعداد آیتم‌ها در هر صفحه\r\n\r\n  // دریافت داده‌ها از سرور\r\n  const fetchData = async (page, pageSize) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(Source.getAddress()+'/api/report', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n        },\r\n        params: {\r\n          user_id: selecteduser.id,\r\n          page: page,\r\n          perPage: pageSize,\r\n          delete: 0,StartDate: StartDate&& Date_Start,\r\n          EndDate: EndDate && Date_End,\r\n          search: namesearch?.length ? namesearch : 'false',\r\n          type:\"withdraw\"\r\n        },\r\n      });\r\n      setRecords(response.data.data); // داده‌های صفحه جاری\r\n      setTotalRows(response.data.total); // تعداد کل ردیف‌ها\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching data', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // فراخوانی داده‌ها هنگام بارگذاری صفحه یا تغییر صفحه\r\n  useEffect(() => {\r\n    fetchData(currentPage, perPage);\r\n  }, [currentPage, perPage,EndDate, StartDate, selecteduser,namesearch]);\r\n  \r\n  \r\n  \r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsDesktop(window.innerWidth > 768);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  const columns = useMemo(() => {\r\n    if (\r\n      localStorage.getItem(\"language\") === \"pa\" ||\r\n      localStorage.getItem(\"language\") === \"da\"\r\n    ) {\r\n      return PDcolumn.reverse();\r\n    }\r\n    if (isDesktop) {\r\n      return localStorage.getItem(\"userTokenname\") === \"admin\"\r\n        ? columnsDesktop\r\n        : columnsDesktopsimple;\r\n    }\r\n    return columnsTablet;\r\n  }, [isDesktop]);\r\n\r\n  const inputRefd = useRef(null); // Create a ref for the input field\r\n\r\n  useEffect(() => {\r\n    const inputElement = document.querySelector(\".form-control\"); // Use the class or other selector\r\n    if (inputElement) {\r\n      setTimeout(() => {\r\n        inputElement.focus(); // Focus the input field\r\n        inputElement.select(); // Select the text in the input field\r\n      }, 0);\r\n    }\r\n  }, []);\r\n  // useEffect(()=>{\r\n  //   axios.get(Source.getAddress() + '/api/money', {\r\n  //     headers: {\r\n  //       'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //     },params: {\r\n  //       delete: 'False',\r\n  //     },\r\n  //   }).then((res)=>{\r\n  //     setCash(res.data);\r\n  //   }).catch((err)=>{\r\n  //     console.log(err);\r\n  //   });\r\n  // },[]);\r\n  // useEffect(()=>{\r\n  //   axios.get(Source.getAddress() + '/api/belance', {\r\n  //     headers: {\r\n  //       'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //     },params: {\r\n  //       delete: 'False',\r\n  //     },\r\n  //   }).then((res)=>{\r\n  //     setbelance(res.data);\r\n  //   }).catch((err)=>{\r\n  //     console.log(err);\r\n  //   });\r\n  //  },[]); \r\n   const [SearchQueryTo,setSearchQueryTo]=useState();\r\n   const handleInputChangeTo = (newValue) => {\r\n     setSearchQueryTo(newValue); // بروزرسانی مقدار ورودی جستجو\r\n     // handleSearchTo(newValue); // ارسال درخواست جستجو به سرور\r\n   };   \r\n   useEffect(() => {\r\n     const fetchData = async () => {\r\n       try {\r\n         const response = await axios.get(`${Source.getAddress()}/api/belance`, {\r\n           headers: {\r\n             Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n           },\r\n           params: { query: SearchQueryTo ,do:'ok'}, // ارسال پارامتر جستجو به سرور\r\n         });\r\n         setbelance(response.data);\r\n         const data = response.data;\r\n         console.log(data);\r\n   \r\n         // if (data && data.length === 0) {\r\n         //   setSelectedOptionTo({ id: 0, name: searchQueryTo });\r\n         // } else {\r\n         //   setOptionsTo(data); // ذخیره داده‌ها برای نمایش در لیست\r\n         // }\r\n       } catch (error) {\r\n         console.error(\"Error fetching data:\", error);\r\n       }\r\n     };\r\n   \r\n     // if(selectedOption){\r\n       if (!SearchQueryTo|| SearchQueryTo.length < 3) {\r\n         setbelance([]);\r\n         return;\r\n       }else{\r\n         fetchData();\r\n       }\r\n     // }\r\n   }, [SearchQueryTo]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n   const { formatMessage } = useIntl();\r\n   const localization = {\r\n    pagination: {\r\n        \r\n        rowsPerPage:<FormattedMessage id=\"AddrowsPerPage\"/> , // مثلا: \"تعداد ردیف‌ها\"\r\n      previous: <FormattedMessage id=\"previous\"/>, // مثلا: \"قبلی\"\r\n      next: <FormattedMessage id=\"next\"/>, // مثلا: \"بعدی\"\r\n      page: <FormattedMessage id=\"page\"/>, // مثلا: \"صفحه\"\r\n    },\r\n    // شما می‌توانید تنظیمات بیشتر برای متون مورد نظر اضافه کنید.\r\n  };\r\n  return (\r\n    <div\r\n      className=\"container mt-5 h-100 w-100\"\r\n      onClick={(e) => {\r\n        if (\r\n          e.target.className === \"container mt-5 h-100 w-100\" ||\r\n          e.target.className ===\r\n            \"col-12 w-100 row rounded-3 m-3 pe-5 p-1 bg-transparent\" ||\r\n          e.target.className ===\r\n            \"col-12 w-100 row rounded-3 m-3 pe-5 p-1 bg-transparent \"\r\n        ) {\r\n          setPopup(false);\r\n          setOpenEdit(false);\r\n        }\r\n      }}\r\n    >\r\n      <form\r\n          dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n      class=\"row w-100 rounded-3 m-3 p-1 bg-transparent\">\r\n        <div class=\"col-lg-2 col-md-3 col-sm-6 m-1 mt-3\">\r\n          <label for=\"category\">            <FormattedMessage id=\"Customer\" />\r\n          </label>\r\n          {/* <ComboBox\r\n            options={belance}\r\n            Onsearch={Onsearch}\r\n            selectedOption={selectedOption}\r\n            setSelectedOption={setSelectedOption}\r\n          /> */}\r\n          <ComboBoxDeposite\r\n          searchQuery={SearchQueryTo}\r\n          setSearchQuery={setSearchQueryTo}\r\n          handleInputChange={handleInputChangeTo}\r\n          // handleSearch={handleSearchTo}\r\n          setSelectedOption={setSelectedOption}\r\n          selectedOption={selectedOption}\r\n          options={belance}\r\n          Onsearch={Onsearch}\r\n          />\r\n        </div>\r\n        <div class=\"col-lg-2 col-md-3 col-sm-6 m-0 mb-3 mt-3 ms-3 p-0 pe-4\">\r\n          <label for=\"price\">            <FormattedMessage id=\"Amount\" />\r\n          </label>\r\n          <NumericFormat\r\n            ref={inputRefd}\r\n            thousandSeparator={true}\r\n            name=\"amount\"\r\n            className=\"form-control\"\r\n            value={formattedValue}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"0\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div class=\"col-lg-3 col-md-6 col-sm-12 m-2 mt-3 ps-2 p-0 pe-3\">\r\n          <div class=\"form-floating\">\r\n            <textarea\r\n              onKeyDown={handleKeyDown}\r\n              name=\"discription\"\r\n              class=\"form-control h-50\"\r\n              placeholder=\"Leave a comment here\"\r\n              id=\"floatingTextarea2\"\r\n              value={AddDeposite.discription}\r\n              onChange={handleDeposite}\r\n            ></textarea>\r\n            <label for=\"floatingTextarea2\">              <FormattedMessage id=\"Description\" />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-3 col-md-6 col-sm-12  mt-3 ps-3 p-0\">\r\n          <Datepicker_Customer\r\n            onKeyDown={handleKeyDown}\r\n            default_value={EndDate}\r\n            settings={settings}\r\n            handle_date={handle_date}\r\n            // lebal={\"Date\"}\r\n                        lebal={<FormattedMessage id=\"Date\" />}\r\n            setSelectedDay={setSelectedDay}\r\n            selectedDay={selectedDay}\r\n          ></Datepicker_Customer>\r\n        </div>\r\n        <div\r\n          class=\"col-lg-1 col-md-3 col-sm-6 p-0 ps-0 ms-0\"\r\n          style={{ marginTop: \"2.3rem\" }}\r\n        >\r\n          <button\r\n            ref={buttonRef}\r\n            onClick={SumbitReport}\r\n            type=\"button\"\r\n            class=\"btn btn-success\"\r\n          >\r\n                        <FormattedMessage id=\"Add\" />\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <div\r\n          dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n        className=\"bg-light d-flex flex-column flex-lg-row justify-content-lg-between align-items-start align-items-lg-center\"\r\n        style={{ borderTop: \"5px solid #4a5cf2\" }}\r\n      >\r\n        <h2 className=\"m-2 fw-bold mb-4\">            <FormattedMessage id=\"Withdraw\" />\r\n        </h2>\r\n        <div className=\"d-flex flex-column flex-lg-row align-items-start align-items-lg-center\">\r\n          <div className=\"mb-1 mb-lg-0 me-lg-2 mt-1 \">\r\n            <Datepicker_Customer\r\n              default_value={StartDate}\r\n              handle_date={handle_date_start}\r\n                            lebal={<FormattedMessage id=\"Start\" />}\r\n              setSelectedDay={setStartDate}\r\n              selectedDay={StartDate}\r\n            ></Datepicker_Customer>\r\n          </div>\r\n          <div className=\"mb-1 mt-1 mb-lg-0 me-lg-2\">\r\n            <Datepicker_Customer\r\n              default_value={EndDate}\r\n              handle_date={handle_date_end}\r\n                            lebal={<FormattedMessage id=\"End\" />}\r\n              setSelectedDay={setEndDate}\r\n              selectedDay={EndDate}\r\n            ></Datepicker_Customer>\r\n          </div>\r\n          <ListBox\r\n            options={users}\r\n            selectedOption={selecteduser}\r\n            setSelectedOption={setSelecteduser}\r\n          />\r\n        </div>\r\n        <input\r\n          className=\"form-control m-2 mb-2 mt-4\"\r\n          style={{ width: \"100%\", maxWidth: \"200px\" }}\r\n          type=\"search\"\r\n          onChange={handleName}\r\n          value={namesearch}\r\n          placeholder={formatMessage({ id: \"Search\" })}\r\n          aria-label=\"Search\"\r\n        />\r\n      </div>\r\n      {/* <DataTable\r\n        className=\"w-100\"\r\n        columns={columns}\r\n        data={records}\r\n        onRowClicked={handleRowClick}\r\n        striped\r\n        responsive\r\n        highlightOnHover\r\n        pagination\r\n      /> */}\r\n       <DataTable\r\n      // title=\"Server Side Data Table\"\r\n      columns={columns}\r\n      data={records}\r\n      progressPending={loading}\r\n      onRowClicked={handleRowClick}\r\n        striped\r\n        responsive\r\n        highlightOnHover\r\n      pagination\r\n      paginationServer // فعال‌سازی صفحه‌بندی سرور ساید\r\n      paginationTotalRows={totalRows} // تعداد کل ردیف‌ها\r\n      onChangePage={handlePageChange} // تغییر صفحه\r\n      onChangeRowsPerPage={handlePerRowsChange} // تغییر تعداد ردیف‌ها در صفحه\r\n      localization={localization} // ارسال ترجمه‌ها\r\n\r\n    />\r\n      <Edit_withdraw\r\n       inputRef={inputRef}\r\n       setSelectedOption={setSelectedOption1}\r\n       selectedOption={selectedOption1}\r\n       records={records}\r\n       setRecords={setRecords}\r\n       handleKeyDown={handleKeyDown}\r\n      //  setCash={setCash}\r\n      //  Cash={Cash}\r\n       belance={belance}\r\n       setbelance={setbelance}\r\n       account={account}\r\n       setAccount={setAccount}\r\n       Diversity={Diversity}\r\n       setDiversity={setDiversity}\r\n       selectedDay={selectedDayE}\r\n       setselectedDay={setSelectedDayE}\r\n       EndDate={EndDateE}\r\n       Edit_Deposit={EditDeposit}\r\n       setEditDeposit={setEditDeposit}\r\n       settings={settings}\r\n       handle_date={handle_date}\r\n       setSelectedDay={setSelectedDayE}\r\n       open={OpenEdit}\r\n       closeEdit={() => setOpenEdit(false)}\r\n      MainDW={MainDW}\r\n      setMainDW={setMainDW}\r\n      />\r\n      {/* {edit && (\r\n        <AccountEdit\r\n          close={() => setEdit(false)}\r\n          account={editAccount}\r\n          setAccount={setEditAccount}\r\n        />\r\n      )} */}\r\n\r\n      {/* <img style={{height:'6%',width:'6%'}} className=\"p-0\" src={Add}/> */}\r\n      {openBelance && (\r\n        <Belance\r\n          close={() => setOpenBelance(false)}\r\n          id={id}\r\n          accountbelance={editAccount}\r\n        />\r\n      )}\r\n      {addAccountModal && (\r\n        <AddAccount close={() => setAddAccountModal(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState,useRef } from \"react\";\r\nimport Source from \"../../Source\";\r\nimport axios from \"axios\";\r\n// import Swal from \"sweetalert2\";\r\nimport { showAlert } from \"../../warrper\";\r\nimport Combo_Customer from \".././forms/Combo_Customer\";\r\nimport Datepicker from \".././forms/Datepicker\";\r\nimport Select from \"react-select\";\r\nimport jalaali from \"jalaali-js\";\r\nimport Datepicker_Customer from \".././forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCustomers } from \"../Redux/customerSlice\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useShowAlert  } from \"../../warrper\";\r\nexport default function Edit_account({\r\n  selectedOption, setSelectedOption,\r\n  nmoney, setnmoney,\r\n  Editefull,setEditeFull,\r\n  setAccounts,\r\n  close,\r\n  addAccountModal,\r\n  records,\r\n  setRecords,\r\n  // customers,\r\n  accounts,\r\n  money,\r\n  settings,\r\n  bbelance,\r\n  setbbelance,smoney, setsmeony,add,setadd\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const showAlert = useShowAlert(); \r\n  const { customers, errorc, statusc } = useSelector(\r\n    (state) => state.customers\r\n  );\r\n  useEffect(() => {\r\n    // بررسی و بارگذاری `belances`\r\n    // if (!statusb && belances) {\r\n    //   dispatch(getBelances());\r\n    // }\r\n\r\n    // // بررسی و بارگذاری `moneys`\r\n    // if (!statusm && moneys) {\r\n    //   dispatch(getMoneys());\r\n    // }\r\n\r\n    // بررسی و بارگذاری `customers`\r\n    if (!statusc  && !customers) {\r\n      dispatch(getCustomers());\r\n    }\r\n\r\n    // if(!statuss && settings) {\r\n    //   dispatch(getSettings());\r\n    // }\r\n  }, [dispatch, statusc, customers]);\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  const algorithm = (e) => {\r\n    setnmoney('');\r\n    if (e) {\r\n      setbbelance({\r\n        ...bbelance,\r\n        account: e.id,\r\n      });\r\n      setadd({\r\n        ...add,\r\n        account_name:e.name,\r\n        account: e.id,\r\n      });\r\n      // find the main account in belance\r\n      const find = records.filter((p) => p.account === e.id);\r\n      let moneys = [];\r\n      for (let i = 0; i < money.length; i++) {\r\n        const res = find.find((r) => r.type === money[i].id);\r\n        if (!res) {\r\n          moneys.push(money[i]);\r\n        }\r\n      }\r\n      setsmeony(moneys);\r\n    }\r\n  };\r\n  const handle = (e) => {\r\n    const date = new Date();\r\n    const isoString = date.toISOString();\r\n\r\n    setnmoney(e);\r\n    if (e) {\r\n     \r\n      setbbelance({\r\n        ...bbelance,\r\n        user: localStorage.getItem(\"userTokenid\"),\r\n        type: e.id,\r\n        date_created: isoString,\r\n      });\r\n            setadd({\r\n              ...add,\r\n              user: localStorage.getItem(\"userTokenid\"),\r\n              type: e.id,\r\n              id:Editefull.id,\r\n              date_created:isoString,\r\n              moneyType:e.name,\r\n               user_name:localStorage.getItem(\"userToken\"),  \r\n            });\r\n    }\r\n  };\r\n\r\n  const handle_date = (jalaliDate) => {\r\n    // console.log(jalaliDate);\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        now.getHours(),\r\n        now.getMinutes(),\r\n      );\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n\r\n      // setIsoDate(isoString);\r\n      console.log(isoString);\r\n      setbbelance({\r\n        ...bbelance,\r\n        date_created: isoString,\r\n      });\r\n      setadd({...add,\r\n        date_created:isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n\r\n  const sumbit = () => {\r\n    bbelance._method='put';\r\n    axios\r\n      .post(Source.getAddress() + \"/api/belance/\"+Editefull.id+'/', bbelance, {headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('access')}`, // Add the access token here\r\n        // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n      }})\r\n      .then((res) => {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          // title: \"Your belance has been added !\",\r\n          title: <FormattedMessage id=\"Your record has been updated!\" />,\r\n          showConfirmButton: false,\r\n          timer: 800,\r\n        });\r\n\r\n         setbbelance({\r\n          account: null,\r\n          type: null,\r\n          belance: 0,\r\n          date_created: \"\",\r\n          user: null,\r\n          isdelete: false,\r\n         })\r\n         setSelectedOption(null);\r\n         setnmoney(null);\r\n         setsmeony(null);\r\n         setSelectedDay(moment());\r\n\r\n        // console.log(bbelance);\r\n        // setRecords(records.map((a) => (a.id === update.id ? update : a)));\r\n        setRecords(records.map((a) => (a.id === add.id ? add : a)));\r\n        close();\r\n      })\r\n      .catch((err) => {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n                                  title: <FormattedMessage id=\"Not working ,please try again!\" />,\r\n          showConfirmButton: false,\r\n          timer: 800,\r\n        });\r\n      });\r\n  };\r\n\r\n  const buttonRef = useRef(null);\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') { // Check if the Enter key was pressed\r\n      e.preventDefault(); // Prevent default action if needed\r\n      if (buttonRef.current && add) {\r\n        buttonRef.current.click(); // Programmatically click the button\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div\r\n      className={`rounded-4 row g-2 popup m-4 mb-0 ${\r\n        addAccountModal && \"show\"\r\n      }`}\r\n      style={{ width: \"26rem\" }}\r\n    >\r\n      <div className=\"d-flex justify-content-end m-0 p-0\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-close align-self-end p-3 m-1 mt-0 hover_btn\"\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n      <h1\r\n        className=\"text-center rounded m-0 p-2 w-100 text-light fs-4\"\r\n        style={{ backgroundColor: \"var(--bs-info)\" }}\r\n      >\r\n                            <FormattedMessage id=\"Edit Account\" />\r\n      </h1>\r\n      <div class=\"col-md-6\">\r\n        <label for=\"validationServer01\" class=\"\">\r\n        <FormattedMessage id=\"Customer Name\" />\r\n        </label>\r\n        <Combo_Customer setSelectedOption={setSelectedOption} selectedOption={selectedOption} options={customers} Onsearch={algorithm} />\r\n        <div class=\"valid-feedback\">Looks good!</div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <label for=\"validationServer02\" class=\"\">\r\n        <FormattedMessage id=\"Currency\" />\r\n        </label>\r\n        {/* <input type=\"text\" class=\"form-control is-valid\" id=\"validationServer02\" value=\"\" required /> */}\r\n        <div className=\"w-40\">\r\n          <Select\r\n            onKeyDown={handleKeyDown}\r\n            value={nmoney}\r\n            onChange={handle}\r\n            options={smoney}\r\n            getOptionLabel={(option) => (\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {/* <img src={option.pictureUrl} alt={`Portrait of ${option.firstName} ${option.lastName}`} style={{ width: '30px', marginRight: '10px' }} /> */}\r\n                <span>{`${option.name} `}</span>\r\n              </div>\r\n            )}\r\n            getOptionValue={(option) => `${option.name}`}\r\n            placeholder={`${<FormattedMessage id=\"Search\" />}`}\r\n            isClearable\r\n            isSearchable\r\n            // isDisabled={smoney ? false : true}\r\n          />\r\n        </div>\r\n        <div class=\"valid-feedback\">Looks good!</div>\r\n      </div>\r\n      <div className=\"coll-10\">\r\n        <Datepicker_Customer\r\n            onKeyDown={handleKeyDown}\r\n          default_value={\"\"}\r\n          settings={settings}\r\n          handle_date={handle_date}\r\n          lebal={<FormattedMessage id=\"Date\" />}\r\n          setSelectedDay={setSelectedDay}\r\n          selectedDay={selectedDay}\r\n        ></Datepicker_Customer>\r\n      </div>\r\n      <div className=\"col-10 ms-4 m-10 mt-5 ps-3 d-flex\">\r\n        <a\r\n          className=\"text-center form-control btn btn-danger text-light me-1 ms-1\"\r\n          style={{ margin: \"auto\", width: \"150px\" }}\r\n          onClick={close}\r\n        >\r\n                                      <FormattedMessage id=\"Cancel\" />\r\n        </a>\r\n        <a\r\n          className=\"text-center btn form-control btn-success text-light ms-1\"\r\n          ref={buttonRef}\r\n          style={{ margin: \"auto\", width: \"150px\" }}\r\n          onClick={() => {\r\n            sumbit();\r\n          }}\r\n        >\r\n                                                <FormattedMessage id=\"Submit\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport { ChevronDown } from 'lucide-react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\nconst ListBox = ({\r\n  isDisabled = false,\r\n  options = [],\r\n  selectedOption,\r\n  setSelectedOption,\r\n  width = '100%',\r\n}) => {\r\n  const { formatMessage, locale } = useIntl();\r\n  const isRTL = locale === 'fa'; // Assuming 'fa' is your Persian locale code\r\n  \r\n  const allUsersOption = { \r\n    name: <FormattedMessage id=\"All Users\" />, \r\n    id: 0 \r\n  };\r\n  \r\n  const updatedOptions = [allUsersOption, ...options];\r\n\r\n  useEffect(() => {\r\n    if (!selectedOption) {\r\n      setSelectedOption(allUsersOption);\r\n    }\r\n  }, [selectedOption, setSelectedOption, allUsersOption]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      backgroundColor: '#fff',\r\n      zIndex: 1,\r\n      borderRadius: '8px',\r\n      border: state.isFocused ? '2px solid #4f46e5' : '1px solid #d1d5db',\r\n      boxShadow: state.isFocused ? '0 0 5px rgba(79, 70, 229, 0.5)' : 'none',\r\n      '&:hover': {\r\n        border: '1px solid #4f46e5',\r\n      },\r\n      minHeight: '39px',\r\n      padding: '4px 8px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    menu: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      borderRadius: '8px',\r\n      boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',\r\n      overflow: 'hidden',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    option: (base, { isFocused, isSelected }) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      backgroundColor: isSelected ? '#4f46e5' : isFocused ? '#e0e7ff' : '#fff',\r\n      color: isSelected ? '#fff' : '#111827',\r\n      padding: isRTL ? '12px 16px 12px 8px' : '12px 8px 12px 16px',\r\n      cursor: 'pointer',\r\n      fontSize: '14px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      '&:active': {\r\n        backgroundColor: '#4338ca',\r\n      },\r\n    }),\r\n    singleValue: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      fontWeight: 'bold',\r\n      color: '#4f46e5',\r\n      fontSize: '14px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    placeholder: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      fontSize: '14px',\r\n      color: '#6b7280',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    dropdownIndicator: (base) => ({\r\n      ...base,\r\n      fontFamily:localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      padding: '8px',\r\n    }),\r\n    menuPortal: (base) => ({ ...base, zIndex: 10000 }),\r\n    input: (base) => ({\r\n      ...base,\r\n      fontFamily:localStorage.getItem(\"language\") !== \"en\" && \"'CustomFont1', sans-serif\",\r\n      textAlign: isRTL ? 'right' : 'left',\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`mt-3`} \r\n      style={{ width }}\r\n      dir={isRTL ? 'rtl' : 'ltr'}\r\n    >\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={updatedOptions}\r\n        getOptionLabel={(option) => option.name}\r\n        getOptionValue={(option) => option.id}\r\n        placeholder={formatMessage({ id: 'select.placeholder' }) || (isRTL ? 'انتخاب کنید...' : 'Select...')}\r\n        isClearable={false}\r\n        isSearchable={false}\r\n        isDisabled={isDisabled}\r\n        menuPortalTarget={document.body}\r\n        styles={customStyles}\r\n        components={{\r\n          DropdownIndicator: ({ innerProps }) => (\r\n            <div {...innerProps} className={isRTL ? 'pl-2 text-gray-500' : 'pr-2 text-gray-500'}>\r\n              <ChevronDown size={20} />\r\n            </div>\r\n          ),\r\n          ClearIndicator: null,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nListBox.propTypes = {\r\n  isDisabled: PropTypes.bool,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      name: PropTypes.node.isRequired,\r\n    })\r\n  ),\r\n  selectedOption: PropTypes.object,\r\n  setSelectedOption: PropTypes.func.isRequired,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nListBox.defaultProps = {\r\n  isDisabled: false,\r\n  options: [],\r\n  selectedOption: null,\r\n  width: '100%',\r\n};\r\n\r\nexport default ListBox;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gregorianToJalali = exports.jalaliToGregorian = void 0;\nvar shamsi = require(\"shamsi\");\nvar gtj = shamsi.gregorianToJalali, jtg = shamsi.jalaliToGregorian;\nexports.jalaliToGregorian = jtg;\nfunction gregorianToJalali(yearOrDate, month, day) {\n    if (typeof yearOrDate !== 'number') {\n        var date = new Date(yearOrDate);\n        var y = date.getFullYear();\n        var m = (date.getMonth() + 1);\n        var d = date.getDate();\n        return gtj(y, m, d);\n    }\n    else {\n        return gtj(yearOrDate, month, day);\n    }\n}\nexports.gregorianToJalali = gregorianToJalali;\n","import React from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\n\r\nconst Combo_Customer = ({ \r\n  isEditable = false, \r\n  options, \r\n  Onsearch, \r\n  selectedOption, \r\n  // readOnly, \r\n  setSelectedOption, \r\n  searchQuery, \r\n  handleInputChange \r\n}) => {\r\n  const handleChange = (sselectedOption) => {\r\n    setSelectedOption(sselectedOption);\r\n    Onsearch(sselectedOption);\r\n  };\r\n\r\n//   const CustomMenuList = (props) => (\r\n//     <components.MenuList {...props}>\r\n//       {props.children}\r\n//       {type && (\r\n//         <div\r\n//           style={{\r\n//             display: \"flex\",\r\n//             justifyContent: \"center\",\r\n//             padding: \"10px\",\r\n//             borderTop: \"1px solid #eaeaea\",\r\n//             cursor: \"pointer\",\r\n//             backgroundColor: \"#f9f9f9\",\r\n//           }}\r\n//           onClick={() => setAddAccountModal(searchQuery)}\r\n//         >\r\n//           <strong>{name}</strong>\r\n//         </div>\r\n//       )}\r\n//     </components.MenuList>\r\n//   );\r\nconst { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <div className=\"w-40\">\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        inputValue={searchQuery}\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={options}\r\n        onInputChange={handleInputChange}\r\n        getOptionLabel={(option) => (\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n              <span>{`${option.account_name} ${option.moneyType}`}</span>\r\n            </div>)}\r\n        getOptionValue={(option) => `${option.account_name} ${option.moneyType}`}\r\n        // placeholder=\"Search...\"\r\n        placeholder={formatMessage({ id: \"Search...\" })}\r\n        isClearable\r\n        isSearchable\r\n        isDisabled={isEditable}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Combo_Customer;\r\n","import React, { useEffect, useState,useCallback } from 'react';\r\nimport Select ,{components}from 'react-select';\r\n\r\nconst ComboBox = ({isEditable=false,name, options,type,Onsearch,selectedOption,setSelectedOption,setAddBalanceModal}) => {\r\n  const handleChange = (selectedOption) => {\r\n      setSelectedOption(selectedOption);\r\n      Onsearch(selectedOption);\r\n};\r\nconst CustomMenuList = (props) => {\r\n  return (\r\n    <components.MenuList {...props}>\r\n      {props.children}\r\n     {type &&<div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          padding: \"10px\",\r\n          borderTop: \"1px solid #eaeaea\",\r\n          cursor: \"pointer\",\r\n          backgroundColor: \"#f9f9f9\",\r\n        }}\r\n        onClick={()=>setAddBalanceModal(true)}\r\n      >\r\n        {/* <strong>Add \"{searchQuery}\"</strong> */}\r\n        <strong>{name}</strong>\r\n      </div>}\r\n    </components.MenuList>\r\n  );\r\n};\r\n  return (\r\n    <div className='w-40'>\r\n      <Select\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={options}\r\n        getOptionLabel={(option) => (\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <span>{`${option.account_name} ${option.moneyType}`}</span>\r\n          </div>)}\r\n        getOptionValue={(option) => `${option.account_name} ${option.moneyType}`}\r\n        placeholder=\"Search...\"\r\n        isClearable\r\n        components={{ MenuList: CustomMenuList }}\r\n        isSearchable\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComboBox;\r\n"],"names":["_ref","isEditable","name","type","options","Onsearch","selectedOption","setAddAccountModal","setSelectedOption","searchQuery","handleInputChange","customStyles","menuPortal","base","_objectSpread","zIndex","formatMessage","useIntl","_jsx","className","children","Select","classNamePrefix","inputValue","value","onChange","sselectedOption","onInputChange","getOptionLabel","option","style","display","alignItems","concat","getOptionValue","placeholder","id","isClearable","components","MenuList","props","_jsxs","justifyContent","padding","borderTop","cursor","backgroundColor","onClick","isSearchable","isDisabled","menuPortalTarget","document","body","styles","Datepicker","handle_date","settings","default_value","lebal","onKeyDown","selectedDay","setSelectedDay","useState","htmlFor","InputDatePicker","date","handl","year","_a","month","day","inputPlaceholder","locale","colorPrimary","maximumDate","minimumDate","account_name","moneyType","Object","defineProperty","exports","jalaliToGregorian","gregorianToJalali","gy","gm","gd","jy","jm","jd","gy2","days","salA","parseInt","Edit_withdraw","MainDW","setMainDW","Edit_Deposit","closeEdit","open","EndDateE","account","inputRef","setEditDeposit","Diversity","setDiversity","belance","setbelance","records","setRecords","showAlert","useShowAlert","moneyid","setmoneyid","useDispatch","selectedBelance","setselectedBelance","moneyId","user","date_created","idbelance","setidbelance","moneytype","setmoneytype","username","setusername","moneyname","setmoneyname","handleAll","e","target","prev","handleKeyDown","key","preventDefault","buttonRef","current","click","useRef","add","setadd","user_name","delete","bbelance","setbbelance","smoney","setsmeony","nmoney","setnmoney","SearchQueryTo","setSearchQueryTo","useEffect","length","async","response","axios","get","Source","getAddress","headers","Authorization","localStorage","getItem","params","query","do","data","error","fetchData","dir","overflowX","overflowY","transition","transitionDuration","flexWrap","margin","width","fontSize","FormattedMessage","for","ComboBoxT","setSearchQuery","newValue","row","prevState","Datepicker_Customer","jalaliDate","now","jalaali","Date","String","getHours","padStart","getMinutes","t","isoString","toISOString","maxWidth","ref","amount","class","discription","_method","post","then","res","prevRecords","map","record","report","position","icon","title","showConfirmButton","timer","catch","err","put","Submit_Edit","formatNumber","number","toLocaleString","Withdraw","statuss","useSelector","state","selecteduser","setSelecteduser","users","statusu","namesearch","setnameSearch","Date_Start","setDate_start","Date_End","setDate_end","withdraw","setwithdraw","selectedDayE","setSelectedDayE","moment","setEndDateE","OpenEdit","setOpenEdit","EditDeposit","customer","cash","user_id","setAddDeposite","AddDeposite","money1","setmoney","cach","openBelance","setOpenBelance","edit","setEdit","editAccount","setEditAccount","setId","setValue","StartDate","setStartDate","EndDate","setEndDate","Popup","setPopup","addAccountModal","columnsDesktop","selector","minWidth","textAlign","delete_report","border","height","src","Trash","columnsDesktopsimple","columnsTablet","sortable","PDcolumn","formattedValue","setFormattedValue","unformattedValue","setUnformattedValue","intl","useMemo","result","window","innerWidth","swalWithBootstrapButtons","Swal","customClass","confirmButton","cancelButton","buttonsStyling","fire","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","isConfirmed","update","isdelete","filter","prevBelance","a","dismiss","cancel","setAccount","selectedOption1","setSelectedOption1","d","formattedDate","hours","minutes","aa","formattedHours","formattedMinutes","format","select_user","setselect_user","isDesktop","setIsDesktop","setData","totalRows","setTotalRows","loading","setLoading","currentPage","setCurrentPage","perPage","setPerPage","page","pageSize","search","total","handleResize","addEventListener","removeEventListener","columns","reverse","inputRefd","inputElement","querySelector","setTimeout","focus","select","localization","pagination","rowsPerPage","previous","next","ComboBoxDeposite","belanceName","NumericFormat","thousandSeparator","replace","marginTop","SumbitReport","add_deposite","account_id","submitwithdraw","add_cash","item","moneys","ListBox","DataTable","progressPending","onRowClicked","news","isNaN","getTime","Error","setDate","getDate","getFullYear","getMonth","gregorianMoment","striped","responsive","highlightOnHover","paginationServer","paginationTotalRows","onChangePage","onChangeRowsPerPage","newPerPage","setselectedDay","Belance","close","accountbelance","AddAccount","Edit_account","Editefull","setEditeFull","setAccounts","accounts","money","dispatch","customers","errorc","statusc","getCustomers","Combo_Customer","find","p","i","r","push","isRTL","allUsersOption","updatedOptions","control","fontFamily","borderRadius","isFocused","boxShadow","minHeight","direction","menu","overflow","_ref2","isSelected","color","singleValue","fontWeight","dropdownIndicator","input","DropdownIndicator","_ref3","innerProps","ChevronDown","size","ClearIndicator","defaultProps","shamsi","require","gtj","yearOrDate","y","m","setAddBalanceModal"],"sourceRoot":""}