{"version":3,"file":"static/js/845.04b5e926.chunk.js","mappings":"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","sources":["pages/forms/Datepicker.js","pages/Items/forms/AddPurchase.js","pages/Items/forms/EditPurchase.js","pages/Items/Purchase.js","pages/Add_belance.js","pages/forms/ListBox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"jalaali-react-date-picker/lib/styles/index.css\";\r\nimport { InputDatePicker } from \"jalaali-react-date-picker\";\r\nimport moment, { months } from 'moment-timezone';\r\n\r\nexport default function Datepicker({ handle_date, settings,default_value ,lebal,onKeyDown}) {\r\n  const [selectedDay, setSelectedDay] = useState();\r\n  const handleDateChange = (date) => {\r\n    setSelectedDay(date);\r\n        if(date!=null){\r\n        const handl={year:date._a[0],month:date._a[1]+1,day:date._a[2]}\r\n      handle_date(handl);\r\n        }\r\n    };\r\n  return (\r\n    <div className=\"col-3 m-2 mt-3\"\r\n    >\r\n      <label htmlFor=\"\" className='p-0 m-0'>{lebal}</label>\r\n      <InputDatePicker\r\n      onKeyDown={onKeyDown}\r\n        value={selectedDay}\r\n        onChange={handleDateChange}\r\n        inputPlaceholder={settings[0].date === 'Persian' ? 'تاریخ را وارد کنید' : 'Enter the date'}\r\n        locale={settings[0].date === 'Persian' ? 'fa' : 'en'}\r\n        colorPrimary=\"#0fbcf9\"\r\n        maximumDate={{ year: 9999, month: 12, day: 31 }}\r\n        minimumDate={{ year: 1, month: 1, day: 1 }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Source from \"../../../Source\";\r\nimport axios from \"axios\";\r\nimport Datepicker_Customer from \"../../forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport jalaali from \"jalaali-js\";\r\nimport Combo_stock from \"../../forms/Combo_Customer\";\r\nimport Combo_stockps from \"../../psbox/Combo_Customer\";\r\nimport Combo_Customer from \"../../psbox/Combo_Customer\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useShowAlert  } from \"../../../warrper\";\r\n\r\n// React\r\nimport { useSelector } from 'react-redux';\r\n\r\n// MUI components\r\nimport {\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n  FormControlLabel,\r\n  Switch,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TableContainer,\r\n  Paper,\r\n} from '@mui/material';\r\n\r\nimport { Plus, SunDim, Trash2, X } from 'lucide-react';\r\nimport { NumericFormat } from 'react-number-format';\r\n\r\nexport default function AddPurchase({\r\n  settings,\r\n  setsettings,\r\n  AddItemModal,\r\n  close,\r\n  options1,\r\n  records,\r\n  setRecords,\r\n  belance,\r\n  moneys,\r\n  setAddBalanceModal,\r\n  \r\n}) {\r\n  const showAlert = useShowAlert(); \r\n  const { sidebars } = useSelector((state) => state.sidebars);\r\n    const { formatMessage } = useIntl();\r\n    const [selectedDay, setSelectedDay] = useState(moment());\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [selectedOption1, setSelectedOption1] = useState();\r\n  const [EndDate, setEndDate] = useState(moment());\r\n  const [account, setaccount] = useState(false);\r\n  const [ExestQty,setExestQty] = useState(0);\r\n  const [update, setupdate] = useState({ id: 0, belance: 0 });\r\n  const [selectedOptionAccount, setSelectedOptionAccount] = useState([]);\r\n  \r\n  const [AddItem, setAddItem] = useState({\r\n    stocks_id: \"\",\r\n    qty: null,\r\n    weight: null,\r\n    dateInsert: new Date().toISOString(),\r\n    rate: null,\r\n    user_id: localStorage.getItem(\"userTokenid\"),\r\n    purchase_price:null,\r\n    description: \"\",\r\n    sell_price: null,\r\n    expiry_date: new Date().toISOString(),\r\n    accounts_id: \"\",\r\n    money: \"\",\r\n    stock: { name: \"\" },\r\n    e_id: 1,\r\n  });\r\n  const [shopingcart, setshopingcart] = useState([]);\r\n  const [TotalAmount, setTotalAmount] = useState(0);\r\n\r\n\r\n  const Onsearch = (e) => {\r\n    if (e) {\r\n      setupdate({\r\n        ...update,\r\n        id: e.id,\r\n      });\r\n      setAddItem({\r\n        ...AddItem,\r\n        money: e.type_id,\r\n      });\r\n    }\r\n  };\r\n  const algorithm = (e) => {\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        accounts_id: e.id,\r\n      });\r\n    }\r\n  };\r\n  const algorithm1 = (e) => {\r\n    setSelectedOption1(e);\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        stocks_id: e.id,\r\n        stock: e,\r\n      });\r\n    }\r\n  };\r\n  const handle_date = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setAddItem({\r\n        ...AddItem,\r\n        dateInsert: isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (localStorage.getItem(\"date\") === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n\r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n\r\n  const capitalizeWords = (text) => {\r\n    return text\r\n      .toLowerCase() // همه حروف را کوچک کنید\r\n      .split(\" \") // متن را به آرایه‌ای از کلمات تقسیم کنید\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1)) // حروف اول هر کلمه را بزرگ کنید\r\n      .join(\" \"); // کلمات را به هم وصل کنید\r\n  };\r\n\r\n  const generateInvoicePDF = (id) => {\r\n    // Function to format date (with Persian date support)\r\n    const dateObj = new Date(selectedDay);\r\n    let formattedDate = `${dateObj.getFullYear()}-${String(\r\n        dateObj.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(dateObj.getDate()).padStart(2, \"0\")}`;\r\n    const hours = dateObj.getHours();\r\n    const minutes = dateObj.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    let aa = ampm;\r\n\r\n    if (settings[0].date === \"Persian\") {\r\n        moment.locale(\"fa\");\r\n        formattedDate = moment(selectedDay).format(\"jYYYY/jMM/jDD\");\r\n    } else {\r\n        moment.locale(\"en\");\r\n    }\r\n    formattedDate = `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n\r\n    // Get the company image URL\r\n    const imageUrl = settings[0]?.company_pic;\r\n    let imageSrc = \"\";\r\n    if (imageUrl) {\r\n        const fileName = imageUrl.split(\"/\").pop();\r\n        imageSrc = Source.getAddress() + \"/api/getImage/\" + fileName;\r\n    }\r\n\r\n    // Generate the HTML content\r\n    const invoiceHTML = `\r\n    <html>\r\n        <head>\r\n            <title>Invoice</title>\r\n            <style>\r\n                body {\r\n                    font-family: Helvetica, sans-serif;\r\n                    font-size: 12px;\r\n                }\r\n\r\n                .invoice-container {\r\n                    width: 210mm;\r\n                    height: auto;\r\n                    padding: 10mm;\r\n                    box-sizing: border-box;\r\n                    background: #fff;\r\n                }\r\n\r\n                .header {\r\n                    text-align: center;\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .invoice-details {\r\n                    margin-bottom: 15px;\r\n                }\r\n\r\n                table {\r\n                    width: 100%;\r\n                    border-collapse: collapse;\r\n                    border: 1px solid #000;\r\n                }\r\n\r\n                th,\r\n                td {\r\n                    border: 1px solid #000;\r\n                    padding: 5px;\r\n                    text-align: left;\r\n                }\r\n\r\n                th {\r\n                    background-color: rgb(11, 105, 255);\r\n                    color: #fff;\r\n                    font-size: 12px;\r\n                }\r\n\r\n                td {\r\n                    font-size: 12px;\r\n                    color: #000;\r\n                }\r\n\r\n                .amount-details {\r\n                    text-align: right;\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .footer {\r\n                    text-align: center;\r\n                }\r\n\r\n                .logo {\r\n                    position: absolute;\r\n                    top: 10px;\r\n                    right: 10px;\r\n                    width: 30mm;\r\n                }\r\n\r\n                .even-row {\r\n                    background-color: #f5f5f5;\r\n                }\r\n\r\n                .odd-row {\r\n                    background-color: #fff;\r\n                }\r\n            </style>\r\n        </head>\r\n\r\n        <body>\r\n            <div class=\"invoice-container\">\r\n                <div class=\"header\">\r\n                    <h1 style=\"font-size: 26px; font-weight: bold; color: rgb(11,105,255); margin: 0;\">Invoice</h1>\r\n                    <h2 style=\"font-size: 14px; margin: 5px 0; color: #000;\">${settings[0].company_name}</h2>\r\n                    </div>\r\n                    \r\n                    <div class=\"invoice-details\">\r\n                    <p style=\"font-size: 12px; margin: 0;\">Customer Name: ${selectedOption ? capitalizeWords(selectedOption.name) : \"N/A\"}</p>\r\n                    <p style=\"font-size: 14px; color: rgb(11,105,255); margin: 0;\">Invoice Number: ${id}</p>\r\n                    <p style=\"font-size: 12px; margin: 0;\">Date: ${formattedDate}</p>\r\n                </div>\r\n\r\n                <hr style=\"border: 0; border-top: 1px solid #000; margin-bottom: 15px;\">\r\n\r\n                <div style=\"margin-bottom: 20px;\">\r\n                    <table style=\"width: 100%; border-collapse: collapse;\" border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\r\n                        <thead style=\"background-color: rgb(11,105,255); font-size: 12px;\">\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>Name</th>\r\n                                <th>Quantity</th>\r\n                                <th>Price</th>\r\n                                <th>Total</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style=\"font-size: 12px; color: #000;\">\r\n                            ${shopingcart\r\n                                .map(\r\n                                    (row, index) => `\r\n                                    <tr class=\"${index % 2 === 0 ? 'odd-row' : 'even-row'}\">\r\n                                        <td>${index+1}</td>\r\n                                        <td>${row.stock.name}</td>\r\n                                        <td>${row.qty}</td>\r\n                                        <td>${row.purchase_price} ${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}</td>\r\n                                        <td>${row.purchase_price * row.qty} ${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}</td>\r\n                                    </tr>\r\n                                `\r\n                                )\r\n                                .join(\"\")}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"amount-details\">\r\n                    <p style=\"margin: 0;\">Total Amount: ${TotalAmount} ${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}</p>\r\n                    <p style=\"margin: 0;\">Paid Amount: ${PaidAmount ? PaidAmount : \"0.00\"} ${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}</p>\r\n                    <p style=\"margin: 0;\">Balance: ${update.belance} ${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}</p>\r\n                </div>\r\n\r\n                <hr style=\"border: 0; border-top: 1px solid #000; margin-bottom: 15px;\">\r\n\r\n                <div class=\"footer\">\r\n                    <p style=\"margin: 0;\">Address: ${settings[0].address}</p>\r\n                    <p style=\"margin: 0;\">Phone: ${settings[0].phone}</p>\r\n                    <p style=\"margin: 0;\">Email: ${settings[0].email}</p>\r\n                </div>\r\n                 ${imageSrc ? `<img class=\"logo\"  src=\"${imageSrc}\" alt=\"Company Logo\"/>` : ''}\r\n            </div>\r\n        </body>\r\n    </html>\r\n`;\r\n\r\n\r\n\r\n    // Open a new tab/window\r\n    const printWindow = window.open('', '_blank');\r\n    if (printWindow) {\r\n        printWindow.document.open();\r\n        printWindow.document.write(invoiceHTML);\r\n        printWindow.document.close();\r\n\r\n        // Wait for content to load in the new window\r\n        printWindow.onload = () => {\r\n            printWindow.focus(); // Focus on the new window\r\n            printWindow.print(); // Open the print dialog\r\n            printWindow.close(); // Close the new window\r\n        };\r\n    } else {\r\n        alert('Please allow pop-ups for this website to print the invoice.');\r\n    }\r\n};\r\n\r\n  const Sumbit = (flag) => {\r\n    if (!Exesting && update.belance != 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title: \"You don't have enough belance!\",\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    if (!selectedOptionmoney || !selectedOption || shopingcart.length <= 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title: \"You must fill the item input!\",\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    let arr = [];\r\n    shopingcart.forEach((key) => {\r\n      arr.push({\r\n        stocks_id: key.stocks_id,\r\n        qty: key.qty,\r\n        weight: key.weight,\r\n        dateInsert: key.dateInsert,\r\n        rate: key.rate,\r\n        user_id: key.user_id,\r\n        purchase_price: key.purchase_price,\r\n        description: key.description,\r\n        sell_price: 0,\r\n        expiry_date: key.expiry_date,\r\n        accounts_id: key.accounts_id,\r\n      });\r\n    });\r\n    let add = { arr: arr };\r\n    let selectedMoney=selectedOptionmoney;\r\n    let selectedop=selectedOption;\r\n    let pa = PaidAmount;\r\n    let ta=TotalAmount;\r\n    let sd=selectedDay;\r\n    setSelectedOptionmoney(null);\r\n        setshopingcart([]);\r\n        setSelectedDay(moment());\r\n        setSelectedOption(null);\r\n        setupdate({ id: 0, belance: 0 });\r\n        setTotalAmount(0);\r\n        setPaidAmount(0);\r\n        setExestQty(0);\r\n    axios\r\n      .post(Source.getAddress() + \"/api/purchase\", add, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {\r\n          Exesting: Exesting ? \"ok\" : \"no\",\r\n          money: selectedMoney.id || 0,\r\n          accounts_id:selectedop ? (selectedop.id!==0 ? selectedop.id :'no') : 'no',\r\n          PaidAmount: pa ? pa : 0,\r\n          TotalAmount: ta,\r\n          CustomerName: selectedop.name,\r\n          DateInsert: sd,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        let result = res.data.bill;\r\n        if (flag) {\r\n          generateInvoicePDF(result.id);\r\n        }\r\n        result[\"money\"] = selectedMoney;\r\n        if(Exesting){\r\n          result['accounts']={account:selectedop};\r\n        }\r\n        let add = {\r\n          purchase: shopingcart,\r\n          bill: res.data.bill,\r\n          money: selectedMoney,\r\n        };\r\n        setRecords([add, ...records]);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: <FormattedMessage id=\"Your record has been added!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title:  <FormattedMessage id=\"You must enter the customer name!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      });\r\n  };\r\n  const AddtoTable = () => {\r\n    // بررسی اینکه تمام فیلدهای ضروری پر شده‌اند\r\n    const weight = AddItem.weight;\r\n    const qty = AddItem.qty ? parseInt(AddItem.qty) : 0;\r\n    const purchasePrice = AddItem.purchase_price ? parseFloat(AddItem.purchase_price) : 0;\r\n    if (!qty || !purchasePrice || !selectedOption1||!weight) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title:  <FormattedMessage id=\"Please select an item and fill the quantity and price!\" />,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    // اطمینان از مقدار مثبت برای موجودی\r\n    if (qty <= 0 || purchasePrice <= 0) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        // title: \"Quantity and price must be positive values!\",\r\n                  title:  <FormattedMessage id=\"Quantity and price must be positive values!\" />,\r\n        \r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    // ایجاد نسخه کپی از AddItem و selectedOption1\r\n    const addto = { ...AddItem, item: { ...selectedOption1 } };\r\n    addto.item.qty = selectedOption1.qty\r\n      ? qty + parseInt(selectedOption1.qty)\r\n      : qty;\r\n  \r\n    // افزودن آیتم به سبد خرید\r\n    setshopingcart((prev) => [...prev, addto]);\r\n  \r\n    // به‌روزرسانی مقادیر کل\r\n    setTotalAmount((prev) => prev + qty * purchasePrice*weight);\r\n    setPaidAmount((prev) => prev + qty * purchasePrice*weight);\r\n  \r\n    // بازنشانی مقدار AddItem\r\n    setAddItem({\r\n      stocks_id: \"\",\r\n      qty: \"\",\r\n      weight: null,\r\n      dateInsert: new Date().toISOString(),\r\n      rate: null,\r\n      user_id: localStorage.getItem(\"userTokenid\"),\r\n      purchase_price: \"\",\r\n      description: \"\",\r\n      sell_price: null,\r\n      expiry_date: new Date().toISOString(),\r\n      accounts_id: \"\",\r\n      money: \"\",\r\n      stock: { name: \"\" },\r\n      e_id: AddItem.e_id + 1,\r\n    });\r\n  \r\n    // بازنشانی selectedOption1\r\n    setSelectedOption1(null);\r\n  };\r\n  \r\n  const AddAccountModal = (name) => {\r\n    let add = { name: name,\r\n      user_id:localStorage.getItem('userTokenid')\r\n     };\r\n    axios\r\n      .post(Source.getAddress() + \"/api/customers\", add, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setSelectedOption(res.data.customer);\r\n        setOptions([res.data.customer,...options]);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: \"Customer has been created!\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n        // dispatch(addCustomerToCache(res.data.customer))\r\n        \r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"Sosmething went wrong!\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      });\r\n      // dispatch(getCustomers());\r\n  };\r\n  const handleItem = (e) => {\r\n    setAddItem({\r\n      ...AddItem,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [options, setOptions] = useState([]);\r\n  // const [options1, setOptions1] = useState(stocks);\r\n  const handleSearch = async (query) => {\r\n    if (!Exesting) {\r\n          if (query) {\r\n            setAddItem({\r\n              ...AddItem,\r\n              temp_customer: query,\r\n            });\r\n            setSelectedOption({ id: null, name: query });\r\n          }\r\n    }\r\n  };\r\n\r\n  const handleSearch1 = async (query) => {\r\n  };\r\n  const handleInputChange = (newValue) => {\r\n    setSearchQuery(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const handleInputChange1 = (newValue) => {\r\n    setSearchQuery1(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch1(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchQuery1, setSearchQuery1] = useState(\"\");\r\n\r\n  const [selectedOptionmoney, setSelectedOptionmoney] = useState({ name: \"\" });\r\n  const algorithmmoney = (e) => {\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        money: e.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const Deleteshopingcart = (e) => {\r\n    setupdate({\r\n      ...update,\r\n      belance:update.belance - e.qty * e.sell_price\r\n    })\r\n    setTotalAmount((prev) => prev - e.qty * e.purchase_price*e.weight);\r\n    setPaidAmount((prev) => prev - e.qty * e.purchase_price*e.weight);\r\n    setshopingcart((prev) => prev.filter((pre) => pre.e_id !== e.e_id));\r\n  };\r\n  const buttonRef = useRef(null);\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if (buttonRef.current && AddItemModal) {\r\n        buttonRef.current.click();\r\n      }\r\n    }\r\n  };\r\n  const [PaidAmount, setPaidAmount] = useState(0);\r\n  const handlepaid = (e) => {\r\n    setPaidAmount(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (!PaidAmount) {\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: -TotalAmount,\r\n      }));\r\n    } else {\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: PaidAmount - TotalAmount || 0,\r\n      }));\r\n    }\r\n\r\n    // }\r\n  }, [PaidAmount, TotalAmount, shopingcart]);\r\n  const [Exesting, setExesting] = useState();\r\n// console.log(users);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${Source.getAddress()}/api/customers`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: { query:searchQuery ,do:'ok'}, // ارسال پارامتر جستجو به سرور\r\n        });\r\n        const data = response.data;\r\n        setOptions(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n  \r\n    if(searchQuery){\r\n      if (!searchQuery || searchQuery?.length < 3) {\r\n        setOptions([]);\r\n        return;\r\n      }else{\r\n    if (Exesting) {\r\n        fetchData();}\r\n      }\r\n    }\r\n  }, [searchQuery]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n    return (\r\n   <Box\r\n      dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 1200, // حداکثر عرض استاندارد برای فرم\r\n        overflowX: \"auto\",\r\n        overflowY: \"auto\",\r\n        height: \"75vh\",\r\n        bgcolor: \"#f8f9fa\",\r\n        p: 2,\r\n        borderRadius: 2,\r\n        mx: \"auto\", // مرکز کردن فرم\r\n      }}\r\n      className={`popup transition ${account && \"sellpurchase\"} ${AddItemModal ? \"show\" : \"\"}`}\r\n    >\r\n      {/* Header */}\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt={2} mb={2}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          align=\"center\"\r\n          sx={{ bgcolor: \"info.main\", color: \"#fff\", p: 1, borderRadius: 1, flexGrow: 1, fontSize: \"1.1rem\" }}\r\n        >\r\n          <FormattedMessage id=\"Add Purchase\" />\r\n        </Typography>\r\n        <IconButton onClick={close} aria-label=\"Close\" sx={{ ml: 2 }}>\r\n          <X size={24} />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      {/* Customer Info Section */}\r\n      <Box boxShadow={2} p={2} borderRadius={2} mb={3}>\r\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\" mb={2}>\r\n          <FormattedMessage id=\"Customer Info\" />\r\n        </Typography>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection={{ xs: \"column\", md: \"row\" }}\r\n          gap={3}\r\n          alignItems=\"center\"\r\n          flexWrap=\"wrap\"\r\n        >\r\n          {/* Exesting Switch */}\r\n          <FormControlLabel\r\n            control={<Switch checked={Exesting} onChange={(e) => setExesting(e.target.checked)} />}\r\n            label={<FormattedMessage id=\"Exesting\" />}\r\n            sx={{ minWidth: 120 }}\r\n          />\r\n\r\n          {/* Customer Name Dropdown */}\r\n          <Box sx={{ flexGrow: 1, minWidth: 200 }}>\r\n            <Typography component=\"label\" fontWeight=\"bold\" fontSize=\"0.9rem\" mb={1} display=\"block\">\r\n              <FormattedMessage id=\"Customer Name\" />\r\n            </Typography>\r\n            <Combo_stock\r\n              name={<FormattedMessage id=\"Add Customer\" />}\r\n              setAddAccountModal={AddAccountModal}\r\n              type={Exesting}\r\n              searchQuery={searchQuery}\r\n              handleInputChange={handleInputChange}\r\n              setSelectedOption={setSelectedOption}\r\n              selectedOption={selectedOption}\r\n              options={options}\r\n              Onsearch={algorithm}\r\n              compactMode={true}\r\n            />\r\n          </Box>\r\n\r\n          {/* Currency Dropdown */}\r\n          <Box sx={{ flexGrow: 1, minWidth: 180 }}>\r\n            <Typography component=\"label\" fontWeight=\"bold\" fontSize=\"0.9rem\" mb={1} display=\"block\">\r\n              <FormattedMessage id=\"Currency\" />\r\n            </Typography>\r\n            <Combo_Customer\r\n            notCurrency={false}\r\n              isEditable={account}\r\n              setSelectedOption={setSelectedOptionmoney}\r\n              selectedOption={selectedOptionmoney}\r\n              options={moneys}\r\n              Onsearch={algorithmmoney}\r\n              compactMode={true}\r\n            />\r\n          </Box>\r\n          {/* Datepicker */}\r\n          <Box sx={{ minWidth: 180 }}>\r\n            <Datepicker_Customer\r\n              default_value={EndDate}\r\n              handle_date={handle_date}\r\n              lebal={<FormattedMessage id=\"Date\" />}\r\n              setSelectedDay={setSelectedDay}\r\n              selectedDay={selectedDay}\r\n              compactMode={true}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      {/* Item Info Section */}\r\n<Box\r\n  display=\"flex\"\r\n  flexDirection={{ xs: \"column\", md: \"row\" }}\r\n  gap={2}\r\n  alignItems=\"flex-end\"\r\n  flexWrap=\"wrap\"\r\n  sx={{\r\n    p: 2,\r\n    backgroundColor: 'background.paper',\r\n    borderRadius: 2,\r\n    boxShadow: 1\r\n  }}\r\n>\r\n  {/* Item Name */}\r\n  <Box sx={{ minWidth: 240, flexGrow: 1 }}>\r\n    <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\r\n      <FormattedMessage id=\"Item Name\" />\r\n    </Typography>\r\n    <Combo_stockps\r\n      searchQuery={searchQuery1}\r\n      setSearchQuery={setSearchQuery1}\r\n      handleInputChange={handleInputChange1}\r\n      handleSearch={handleSearch1}\r\n      setSelectedOption={algorithm1}\r\n      selectedOption={selectedOption1}\r\n      options={options1}\r\n      compactMode={true}\r\n      sx={{\r\n        '& .MuiOutlinedInput-root': {\r\n          height: 40\r\n        }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Quantity */}\r\n  <Box sx={{ width: 120 }}>\r\n    <NumericFormat\r\n      onKeyDown={handleKeyDown}\r\n      onValueChange={(values) => {\r\n        handleItem({ target: { name: \"qty\", value: values.value } });\r\n      }}\r\n      value={AddItem.qty}\r\n      customInput={TextField}\r\n      label={<FormattedMessage id=\"Quantity\" />}\r\n      size=\"small\"\r\n      fullWidth\r\n      thousandSeparator\r\n      allowNegative={false}\r\n      decimalScale={0}\r\n      InputProps={{\r\n        sx: { height: 40 }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Weight (Gold only) */}\r\n  {sidebars[0].type === \"gold\" && (\r\n    <Box sx={{ width: 160 }}>\r\n      <NumericFormat\r\n        value={AddItem.weight}\r\n        thousandSeparator=\",\"\r\n        decimalSeparator=\".\"\r\n        decimalScale={3}\r\n        name=\"weight\"\r\n        onValueChange={(values) => {\r\n          handleItem({ target: { name: \"weight\", value: values.value } });\r\n        }}\r\n        customInput={TextField}\r\n        label={<FormattedMessage id=\"Weight\" />}\r\n        size=\"small\"\r\n        fullWidth\r\n        allowNegative={false}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\" sx={{ color: \"text.secondary\" }}>\r\n              Gram\r\n            </InputAdornment>\r\n          ),\r\n          sx: { height: 40 }\r\n        }}\r\n      />\r\n    </Box>\r\n  )}\r\n\r\n  {/* Purchase Price */}\r\n  <Box sx={{ width: 140 }}>\r\n    <NumericFormat\r\n      onKeyDown={handleKeyDown}\r\n      onValueChange={(values) => {\r\n        handleItem({ target: { name: \"purchase_price\", value: values.value } });\r\n      }}\r\n      value={AddItem.purchase_price}\r\n      customInput={TextField}\r\n      label={<FormattedMessage id=\"Purchase Price\" />}\r\n      size=\"small\"\r\n      fullWidth\r\n      thousandSeparator\r\n      decimalScale={2}\r\n      allowNegative={false}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\" sx={{ color: \"text.secondary\" }}>\r\n            $\r\n          </InputAdornment>\r\n        ),\r\n        sx: { height: 40 }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Total Amount */}\r\n  <Box sx={{ width: 160 }}>\r\n    <NumericFormat\r\n      value={AddItem.qty * AddItem.purchase_price * (AddItem.weight || 1)}\r\n      customInput={TextField}\r\n      label={<FormattedMessage id=\"Total Amount\" />}\r\n      size=\"small\"\r\n      fullWidth\r\n      thousandSeparator\r\n      decimalScale={2}\r\n      InputProps={{ \r\n        readOnly: true,\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\" sx={{ color: \"text.secondary\" }}>\r\n            $\r\n          </InputAdornment>\r\n        ),\r\n        sx: { \r\n          height: 40,\r\n          backgroundColor: 'action.selected' \r\n        }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Existing Quantity */}\r\n  <Box sx={{ width: 140 }}>\r\n    <NumericFormat\r\n      value={selectedOption1 ? (selectedOption1.qty ? parseInt(AddItem.qty || 0) + parseInt(selectedOption1.qty) : \"\") : \"\"}\r\n      customInput={TextField}\r\n      label={<FormattedMessage id=\"Exest QTY\" />}\r\n      size=\"small\"\r\n      fullWidth\r\n      thousandSeparator\r\n      decimalScale={0}\r\n      InputProps={{ \r\n        readOnly: true,\r\n        sx: { \r\n          height: 40,\r\n          backgroundColor: 'action.selected' \r\n        }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Description */}\r\n  <Box sx={{ flexGrow: 1, minWidth: 240 }}>\r\n    <TextField\r\n      name=\"description\"\r\n      multiline\r\n      minRows={2}\r\n      value={AddItem.description}\r\n      onChange={handleItem}\r\n      label={<FormattedMessage id=\"Description\" />}\r\n      size=\"small\"\r\n      fullWidth\r\n      InputProps={{\r\n        sx: { \r\n          alignItems: 'flex-start',\r\n          height: 'auto'\r\n        }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Add Button */}\r\n  <Button\r\n    onClick={() => AddtoTable()}\r\n    variant=\"contained\"\r\n    color=\"primary\"\r\n    size=\"medium\"\r\n    startIcon={<Plus size={18} />}\r\n    sx={{ \r\n      height: 40,\r\n      minWidth: 120,\r\n      fontWeight: 'bold',\r\n      textTransform: 'none',\r\n      boxShadow: 'none',\r\n      '&:hover': {\r\n        boxShadow: 'none'\r\n      }\r\n    }}\r\n  >\r\n    <FormattedMessage id=\"Add\" />\r\n  </Button>\r\n</Box>\r\n      {/* Bottom Section */}\r\n      <Box display=\"flex\" flexDirection={{ xs: \"column\", md: \"row\" }} gap={3}>\r\n        <Box flex={2} pr={{ md: 2 }}>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            sx={{ bgcolor: \"info.main\", color: \"#fff\", p: 1, borderRadius: 1, fontSize: \"1rem\", mb: 1 }}\r\n            align=\"center\"\r\n          >\r\n            <FormattedMessage id=\"Purchase stocks\" />\r\n          </Typography>\r\n          <TableContainer component={Paper} sx={{ maxHeight: 320 }}>\r\n            <Table size=\"small\" stickyHeader>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell sx={{ width: \"5%\" }}><FormattedMessage id=\"ID\" /></TableCell>\r\n                  <TableCell sx={{ width: \"20%\" }}><FormattedMessage id=\"Name\" /></TableCell>\r\n                  <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"Quantity\" /></TableCell>\r\n                 {sidebars[0].type==='gold' && <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"weight\" /></TableCell>}\r\n                  <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"Price\" /></TableCell>\r\n                  <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"Total\" /></TableCell>\r\n                  <TableCell sx={{ width: \"30%\" }}><FormattedMessage id=\"Description\" /></TableCell>\r\n                  <TableCell sx={{ width: \"5%\" }}><FormattedMessage id=\"Delete\" /></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {shopingcart && shopingcart.map((row, idx) => (\r\n                  <TableRow key={idx}>\r\n                    <TableCell>{row.e_id}</TableCell>\r\n                    <TableCell>{row.stock.name}</TableCell>\r\n                    <TableCell>{row.qty}</TableCell>\r\n                    {sidebars[0].type==='gold'&&< TableCell>{row.weight}</TableCell>}\r\n                    <TableCell>{row.purchase_price}</TableCell>\r\n                    <TableCell>{row.purchase_price * row.qty}</TableCell>\r\n                    <TableCell>{row.description}</TableCell>\r\n                    <TableCell>\r\n                      <IconButton onClick={() => Deleteshopingcart(row)}>\r\n                        <Trash2 size={18} />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n        <Box flex={1} pl={{ md: 2 }} marginTop={2}>\r\n          <TextField\r\n            value={TotalAmount}\r\n            label={<FormattedMessage id=\"Total Amount\" />}\r\n            InputProps={{ readOnly: true }}\r\n            size=\"small\"\r\n            fullWidth\r\n            sx={{ mb: 1 }}\r\n          />\r\n          <TextField\r\n            value={PaidAmount}\r\n            onChange={handlepaid}\r\n            InputProps={{ readOnly: !Exesting }}\r\n            label={<FormattedMessage id=\"Paid Amount\" />}\r\n            size=\"small\"\r\n            fullWidth\r\n            sx={{ mb: 1 }}\r\n          />\r\n          <TextField\r\n            value={update.belance}\r\n            InputProps={{ readOnly: true }}\r\n            label={<FormattedMessage id=\"Remain Balance\" />}\r\n            size=\"small\"\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <Box display=\"flex\" justifyContent=\"center\" gap={2}>\r\n            <Button variant=\"outlined\" color=\"error\" size=\"medium\" onClick={close}>\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"success\" size=\"medium\" onClick={() => Sumbit(false)}>\r\n              <FormattedMessage id=\"Submit\" />\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"success\" size=\"medium\" onClick={() => Sumbit(true)}>\r\n              <FormattedMessage id=\"Print And Save\" />\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n);\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Source from \"../../../Source\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport Profile from \"../../../assets/icon/profile.png\";\r\nimport IdNational from \"../../../assets/icon/national_id.png\";\r\nimport Datepicker_Customer from \"../../forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport jalaali from \"jalaali-js\";\r\nimport Combo_stock from \"../../forms/Combo_Customer\";\r\nimport Combo_stockps from \"../../psbox/Combo_Customer\";\r\nimport Combo_item from \"../../forms/Combo_Customer\";\r\nimport Additem from \"./AddItem\";\r\nimport Money from \"../../Money\";\r\nimport Combo_Customer from \"../../forms/Combo_Customer\";\r\nimport ComboBox from \"../../forms/ComboBox\";\r\nimport Trash from \"../../../assets/icon/trash.png\";\r\nimport Print from \"../../../assets/icon/print.png\";\r\nimport Add from \"../../../assets/icon/add.png\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { getCustomers } from \"../../Redux/customerSlice\";\r\nimport { showAlert } from \"../../../warrper\";\r\nimport { getSettings } from \"../../Redux/settingSlice\";\r\nimport AddAddress from \"../../../assets/icon/address.png\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport { useShowAlert  } from \"../../../warrper\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n  FormControlLabel,\r\n  Switch,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TableContainer,\r\n  Paper,\r\n} from '@mui/material';\r\n\r\nimport { Plus, Trash2, X } from 'lucide-react';\r\nimport { NumericFormat } from 'react-number-format';\r\n\r\n// import Combo_stock from \"../../forms/Combo_stock\";\r\n\r\nexport default function EditPurchase({\r\n  records,\r\n  setRecords,\r\n  AddItemModal,\r\n  close,\r\n  money,\r\n  setmoney,\r\n  moneys,\r\n  Customer,\r\n  setCustomer,\r\n  shopingcart,\r\n  setshopingcart,Exesting,setExesting,options1, setOptions1\r\n}) {\r\n  // const [customer,setcustomer]=useState([]);\r\n    const { sidebars } = useSelector((state) => state.sidebars);\r\n  const showAlert = useShowAlert(); \r\n  const { formatMessage } = useIntl();\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  const [selectedDay1, setSelectedDay1] = useState(moment());\r\n  const [selectedOption, setSelectedOption] = useState({ name: \"\" });\r\n  const [selectedOption1, setSelectedOption1] = useState();\r\n  const dispatch=useDispatch();\r\n  const { customers, errorc,statusc } = useSelector((state) => state.customers);\r\n  const { settings, errors,statuss } = useSelector((state) => state.settings);\r\n    useEffect(() => {\r\n      // بررسی و بارگذاری `belances`\r\n      // if (!statusb && belances?.lenght ===0) {\r\n      //   dispatch(getBelances());\r\n      // }\r\n    \r\n      // // بررسی و بارگذاری `moneys`\r\n      // if (!statusm && moneys?.lenght ===0) {\r\n      //   dispatch(getMoneys());\r\n      // }\r\n    \r\n      // بررسی و بارگذاری `customers`\r\n      // if (!statusc && !customers) {\r\n      //   dispatch(getCustomers());\r\n      // }\r\n    \r\n      if(!statuss && !settings) {\r\n        dispatch(getSettings());\r\n      }\r\n    }, [dispatch,statusc]);\r\n  \r\n  const [EndDate, setEndDate] = useState(moment());\r\n  const [account, setaccount] = useState(false);\r\n  const [update, setupdate] = useState({ id: 0, belance: 0 });\r\n  const [selectedOptionAccount, setSelectedOptionAccount] = useState([]);\r\n  const [AddItem, setAddItem] = useState({\r\n    stocks_id: \"\",\r\n    qty: 0,\r\n    weight: 0,\r\n    dateInsert: new Date().toISOString(),\r\n    rate: 0,\r\n    user_id: localStorage.getItem(\"userTokenid\"),\r\n    purchase_price: 0,\r\n    description: \"Description\",\r\n    sell_price: 0,\r\n    expiry_date: new Date().toISOString(),\r\n    accounts_id: \"\",\r\n    money: \"\",\r\n    stock: { name: \"\" },\r\n    e_id: 1,\r\n  });\r\n  const [TotalAmount, setTotalAmount] = useState(0);\r\n  const [edit,setEdit]=useState(false);\r\n  useEffect(()=>{\r\n      if(Customer){\r\n        setSelectedOption({name:Customer.accounts ? Customer.accounts.account.name: Customer.temp_customer});\r\n        setSelectedOptionmoney(Customer.money);\r\n        setSelectedDay(moment(Customer.Inserdate));\r\n        setTotalAmount(Customer.total);\r\n        setPaidAmount(Customer.PaidAmount);\r\n      }\r\n      \r\n    },[Customer])\r\n\r\n  const Onsearch = (e) => {\r\n    if (e) {\r\n      setupdate({\r\n        ...update,\r\n        id: e.id,\r\n      });\r\n      setAddItem({\r\n        ...AddItem,\r\n        money: e.type_id,\r\n      });\r\n    }\r\n  };\r\n  const algorithm = (e) => {\r\n    setSelectedOption(e);\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        accounts_id: e.id,\r\n      });\r\n    }\r\n  };\r\n  const algorithm1 = (e) => {\r\n    setSelectedOption1(e);\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        stocks_id: e.id,\r\n        stock: e,\r\n      });\r\n    }\r\n  };\r\n  const handle_date = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setAddItem({\r\n        ...AddItem,\r\n        dateInsert: isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n  const capitalizeWords = (text) => {\r\n    return text\r\n      .toLowerCase() // همه حروف را کوچک کنید\r\n      .split(\" \") // متن را به آرایه‌ای از کلمات تقسیم کنید\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1)) // حروف اول هر کلمه را بزرگ کنید\r\n      .join(\" \"); // کلمات را به هم وصل کنید\r\n  };\r\n  const handle_date1 = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setAddItem({\r\n        ...AddItem,\r\n        expiry_date: isoString,\r\n      });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n  console.log(Customer);\r\n  const Sumbit=()=>{\r\n    \r\n    // }\r\n    // if (update.belance < 0) {\r\n    //   showAlert({\r\n    //     position: \"top-end\",\r\n    //     icon: \"error\",\r\n    //     title: \"You don't have enough money!\",\r\n    //     showConfirmButton: false,\r\n    //     timer: 1000,\r\n    //   });\r\n    //   return;\r\n    // }\r\n    let arr=[];\r\n    // console.log(shopingcart);\r\n    shopingcart.forEach((key) => {\r\n      arr.push({\r\n        stocks_id: key.stocks_id,\r\n        qty: key.qty,\r\n        weight: key.weight,\r\n        dateInsert: key.dateInsert,\r\n        rate: key.rate,\r\n        user_id: key.user_id,\r\n        purchase_price: key.purchase_price,\r\n        description: key.description,\r\n        sell_price: 0,\r\n        bill_id:key.bill_id||null,\r\n        expiry_date: key.expiry_date,\r\n        accounts_id: key.accounts_id,\r\n      })\r\n    });\r\n    let add={arr:arr,\r\n      _method:\"put\"\r\n    }\r\n    console.log(add);\r\n    axios\r\n      .post(Source.getAddress() + \"/api/purchase/\"+Customer.id,add, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {\r\n          Bill_id:Customer.id,\r\n          prevMoney:Customer.money_id,\r\n          primaryTotalAmount: Customer.total,\r\n          primaryPaidAmount: Customer.PaidAmount,\r\n          Accounts_id:Customer.accounts_id||'0',\r\n          Exesting: Exesting ? \"ok\" : \"no\",\r\n          money:selectedOptionmoney.id||0,\r\n          accounts_id:selectedOption.id ,\r\n          PaidAmount:PaidAmount ? PaidAmount : 0,\r\n          TotalAmount:TotalAmount,\r\n          CustomerName:selectedOption.name,\r\n          DateInsert:shopingcart[0].dateInsert\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        let result = res.data.bill;\r\n        result[\"money\"] = selectedOptionmoney;\r\n        result['accounts']={account:selectedOption};\r\n        let add = {\r\n          purchase: shopingcart,\r\n          bill: res.data.bill,\r\n          accounts: res.data.belance,\r\n        };\r\n        setRecords(prevRecords =>\r\n          prevRecords.map(record =>\r\n            record.bill.id === res.data.bill.id ? add : record\r\n          ));\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          // title: \"Stock has been created!\",\r\n                    title: <FormattedMessage id=\"Your record has been updated!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });})\r\n        .catch((err)=>{\r\n          console.log(err);\r\n          showAlert({\r\n                    position: \"top-end\",\r\n                    icon: \"error\",\r\n                    // title: \"Something went wrong!\",\r\n                                                      title: <FormattedMessage id=\"Not working ,please try again!\" />,\r\n                    showConfirmButton: false,\r\n                    timer: 1000,\r\n                  });\r\n        })\r\n  }\r\n  const AddtoTable = () => {\r\n      // بررسی اینکه تمام فیلدهای ضروری پر شده‌اند\r\n      const qty = AddItem.qty ? parseInt(AddItem.qty) : 0;\r\n      const weight = AddItem.weight ;\r\n      const purchasePrice = AddItem.purchase_price ? parseFloat(AddItem.purchase_price) : 0;\r\n    \r\n      if (!qty || !purchasePrice || !selectedOption1 ||weight) {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title:  <FormattedMessage id=\"Please select an item and fill the quantity and price!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n        return;\r\n      }\r\n    \r\n      // اطمینان از مقدار مثبت برای موجودی\r\n      if (qty <= 0 || purchasePrice <= 0) {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title:  <FormattedMessage id=\"Quantity and price must be positive values!\" />,\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n        return;\r\n      }\r\n    \r\n      // ایجاد نسخه کپی از AddItem و selectedOption1\r\n      const addto = { ...AddItem, item: { ...selectedOption1 } };\r\n      addto.item.qty = selectedOption1.qty\r\n        ? qty + parseInt(selectedOption1.qty)\r\n        : qty;\r\n        let nextId=shopingcart.length > 0 ? shopingcart[shopingcart.length-1].id +1 :1 ;\r\n\r\n      addto.id=nextId;\r\n      // console.log(addto);\r\n      // افزودن آیتم به سبد خرید\r\n      setshopingcart((prev) => [...prev, addto]);\r\n    \r\n      // به‌روزرسانی مقادیر کل\r\n      setTotalAmount((prev) => prev + qty * purchasePrice);\r\n      setPaidAmount((prev) => prev + qty * purchasePrice);\r\n    \r\n      // بازنشانی مقدار AddItem\r\n      setAddItem({\r\n        stocks_id: \"\",\r\n        qty: \"\",\r\n        weight: null,\r\n        dateInsert: new Date().toISOString(),\r\n        rate: null,\r\n        user_id: localStorage.getItem(\"userTokenid\"),\r\n        purchase_price: \"\",\r\n        description: \"\",\r\n        sell_price: null,\r\n        expiry_date: new Date().toISOString(),\r\n        accounts_id: \"\",\r\n        money: \"\",\r\n        stock: { name: \"\" },\r\n        e_id: AddItem.e_id + 1,\r\n      });\r\n    \r\n      // بازنشانی selectedOption1\r\n      setSelectedOption1(null);\r\n    };\r\n  const handleItem = (e) => {\r\n    setAddItem({\r\n      ...AddItem,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const [options, setOptions] = useState([]);\r\n  // const [options1, setOptions1] = useState([]);\r\n  const AddAccountModal = (name) => {\r\n    let add = { name: name };\r\n    axios\r\n      .post(Source.getAddress() + \"/api/customers\", add, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setSelectedOption(res.data.customer);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: \"Customer has been created!\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: \"Sosmething went wrong!\",\r\n          showConfirmButton: false,\r\n          timer: 1000,\r\n        });\r\n      });\r\n  };\r\n  const handleSearch = async (query) => {\r\n    if(!Exesting){\r\n      if(query){\r\n        setAddItem({\r\n          ...AddItem,\r\n          temp_customer:query\r\n        })\r\n        setSelectedOption({id:1,name:query});\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSearch1 = async (query) => {\r\n  };\r\n  const handleInputChange = (newValue) => {\r\n    setSearchQuery(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const handleInputChange1 = (newValue) => {\r\n    setSearchQuery1(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    handleSearch1(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchQuery1, setSearchQuery1] = useState(\"\");\r\n\r\n  const [selectedOptionmoney, setSelectedOptionmoney] = useState({ name: \"\" });\r\n  const algorithmmoney = (e) => {\r\n    if (e) {\r\n      setAddItem({\r\n        ...AddItem,\r\n        money: e.id,\r\n      });\r\n    }\r\n  };\r\n\r\n  const Deleteshopingcart = (e) => {\r\n    setTotalAmount((prev) => prev - e.qty * e.purchase_price*e.weight);\r\n    setPaidAmount((prev) => prev - e.qty * e.purchase_price*e.weight);\r\n    setshopingcart((prev) => prev.filter((pre) => pre.id !== e.id));\r\n  };\r\n  const buttonRef = useRef(null);\r\nconst handleKeyDown = (e) => {\r\n  if (e.key === \"Enter\") {\r\n    e.preventDefault();\r\n    if (buttonRef.current && AddItemModal) {\r\n      buttonRef.current.click();\r\n    }\r\n  }\r\n}\r\nconst  [PaidAmount,setPaidAmount]=useState();\r\nconst handlepaid=(e)=>{\r\n  setPaidAmount(e.target.value);\r\n};\r\nuseEffect(() => {\r\n    if(!PaidAmount){\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: TotalAmount,\r\n      }));  \r\n    }\r\n    else{\r\n      setupdate((prevState) => ({\r\n        ...prevState,\r\n        belance: TotalAmount - PaidAmount||0 ,\r\n      }));\r\n    }\r\n    \r\n  // }\r\n}, [PaidAmount, TotalAmount,shopingcart]);\r\n  const generateInvoicePDF = (id) => {// Function to format date (with Persian date support)\r\n    const dateObj = new Date(selectedDay);\r\n    let formattedDate = `${dateObj.getFullYear()}-${String(\r\n        dateObj.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(dateObj.getDate()).padStart(2, \"0\")}`;\r\n    const hours = dateObj.getHours();\r\n    const minutes = dateObj.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    let aa = ampm;\r\n    if (settings[0].date === \"Persian\") {\r\n        moment.locale(\"fa\");\r\n        formattedDate = moment(selectedDay).format(\"jYYYY/jMM/jDD\");\r\n    } else {\r\n        moment.locale(\"en\");\r\n    }\r\n    formattedDate = `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n    \r\n    // Get the company image URL\r\n    const imageUrl = settings[0]?.company_pic;\r\n    let imageSrc = \"\";\r\n    if (imageUrl) {\r\n        const fileName = imageUrl.split(\"/\").pop();\r\n        imageSrc = Source.getAddress() + \"/api/getImage/\" + fileName;\r\n    }\r\n    \r\n    // Determine language and text direction\r\n    const language = localStorage.getItem('language') || 'en';\r\n    const direction = language === 'pa' || language === 'da' ? 'rtl' : 'ltr';\r\n    const invoiceTitle = language === 'en' ? 'Invoice' : language === 'pa' ? 'رسید' : 'فاکتور';\r\n    const customerNameLabel = language === 'en' ? 'Customer Name' : language === 'pa' ? 'د پیریدونکي نوم' : 'نام مشتری';\r\n    const invoiceNumberLabel = language === 'en' ? 'Invoice Number' : language === 'pa' ? 'د رسید شمیره' : 'شماره فاکتور';\r\n    const dateLabel = language === 'en' ? 'Date' : language === 'pa' ? 'نیټه' : 'تاریخ';\r\n    const noLabel = language === 'en' ? 'No' : language === 'pa' ? 'شمیره' : 'شماره';\r\n    const nameLabel = language === 'en' ? 'Name' : language === 'pa' ? 'نوم' : 'نام';\r\n    const quantityLabel = language === 'en' ? 'Quantity' : language === 'pa' ? 'مقدار' : 'تعداد';\r\n    const priceLabel = language === 'en' ? 'Price' : language === 'pa' ? 'بیه' : 'قیمت';\r\n    const totalLabel = language === 'en' ? 'Total' : language === 'pa' ? 'مجموعه' : 'مجموع';\r\n    const totalAmountLabel = language === 'en' ? 'Total Amount' : language === 'pa' ? 'د مجموعه مقدار' : 'مبلغ کل';\r\n    const paidAmountLabel = language === 'en' ? 'Paid Amount' : language === 'pa' ? 'تادیه شوی مقدار' : 'مبلغ پرداخت شده';\r\n    const balanceLabel = language === 'en' ? 'Balance' : language === 'pa' ? 'پاته' : 'مانده';\r\n    const addressLabel = language === 'en' ? 'Address' : language === 'pa' ? 'آدرس' : 'آدرس';\r\n    const phoneLabel = language === 'en' ? 'Phone' : language === 'pa' ? 'تلیفون' : 'تلفن';\r\n    const emailLabel = language === 'en' ? 'Email' : language === 'pa' ? 'بریښنالیک' : 'ایمیل';\r\n    \r\n    // Generate the HTML content\r\n    const invoiceHTML = `\r\n    <html dir=\"${direction}\">\r\n        <head>\r\n            <title>${invoiceTitle}</title>\r\n            <style>\r\n                body {\r\n                    font-family: Helvetica, sans-serif;\r\n                    font-size: 12px;\r\n                    direction: ${direction};\r\n                }\r\n    \r\n                .invoice-container {\r\n                    width: 210mm;\r\n                    height: auto;\r\n                    padding: 10mm;\r\n                    box-sizing: border-box;\r\n                    background: #fff;\r\n                }\r\n    \r\n                .header {\r\n                    text-align: center;\r\n                    margin-bottom: 20px;\r\n                }\r\n    \r\n                .invoice-details {\r\n                    margin-bottom: 15px;\r\n                }\r\n    \r\n                table {\r\n                    width: 100%;\r\n                    border-collapse: collapse;\r\n                    border: 1px solid #000;\r\n                }\r\n    \r\n                th,\r\n                td {\r\n                    border: 1px solid #000;\r\n                    padding: 5px;\r\n                    text-align: ${direction === 'rtl' ? 'right' : 'left'};\r\n                }\r\n    \r\n                th {\r\n                    background-color: rgb(11, 105, 255);\r\n                    color: #fff;\r\n                    font-size: 12px;\r\n                }\r\n    \r\n                td {\r\n                    font-size: 12px;\r\n                    color: #000;\r\n                }\r\n    \r\n                .amount-details {\r\n                    text-align: ${direction === 'rtl' ? 'left' : 'right'};\r\n                    margin-bottom: 20px;\r\n                }\r\n    \r\n                .footer {\r\n                    text-align: center;\r\n                }\r\n    \r\n                .logo {\r\n                    position: absolute;\r\n                    top: 10px;\r\n                    ${direction === 'rtl' ? 'left' : 'right'}: 10px;\r\n                    width: 30mm;\r\n                }\r\n    \r\n                .even-row {\r\n                    background-color: #f5f5f5;\r\n                }\r\n    \r\n                .odd-row {\r\n                    background-color: #fff;\r\n                }\r\n            </style>\r\n        </head>\r\n    \r\n        <body>\r\n            <div class=\"invoice-container\">\r\n                <div class=\"header\">\r\n                    <h1 style=\"font-size: 26px; font-weight: bold; color: rgb(11,105,255); margin: 0;\">${invoiceTitle}</h1>\r\n                    <h2 style=\"font-size: 14px; margin: 5px 0; color: #000;\">${settings[0].company_name}</h2>\r\n                    </div>\r\n                    \r\n                    <div class=\"invoice-details\">\r\n                    <p style=\"font-size: 12px; margin: 0;\">${customerNameLabel}: ${selectedOption ? capitalizeWords(selectedOption.name) : \"N/A\"}</p>\r\n                    <p style=\"font-size: 14px; color: rgb(11,105,255); margin: 0;\">${invoiceNumberLabel}: ${id}</p>\r\n                    <p style=\"font-size: 12px; margin: 0;\">${dateLabel}: ${formattedDate}</p>\r\n                </div>\r\n    \r\n                <hr style=\"border: 0; border-top: 1px solid #000; margin-bottom: 15px;\">\r\n    \r\n                <div style=\"margin-bottom: 20px;\">\r\n                    <table style=\"width: 100%; border-collapse: collapse;\" border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\r\n                        <thead style=\"background-color: rgb(11,105,255); font-size: 12px;\">\r\n                            <tr>\r\n                                <th>${noLabel}</th>\r\n                                <th>${nameLabel}</th>\r\n                                <th>${quantityLabel}</th>\r\n                                <th>${priceLabel}</th>\r\n                                <th>${totalLabel}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style=\"font-size: 12px; color: #000;\">\r\n                            ${shopingcart\r\n                                .map(\r\n                                    (row, index) => `\r\n                                    <tr class=\"${index % 2 === 0 ? 'odd-row' : 'even-row'}\">\r\n                                        <td>${index}</td>\r\n                                        <td>${row.stock.name}</td>\r\n                                        <td>${row.qty}</td>\r\n                                        <td>${row.purchase_price} ${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}</td>\r\n                                        <td>${row.purchase_price * row.qty} ${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}</td>\r\n                                    </tr>\r\n                                `\r\n                                )\r\n                                .join(\"\")}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n    \r\n                <div class=\"amount-details\">\r\n                    <p style=\"margin: 0;\">${totalAmountLabel}: ${TotalAmount} ${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}</p>\r\n                    <p style=\"margin: 0;\">${paidAmountLabel}: ${PaidAmount ? PaidAmount : \"0.00\"} ${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}</p>\r\n                    <p style=\"margin: 0;\">${balanceLabel}: ${update.belance} ${selectedOptionmoney ? selectedOptionmoney.name : \"N/A\"}</p>\r\n                </div>\r\n    \r\n                <hr style=\"border: 0; border-top: 1px solid #000; margin-bottom: 15px;\">\r\n    \r\n                <div class=\"footer\">\r\n                    <p style=\"margin: 0;\">${addressLabel}: ${settings[0].address}</p>\r\n                    <p style=\"margin: 0;\">${phoneLabel}: ${settings[0].phone}</p>\r\n                    <p style=\"margin: 0;\">${emailLabel}: ${settings[0].email}</p>\r\n                </div>\r\n                 ${imageSrc ? `<img class=\"logo\"  src=\"${imageSrc}\" alt=\"Company Logo\"/>` : ''}\r\n            </div>\r\n        </body>\r\n    </html>\r\n    `;\r\n    \r\n    // Open a new tab/window\r\n    const printWindow = window.open('', '_blank');\r\n    if (printWindow) {\r\n        printWindow.document.open();\r\n        printWindow.document.write(invoiceHTML);\r\n        printWindow.document.close();\r\n    \r\n        // Wait for content to load in the new window\r\n        printWindow.onload = () => {\r\n            printWindow.focus(); // Focus on the new window\r\n            printWindow.print(); // Open the print dialog\r\n            printWindow.close(); // Close the new window\r\n        };\r\n    } else {\r\n        alert('Please allow pop-ups for this website to print the invoice.');\r\n    }};\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await axios.get(`${Source.getAddress()}/api/customers`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n            },\r\n            params: { query:searchQuery ,do:'ok'}, // ارسال پارامتر جستجو به سرور\r\n          });\r\n          const data = response.data;\r\n          setOptions(data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      };\r\n    \r\n      if(searchQuery){\r\n        if (!searchQuery || searchQuery?.length < 3) {\r\n          setOptions([]);\r\n          return;\r\n        }else{\r\n      if (Exesting) {\r\n          fetchData();}\r\n        }\r\n      }\r\n    }, [searchQuery]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n  return (<Box\r\n      dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 1200, // حداکثر عرض استاندارد برای فرم\r\n        overflowX: \"auto\",\r\n        overflowY: \"auto\",\r\n        height: \"75vh\",\r\n        bgcolor: \"#f8f9fa\",\r\n        p: 2,\r\n        borderRadius: 2,\r\n        mx: \"auto\", // مرکز کردن فرم\r\n      }}\r\n      className={`popup transition ${account && \"sellpurchase\"} ${AddItemModal ? \"show\" : \"\"}`}\r\n    >\r\n      {/* Header */}\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt={2} mb={2}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          align=\"center\"\r\n          sx={{ bgcolor: \"info.main\", color: \"#fff\", p: 1, borderRadius: 1, flexGrow: 1, fontSize: \"1.1rem\" }}\r\n        >\r\n          <FormattedMessage id=\"Edit Purchase\" />\r\n        </Typography>\r\n        <IconButton onClick={close} aria-label=\"Close\" sx={{ ml: 2 }}>\r\n          <X size={24} />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      {/* Customer Info Section */}\r\n      <Box boxShadow={2} p={2} borderRadius={2} mb={3}>\r\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\" mb={2}>\r\n          <FormattedMessage id=\"Customer Info\" />\r\n        </Typography>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection={{ xs: \"column\", md: \"row\" }}\r\n          gap={3}\r\n          alignItems=\"center\"\r\n          flexWrap=\"wrap\"\r\n        >\r\n          {/* Exesting Switch */}\r\n          <FormControlLabel\r\n            control={<Switch checked={Exesting} onChange={(e) => setExesting(e.target.checked)} />}\r\n            label={<FormattedMessage id=\"Exesting\" />}\r\n            sx={{ minWidth: 120 }}\r\n          />\r\n\r\n          {/* Customer Name Dropdown */}\r\n          <Box sx={{ flexGrow: 1, minWidth: 200 }}>\r\n            <Typography component=\"label\" fontWeight=\"bold\" fontSize=\"0.9rem\" mb={1} display=\"block\">\r\n              <FormattedMessage id=\"Customer Name\" />\r\n            </Typography>\r\n            <Combo_stock\r\n              name={<FormattedMessage id=\"Add Customer\" />}\r\n              setAddAccountModal={AddAccountModal}\r\n              type={Exesting}\r\n              searchQuery={searchQuery}\r\n              handleInputChange={handleInputChange}\r\n              setSelectedOption={setSelectedOption}\r\n              selectedOption={selectedOption}\r\n              options={options}\r\n              Onsearch={algorithm}\r\n              compactMode={true}\r\n            />\r\n          </Box>\r\n\r\n          {/* Currency Dropdown */}\r\n          <Box sx={{ flexGrow: 1, minWidth: 180 }}>\r\n            <Typography component=\"label\" fontWeight=\"bold\" fontSize=\"0.9rem\" mb={1} display=\"block\">\r\n              <FormattedMessage id=\"Currency\" />\r\n            </Typography>\r\n            <Combo_Customer\r\n            notCurrency={false}\r\n              isEditable={account}\r\n              setSelectedOption={setSelectedOptionmoney}\r\n              selectedOption={selectedOptionmoney}\r\n              options={moneys}\r\n              Onsearch={algorithmmoney}\r\n              compactMode={true}\r\n            />\r\n          </Box>\r\n          {/* Datepicker */}\r\n          <Box sx={{ minWidth: 180 }}>\r\n            <Datepicker_Customer\r\n              default_value={EndDate}\r\n              handle_date={handle_date}\r\n              lebal={<FormattedMessage id=\"Date\" />}\r\n              setSelectedDay={setSelectedDay}\r\n              selectedDay={selectedDay}\r\n              compactMode={true}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      {/* Item Info Section */}\r\n  <Box\r\n  display=\"flex\"\r\n  flexDirection={{ xs: \"column\", md: \"row\" }}\r\n  gap={2}\r\n  alignItems=\"flex-end\"\r\n  flexWrap=\"wrap\"\r\n  sx={{\r\n    p: 2,\r\n    backgroundColor: 'background.paper',\r\n    borderRadius: 2,\r\n    boxShadow: 1\r\n  }}\r\n>\r\n  {/* Item Name */}\r\n  <Box sx={{ minWidth: 240, flexGrow: 1 }}>\r\n    <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\r\n      <FormattedMessage id=\"Item Name\" />\r\n    </Typography>\r\n    <Combo_stockps\r\n      searchQuery={searchQuery1}\r\n      setSearchQuery={setSearchQuery1}\r\n      handleInputChange={handleInputChange1}\r\n      handleSearch={handleSearch1}\r\n      setSelectedOption={algorithm1}\r\n      selectedOption={selectedOption1}\r\n      options={options1}\r\n      compactMode={true}\r\n      sx={{\r\n        '& .MuiOutlinedInput-root': {\r\n          height: 40\r\n        }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Quantity */}\r\n  <Box sx={{ width: 120 }}>\r\n    <NumericFormat\r\n      onKeyDown={handleKeyDown}\r\n      onValueChange={(values) => {\r\n        handleItem({ target: { name: \"qty\", value: values.value } });\r\n      }}\r\n      value={AddItem.qty}\r\n      customInput={TextField}\r\n      label={<FormattedMessage id=\"Quantity\" />}\r\n      size=\"small\"\r\n      fullWidth\r\n      thousandSeparator\r\n      allowNegative={false}\r\n      decimalScale={0}\r\n      InputProps={{\r\n        sx: { height: 40 }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Weight (Gold only) */}\r\n  {sidebars[0].type === \"gold\" && (\r\n    <Box sx={{ width: 160 }}>\r\n      <NumericFormat\r\n        value={AddItem.weight}\r\n        thousandSeparator=\",\"\r\n        decimalSeparator=\".\"\r\n        decimalScale={3}\r\n        name=\"weight\"\r\n        onValueChange={(values) => {\r\n          handleItem({ target: { name: \"weight\", value: values.value } });\r\n        }}\r\n        customInput={TextField}\r\n        label={<FormattedMessage id=\"Weight\" />}\r\n        size=\"small\"\r\n        fullWidth\r\n        allowNegative={false}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\" sx={{ color: \"text.secondary\" }}>\r\n              Gram\r\n            </InputAdornment>\r\n          ),\r\n          sx: { height: 40 }\r\n        }}\r\n      />\r\n    </Box>\r\n  )}\r\n\r\n  {/* Purchase Price */}\r\n  <Box sx={{ width: 140 }}>\r\n    <NumericFormat\r\n      onKeyDown={handleKeyDown}\r\n      onValueChange={(values) => {\r\n        handleItem({ target: { name: \"purchase_price\", value: values.value } });\r\n      }}\r\n      value={AddItem.purchase_price}\r\n      customInput={TextField}\r\n      label={<FormattedMessage id=\"Purchase Price\" />}\r\n      size=\"small\"\r\n      fullWidth\r\n      thousandSeparator\r\n      decimalScale={2}\r\n      allowNegative={false}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\" sx={{ color: \"text.secondary\" }}>\r\n            $\r\n          </InputAdornment>\r\n        ),\r\n        sx: { height: 40 }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Total Amount */}\r\n  <Box sx={{ width: 160 }}>\r\n    <NumericFormat\r\n      value={AddItem.qty * AddItem.purchase_price * (AddItem.weight || 1)}\r\n      customInput={TextField}\r\n      label={<FormattedMessage id=\"Total Amount\" />}\r\n      size=\"small\"\r\n      fullWidth\r\n      thousandSeparator\r\n      decimalScale={2}\r\n      InputProps={{ \r\n        readOnly: true,\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\" sx={{ color: \"text.secondary\" }}>\r\n            $\r\n          </InputAdornment>\r\n        ),\r\n        sx: { \r\n          height: 40,\r\n          backgroundColor: 'action.selected' \r\n        }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Existing Quantity */}\r\n  <Box sx={{ width: 140 }}>\r\n    <NumericFormat\r\n      value={selectedOption1 ? (selectedOption1.qty ? parseInt(AddItem.qty || 0) + parseInt(selectedOption1.qty) : \"\") : \"\"}\r\n      customInput={TextField}\r\n      label={<FormattedMessage id=\"Exest QTY\" />}\r\n      size=\"small\"\r\n      fullWidth\r\n      thousandSeparator\r\n      decimalScale={0}\r\n      InputProps={{ \r\n        readOnly: true,\r\n        sx: { \r\n          height: 40,\r\n          backgroundColor: 'action.selected' \r\n        }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Description */}\r\n  <Box sx={{ flexGrow: 1, minWidth: 240 }}>\r\n    <TextField\r\n      name=\"description\"\r\n      multiline\r\n      minRows={2}\r\n      value={AddItem.description}\r\n      onChange={handleItem}\r\n      label={<FormattedMessage id=\"Description\" />}\r\n      size=\"small\"\r\n      fullWidth\r\n      InputProps={{\r\n        sx: { \r\n          alignItems: 'flex-start',\r\n          height: 'auto'\r\n        }\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Add Button */}\r\n  <Button\r\n    onClick={() => AddtoTable()}\r\n    variant=\"contained\"\r\n    color=\"primary\"\r\n    size=\"medium\"\r\n    startIcon={<Plus size={18} />}\r\n    sx={{ \r\n      height: 40,\r\n      minWidth: 120,\r\n      fontWeight: 'bold',\r\n      textTransform: 'none',\r\n      boxShadow: 'none',\r\n      '&:hover': {\r\n        boxShadow: 'none'\r\n      }\r\n    }}\r\n  >\r\n    <FormattedMessage id=\"Add\" />\r\n  </Button>\r\n</Box>\r\n\r\n      {/* Bottom Section */}\r\n      <Box display=\"flex\" flexDirection={{ xs: \"column\", md: \"row\" }} gap={3}>\r\n        <Box flex={2} pr={{ md: 2 }}>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            sx={{ bgcolor: \"info.main\", color: \"#fff\", p: 1, borderRadius: 1, fontSize: \"1rem\", mb: 1 }}\r\n            align=\"center\"\r\n          >\r\n            <FormattedMessage id=\"Purchase stocks\" />\r\n          </Typography>\r\n          <TableContainer component={Paper} sx={{ maxHeight: 320 }}>\r\n            <Table size=\"small\" stickyHeader>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell sx={{ width: \"5%\" }}><FormattedMessage id=\"ID\" /></TableCell>\r\n                  <TableCell sx={{ width: \"20%\" }}><FormattedMessage id=\"Name\" /></TableCell>\r\n                  <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"Quantity\" /></TableCell>\r\n                                   {sidebars[0].type==='gold' && <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"weight\" /></TableCell>}\r\n\r\n                  <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"Price\" /></TableCell>\r\n                  <TableCell sx={{ width: \"10%\" }}><FormattedMessage id=\"Total\" /></TableCell>\r\n                  <TableCell sx={{ width: \"30%\" }}><FormattedMessage id=\"Description\" /></TableCell>\r\n                  <TableCell sx={{ width: \"5%\" }}><FormattedMessage id=\"Delete\" /></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {shopingcart && shopingcart.map((row, idx) => (\r\n                  <TableRow key={idx}>\r\n                    <TableCell>{row.e_id}</TableCell>\r\n                    <TableCell>{row.stock.name}</TableCell>\r\n                    <TableCell>{row.qty}</TableCell>\r\n                                        {sidebars[0].type==='gold'&&< TableCell>{row.weight}</TableCell>}\r\n                    <TableCell>{row.purchase_price}</TableCell>\r\n                    <TableCell>{row.purchase_price * row.qty}</TableCell>\r\n                    <TableCell>{row.description}</TableCell>\r\n                    <TableCell>\r\n                      <IconButton onClick={() => Deleteshopingcart(row)}>\r\n                        <Trash2 size={18} />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n\r\n        <Box flex={1} pl={{ md: 2 }}>\r\n          <TextField\r\n            value={TotalAmount}\r\n            label={<FormattedMessage id=\"Total Amount\" />}\r\n            InputProps={{ readOnly: true }}\r\n            size=\"small\"\r\n            fullWidth\r\n            sx={{ mb: 1 }}\r\n          />\r\n          <TextField\r\n            value={PaidAmount}\r\n            onChange={handlepaid}\r\n            InputProps={{ readOnly: !Exesting }}\r\n            label={<FormattedMessage id=\"Paid Amount\" />}\r\n            size=\"small\"\r\n            fullWidth\r\n            sx={{ mb: 1 }}\r\n          />\r\n          <TextField\r\n            value={update.belance}\r\n            InputProps={{ readOnly: true }}\r\n            label={<FormattedMessage id=\"Remain Balance\" />}\r\n            size=\"small\"\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          />\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\" gap={2}>\r\n            <Button variant=\"outlined\" color=\"error\" size=\"medium\" onClick={close}>\r\n              <FormattedMessage id=\"Cancel\" />\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"success\" size=\"medium\" onClick={() => Sumbit(false)}>\r\n              <FormattedMessage id=\"Submit\" />\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"success\" size=\"medium\" onClick={() => Sumbit(true)}>\r\n              <FormattedMessage id=\"Print And Save\" />\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>);\r\n}","import axios from \"axios\";\r\nimport React, { useEffect, useState,useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Source from \"../../Source\";\r\nimport AddPurchase from \"./forms/AddPurchase\";\r\nimport Swal from \"sweetalert2\";\r\nimport moment from \"moment-jalaali\";\r\nimport Add_customer from \"../AddAccount\";\r\nimport Add_belance from \"../Add_belance\";\r\nimport Trash from \"../../assets/icon/trash.png\";\r\nimport pencil from \"../../assets/icon/pencil.png\";\r\nimport EditSell from \"./forms/EditSell\";\r\nimport EditPurchase from \"./forms/EditPurchase\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getMoneys } from \"../Redux/moneysSlice\";\r\nimport { getItemFromCache, getItems } from \"../Redux/itemSlice\";\r\nimport { getSettings } from \"../Redux/settingSlice\";\r\nimport { getCustomers } from \"../Redux/customerSlice\";\r\nimport { getStocks } from \"../Redux/stockSlice\";\r\nimport jalaali from \"jalaali-js\";\r\nimport ListBox from \"../forms/ListBox\";\r\nimport Datepicker_Customer from \"../forms/Datepicker_customer\";\r\nimport { showAlert } from \"../../warrper\";\r\n// import { FormattedMessage } from \"react-intl\";\r\nimport { FormattedMessage,useIntl } from \"react-intl\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { useShowAlert  } from \"../../warrper\";\r\n\r\n\r\nexport default function Purchase() {\r\n  const showAlert = useShowAlert(); \r\n  const [selecteduser, setSelecteduser] = useState();\r\n  const { users, statusu } = useSelector((state) => state.users);\r\n  const [namesearch, setnameSearch] = useState();\r\n  const [Date_Start, setDate_start] = useState();\r\n  const [Date_End, setDate_end] = useState();\r\n  const [StartDate, setStartDate] = useState();\r\n  const [EndDate, setEndDate] = useState();\r\n      const [isDesktop, setIsDesktop] = useState(window.innerWidth > 768);\r\n  const handle_date_start = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      setDate_start(isoString);\r\n    }\r\n  };\r\n  const handle_date_end = (jalaliDate) => {\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const t = new Date();\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        t.getHours(),\r\n        t.getMinutes()\r\n      );\r\n\r\n      // const date = new Date(jalaliDate.year, jalaliDate.month - 1, jalaliDate.day);\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n      // setIsoDate(isoString);\r\n      setDate_end(isoString);\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n  const handleName = (e) => {\r\n    setnameSearch(e.target.value);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const { settings, errors, statuss } = useSelector((state) => state.settings);\r\n  const [options, setOptions] = useState([]);\r\n  const [addAccountModal, setAddAccountModal] = useState(false);\r\n  const [records, setRecords] = useState([]);\r\n  const [AddPurchaseModal, setAddPurchaseModal] = useState(false);\r\n  const [stock, setstock] = useState([]);\r\n  const [belance, setbelance] = useState();\r\n  const [AddBalanceModal, setAddBalanceModal] = useState(false);\r\n\r\n  // show and edit\r\n  const [EditSellModal, setEditSellModal] = useState(false);\r\n  const [MoneyEdit, setMoneyEdit] = useState([]);\r\n  const [Customer, setCustomer] = useState([]);\r\n  const [shopingcart, setShopingCart] = useState([]);\r\n  const [Exesting, setExesting] = useState(false);\r\n  //   dispatch(getStocks());\r\n  // console.log(stocks);\r\n  // useEffect(() => {\r\n  //   // بررسی و بارگذاری `belances`\r\n  //   if (!statusm && moneys?.length===0) {\r\n  //     dispatch(getMoneys());\r\n  //   }\r\n  // // console.log();\r\n  //   // console.log(customers);\r\n  //   // // بررسی و بارگذاری `moneys`\r\n  //   if (!statusStock  && stocks?.length===0) {\r\n  //     dispatch(getStocks());\r\n  //   }\r\n  //   if (!statuss  && settings?.length===0) {\r\n  //     dispatch(getSettings());\r\n  //   }\r\n  //   // console.log(!statusc);\r\n  //   if (!statusc  && customers?.length===0) {\r\n  //     dispatch(getCustomers());\r\n  //   }\r\n  //   // // بررسی و بارگذاری `customers`\r\n  //   // if (statusc === 'idle' && !customers) {\r\n  //   //   dispatch(getCustomers());\r\n  //   // }\r\n  // }, [dispatch, statusm, moneys,settings,statuss]);\r\n  // console.log(!items?.lenght)\r\n  // console.log(!statusi);\r\n  const getcustomer = () => {\r\n    if(stock.length===0){\r\n      axios\r\n        .get(`${Source.getAddress()}/api/item`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            query: \"ok\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setstock(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    if(money.length===0){\r\n      axios\r\n        .get(Source.getAddress() + \"/api/money\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: {\r\n            delete: \"False\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setmoney(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  const [setting, setsettings] = useState(settings);\r\n  // useEffect(()=>{\r\n  //   axios.get(Source.getAddress() + '/api/settings', {\r\n  //     headers: {\r\n  //       'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n  //     },params: {\r\n  //       delete: 'False',\r\n  //     },\r\n  //   }).then((res)=>{\r\n  //     // console.log(res);\r\n  //     setsettings(res.data);\r\n  //   }).catch((err)=>{\r\n  //     console.log(err);\r\n  //   });\r\n\r\n  // },[]);\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    setPerPage(newPerPage);\r\n    setCurrentPage(page);\r\n  };\r\n  // const [data, setData] = useState([]);\r\n  const [totalRows, setTotalRows] = useState(0); // تعداد کل ردیف‌ها\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1); // صفحه فعلی\r\n  const [perPage, setPerPage] = useState(10); // تعداد آیتم‌ها در هر صفحه\r\n  const [addbalance, setaddbalance] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [money, setmoney] = useState([]);\r\n\r\n  // دریافت داده‌ها از سرور\r\n  const fetchData = async (page, pageSize) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(Source.getAddress() + \"/api/purchase\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n        },\r\n        params: {  \r\n          user_id: selecteduser.id,\r\n          page: page,\r\n          perPage: pageSize,\r\n          StartDate: StartDate&& Date_Start,\r\n          EndDate: EndDate && Date_End,\r\n          search: namesearch?.length ? namesearch : 'false',\r\n          delete: 0,\r\n        },\r\n      });\r\n      // console.log(response);\r\n      setRecords(response.data.data); // داده‌های صفحه جاری\r\n      setTotalRows(response.data.total); // تعداد کل ردیف‌ها\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data\", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  // فراخوانی داده‌ها هنگام بارگذاری صفحه یا تغییر صفحه\r\n  useEffect(() => {\r\n    fetchData(currentPage, perPage);\r\n  }, [currentPage, perPage,EndDate, StartDate, selecteduser,namesearch]);\r\n\r\n  // مدیریت تغییر صفحه\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page); // برو به صفحه جدید\r\n  };\r\n  const intl = useIntl(); // استفاده از هوک useIntl برای دسترسی به ترجمه‌ها\r\n\r\n  const deletePurchase = async (row) => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success\",\r\n        cancelButton: \"btn btn-danger\",\r\n      },\r\n      buttonsStyling: false,\r\n    });\r\n\r\n    const result = await swalWithBootstrapButtons.fire({\r\n       title: intl.formatMessage({id:\"Are you sure?\"})\r\n               ,\r\n               text:intl.formatMessage({id:\"You won't be able to revert this!\"})\r\n               ,\r\n               icon: \"warning\",\r\n               showCancelButton: true,\r\n               confirmButtonText: intl.formatMessage({id:\"Yes, delete it!\"})\r\n               ,\r\n               cancelButtonText: intl.formatMessage({id:\"No, cancel!\"})\r\n               ,\r\n               reverseButtons: true,\r\n    });\r\n\r\n    if (result.isConfirmed) {\r\n      const update = {\r\n        money: row.money.id,\r\n        bill: row.bill.id,\r\n        _method:\"put\"\r\n        // sell: row.purchase[0]?.id||row.purchase[0]?.e_id, // Ensure you are passing the correct 'sell' id\r\n      };\r\n\r\n      try {\r\n        const res = await axios.post(\r\n          `${Source.getAddress()}/api/purchase/${row.bill.id}`,\r\n          update,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"access\")}`, // Add the access token here\r\n            },\r\n            params: {\r\n              type: \"delete\", // If you need additional parameters, you can add them here\r\n              // account: row.account // Uncomment and use if necessary\r\n            },\r\n          }\r\n        );\r\n\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          // title: \"Item record successfully deleted!\",\r\n                      // title: <FormattedMessage id=\"record successfully deleted!\"/>,\r\n                                  title: intl.formatMessage({id:\"record successfully deleted!\"}),\r\n          showConfirmButton: false,\r\n          timer: 600,\r\n        });\r\n\r\n        // Remove the deleted item from the records\r\n        setRecords((prevRecords) =>\r\n          prevRecords.filter((record) => record.bill.id !== row.bill.id)\r\n        );\r\n      } catch (err) {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"error\",\r\n          // title: \"Item record not deleted\",\r\n                                  // title: <FormattedMessage id=\"Something went wrong!\"/>,            \r\n                                              title: intl.formatMessage({id:\"Something went wrong!\"}),\r\n                                  \r\n          showConfirmButton: false,\r\n          timer: 600,\r\n        });\r\n      }\r\n    } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"error\",\r\n        // text: \"Your item record is safe :)\",\r\n                        // text: <FormattedMessage id=\"Your record is safe :)\"/>,\r\n                                text:intl.formatMessage({id:\"Your record is safe :)\"}),\r\n        showConfirmButton: false,\r\n        timer: 600,\r\n      });\r\n    }\r\n  };\r\n\r\n  const PDcolumn = [\r\n    {\r\n      name:\r\n      <FormattedMessage id=\"Bill Number\" />\r\n      ,\r\n      selector: (row) => row.bill.id,\r\n      sortable: true,\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"1px\",\r\n      },\r\n    },\r\n    {\r\n      name:           <FormattedMessage id=\"Name\" />      ,\r\n      selector: (row) =>\r\n        row.bill.temp_customer\r\n          ? row.bill.temp_customer\r\n          : row.bill.accounts.account.name,\r\n      sortable: true,\r\n      style: {\r\n        width: \"1px\",\r\n        minWidth: \"1px\",\r\n      },\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{ minWidth: \"200px\", maxWidth: \"240px\", width: \"240px\" }}\r\n        >\r\n                    <FormattedMessage id=\"Date Created\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) => date(row.bill.dateInsert),\r\n    },\r\n    {\r\n      name:           <FormattedMessage id=\"Currency\" />      ,\r\n      selector: (row) => row.bill.money.name,\r\n      sortable: true,\r\n    },\r\n    { name:           <FormattedMessage id=\"Total Amount\" />\r\n      , selector: (row) => row.bill.total, sortable: true },\r\n    {\r\n      name:           <FormattedMessage id=\"Paid Amount\" />      ,\r\n      selector: (row) => row.bill.PaidAmount,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name:           <FormattedMessage id=\"Remain Amount\" />      ,\r\n      selector: (row) => row.bill.Remain,\r\n      sortable: true,\r\n    },\r\n    // { name: \"Add By\", selector: (row) => row.bill.user.name, sortable: true },\r\n\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{\r\n            textAlign: \"center\",\r\n            backgroundColor: \"tranceparent\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <FormattedMessage id=\"Show\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) => (\r\n        <button\r\n          onClick={(e) => {\r\n            getcustomer();\r\n            setExesting(row.bill.accounts ? true : false);\r\n            setEditSellModal(true);\r\n            setMoneyEdit(row.money);\r\n            setCustomer(row.bill);\r\n            setShopingCart(row.purchase);\r\n          }}\r\n          style={{\r\n            border: \"none\",\r\n            backgroundColor: \"transparent\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <img\r\n            height={\"15%\"}\r\n            width={\"15%\"}\r\n            src={pencil}\r\n            style={{ backgroundColor: \"tranceparent\" }}\r\n          />\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      name: (\r\n        <strong\r\n          style={{\r\n            textAlign: \"center\",\r\n            backgroundColor: \"tranceparent\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n                    <FormattedMessage id=\"Delete\" />\r\n        </strong>\r\n      ),\r\n      selector: (row) => (\r\n        <button\r\n          onClick={() => {\r\n            deletePurchase(row);\r\n          }}\r\n          style={{\r\n            border: \"none\",\r\n            backgroundColor: \"transparent\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <img\r\n            height={\"20%\"}\r\n            width={\"20%\"}\r\n            src={Trash}\r\n            style={{ backgroundColor: \"tranceparent\" }}\r\n          />\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n  const columns = useMemo(() => {\r\n    let selectedColumns;\r\n  \r\n    if (\r\n      localStorage.getItem(\"language\") === \"pa\" ||\r\n      localStorage.getItem(\"language\") === \"da\"\r\n    ) {\r\n      selectedColumns = [...PDcolumn]; // معکوس کردن ستون‌ها\r\n    }else{\r\n      selectedColumns=PDcolumn;\r\n    }\r\n    return selectedColumns;\r\n  }, [isDesktop]);\r\n  const date = (d) => {\r\n    const date = new Date(d);\r\n\r\n    let formattedDate = `${date.getFullYear()}-${String(\r\n      date.getMonth() + 1\r\n    ).padStart(2, \"0\")}-${String(date.getDate()).padStart(2, \"0\")}`;\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n    let aa = ampm;\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    if (localStorage.getItem(\"date\") === \"Persian\") {\r\n      moment.locale(\"fa\"); // تنظیم لوکال به فارسی\r\n      aa = hours >= 12 ? \"ب.ظ\" : \"ق.ظ\";\r\n      formattedDate = moment(d).format(\"jYYYY-jMM-jDD\");\r\n    } else {\r\n      moment.locale(\"en\"); // تنظیم لوکال به انگلیسی\r\n    }\r\n\r\n    return `${formattedDate} ${formattedHours}:${formattedMinutes} ${aa}`;\r\n  };\r\n  const [addcusotmer, setaddcustomer] = useState([]);\r\n  const [addbelance, setaddbelance] = useState([]);\r\n  // useEffect(() => {\r\n  //   fetchData(currentPage, perPage);\r\n  // }, [currentPage, perPage]);\r\n  const { formatMessage } = useIntl();\r\n  const localization = {\r\n    pagination: {\r\n        \r\n        rowsPerPage:<FormattedMessage id=\"AddrowsPerPage\"/> , // مثلا: \"تعداد ردیف‌ها\"\r\n      previous: <FormattedMessage id=\"previous\"/>, // مثلا: \"قبلی\"\r\n      next: <FormattedMessage id=\"next\"/>, // مثلا: \"بعدی\"\r\n      page: <FormattedMessage id=\"page\"/>, // مثلا: \"صفحه\"\r\n    },\r\n    // شما می‌توانید تنظیمات بیشتر برای متون مورد نظر اضافه کنید.\r\n  };\r\n  return (\r\n    <div className={`w-100 ${\"iransans\"}`}>\r\n      <div className=\"m-auto mt-5 m-5\" style={{ height: \"100%\", width: \"99%\" }}>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-info mb-1 p-1\"\r\n          style={{ width: \"100px\" }}\r\n          onClick={() => {\r\n            setAddPurchaseModal(true);\r\n            getcustomer();\r\n          }}\r\n        >\r\n          <FormattedMessage id=\"Add\" />\r\n        </button>\r\n        <div\r\n    dir={localStorage.getItem(\"language\") === \"en\" ? \"ltr\" : \"rtl\"}\r\nclassName=\"bg-light d-flex flex-column flex-lg-row justify-content-lg-between align-items-start align-items-lg-center\"\r\n        style={{ borderTop: \"5px solid #4a5cf2\" }}\r\n      >\r\n        <h2 className=\"m-2 fw-bold mb-4\"><FormattedMessage id=\"Purchase\"/>\r\n        </h2>\r\n        <div className=\"d-flex flex-column flex-lg-row align-items-start align-items-lg-center\">\r\n          <div className=\"mb-1 mb-lg-0 me-lg-2 mt-1 \">\r\n            <Datepicker_Customer\r\n              default_value={StartDate}\r\n              handle_date={handle_date_start}\r\n              lebal={<FormattedMessage id=\"Start\"/>}\r\n              setSelectedDay={setStartDate}\r\n              selectedDay={StartDate}\r\n            ></Datepicker_Customer>\r\n          </div>\r\n          <div className=\"mb-1 mt-1 mb-lg-0 me-lg-2\">\r\n            <Datepicker_Customer\r\n              default_value={EndDate}\r\n              handle_date={handle_date_end}\r\n              lebal={<FormattedMessage id=\"End\"/>}\r\n              setSelectedDay={setEndDate}\r\n              selectedDay={EndDate}\r\n            ></Datepicker_Customer>\r\n          </div>\r\n          <ListBox\r\n            options={users}\r\n            selectedOption={selecteduser}\r\n            setSelectedOption={setSelecteduser}\r\n          />\r\n        </div>\r\n        <input\r\n  className=\"form-control m-2 mb-2 mt-4\"\r\n  style={{ width: \"100%\", maxWidth: \"200px\" }}\r\n  type=\"search\"\r\n  onChange={handleName}\r\n  value={namesearch}\r\n  placeholder={formatMessage({ id: \"Search\" })}\r\n  aria-label=\"Search\"\r\n/>\r\n      </div>\r\n        <DataTable\r\n                  localization={localization} // ارسال ترجمه‌ها      \r\n          columns={columns}\r\n          data={records}\r\n          progressPending={loading}\r\n          striped\r\n          responsive\r\n          highlightOnHover\r\n          pagination\r\n          paginationServer // فعال‌سازی صفحه‌بندی سرور ساید\r\n          paginationTotalRows={totalRows} // تعداد کل ردیف‌ها\r\n          onChangePage={handlePageChange} // تغییر صفحه\r\n          onChangeRowsPerPage={handlePerRowsChange} // تغییر تعداد ردیف‌ها در صفحه\r\n          customStyles={{\r\n            headCells: {\r\n              style: {\r\n                display: \"flex\",\r\n                minWidth: \"100px\", // تنظیم اندازه عنوان‌ها\r\n                maxWidth: \"100px\",\r\n                width: \"10px\",\r\n                margin: \"0px\",\r\n                fontWeight: \"bold\",\r\n              },\r\n            },\r\n            cells: {\r\n              style: {\r\n                minWidth: \"100px\", // تنظیم اندازه داده‌ها\r\n                maxWidth: \"150px\",\r\n                width: \"150px\",\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        {/* {\r\n          <AccountEdit\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n          inputRef={inputRef1}\r\n            close={() => setEdit(false)}\r\n            account={editAccount1}\r\n            setAccount={setEditAccount1}\r\n            // records={records}\r\n            // setRecords={setRecords}\r\n            edit={edit}\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        }\r\n        <Belance\r\n        setMoney={setMoney}\r\n        inputRef={inputRefbelance}\r\n        belancem={belance}\r\n         setbelance={setbelance}\r\n        prof={prof}\r\n        idprof={idprof}\r\n        customer={customer}\r\n        setcustomer={setcustomer}\r\n        moneyp={money}\r\n        loading={loading}\r\n        setLoading={setLoading}\r\n          close={() => setOpenBelance(false)}\r\n          id={id}\r\n          accountbelance={editAccount}\r\n          setEditAccount={setEditAccount}\r\n          openBelance={openBelance}\r\n          setOpenBelance={setOpenBelance}\r\n        />\r\n        {\r\n          <AddAccount\r\n          loading={loading}\r\n          setLoading={setLoading}\r\n            inputRef={inputRef}\r\n            close={() => setAddAccountModal(false)}\r\n            addAccountModal={addAccountModal}\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        } */}\r\n        <AddPurchase\r\n          customers={accounts}\r\n          setsettings={setsettings}\r\n          settings={setting}\r\n          belance={belance}\r\n          records={records}\r\n          setRecords={setRecords}\r\n          options1={stock}\r\n          moneys={money}\r\n          AddItemModal={AddPurchaseModal}\r\n          close={() => setAddPurchaseModal(false)}\r\n          setAddAccountModal={setAddAccountModal}\r\n          setAddBalanceModal={setAddBalanceModal}\r\n        />\r\n        <Add_belance\r\n          // customers={customers}\r\n          accounts={belance}\r\n          setAccounts={setbelance}\r\n          close={() => setAddBalanceModal(false)}\r\n          addAccountModal={AddBalanceModal}\r\n          records={belance}\r\n          setRecords={setbelance}\r\n          money={money}\r\n          // settings={settings}\r\n          setAddcustomerModal={setAddAccountModal}\r\n        />\r\n        {\r\n          <Add_customer\r\n            // loading={loading}\r\n            // setLoading={setLoading}\r\n            // inputRef={inputRef}\r\n            close={() => setAddAccountModal(false)}\r\n            addAccountModal={addAccountModal}\r\n            records={addcusotmer}\r\n            setRecords={setaddcustomer}\r\n          />\r\n        }\r\n        <EditPurchase\r\n          Exesting={Exesting}\r\n          setExesting={setExesting}\r\n          records={records}\r\n          setRecords={setRecords}\r\n          AddItemModal={EditSellModal}\r\n          close={(e) => setEditSellModal(false)}\r\n          money={MoneyEdit}\r\n          setmoney={setMoneyEdit}\r\n          moneys={money}\r\n          Customer={Customer}\r\n          setCustomer={setCustomer}\r\n          shopingcart={shopingcart}\r\n          setshopingcart={setShopingCart}\r\n          options1={stock}\r\n          setOptions1={setstock}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Source from \"../Source\";\r\nimport axios from \"axios\";\r\n// import Swal from \"sweetalert2\";\r\n// import { showAlert } from \"../warrper\";\r\nimport Profile from \"../assets/icon/profile.png\";\r\nimport IdNational from \"../assets/icon/national_id.png\";\r\nimport Combo_Customer from \"./forms/Combo_Customer\";\r\nimport Datepicker from \"./forms/Datepicker\";\r\nimport Select from \"react-select\";\r\nimport jalaali from \"jalaali-js\";\r\nimport Datepicker_Customer from \"./forms/Datepicker_customer\";\r\nimport moment from \"moment-jalaali\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCustomers } from \"./Redux/customerSlice\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useShowAlert  } from \"../warrper\";\r\n\r\nexport default function Add_belance({\r\n  setAccounts,\r\n  close,\r\n  addAccountModal,\r\n  records,\r\n  setRecords,\r\n  // setAddAccountModal,\r\n  setAddcustomerModal,\r\n  // customers,\r\n  accounts,\r\n  money,\r\n  // settings,\r\n}) {\r\n  // console.log(money);\r\n  const showAlert = useShowAlert(); \r\n  const dispatch = useDispatch();\r\n  const { customers, errorc, statusc } = useSelector(\r\n    (state) => state.customers\r\n  );\r\n  // useEffect(() => {\r\n  //   // بررسی و بارگذاری `belances`\r\n  //   // if (!statusb && belances) {\r\n  //   //   dispatch(getBelances());\r\n  //   // }\r\n\r\n  //   // // بررسی و بارگذاری `moneys`\r\n  //   // if (!statusm && moneys) {\r\n  //   //   dispatch(getMoneys());\r\n  //   // }\r\n\r\n  //   // بررسی و بارگذاری `customers`\r\n  //   if (!statusc  && customers) {\r\n  //     dispatch(getCustomers());\r\n  //   }\r\n\r\n  //   // if(!statuss && settings) {\r\n  //   //   dispatch(getSettings());\r\n  //   // }\r\n  // }, [dispatch, statusc, customers]);\r\n  const [options,setOptions]=useState([]);\r\n  const [bbelance, setbbelance] = useState({\r\n    account_id: null,\r\n    type_id: null,\r\n    belance: \"0\",\r\n    date_created: \"\",\r\n    user_id: localStorage.getItem('userTokenid'),\r\n    isdelete: 0,\r\n  });\r\n  const [customer, setcustomers] = useState([]);\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n  const [selectedOption, setSelectedOption] = useState();\r\n  const [add, setadd] = useState({\r\n    id: 0,\r\n    account_id: 0,\r\n    type_id: 0,\r\n    belance: \"0\",\r\n    date_created: \"\",\r\n    moneyType: \"\",\r\n    account_name: \"\",\r\n    moneyId: 0,\r\n    user_id: localStorage.getItem(\"userTokenid\"),\r\n    user_name: localStorage.getItem(\"userToken\"),\r\n    isdelete: 0,\r\n  });\r\n  const [Customer, setCustomer] = useState({\r\n    national_id_picture: \"\",\r\n    profile_picture: \"\",\r\n    national_id_number: \"\",\r\n    isdelete: \"False\",\r\n    user_id: \"\",\r\n    address: \"\",\r\n    whatsup_number: \"\",\r\n    name: \"\",\r\n    father_name: \"\",\r\n    phone_number: \"\",\r\n    // ontransaction:'True'\r\n  });\r\n  const [smoney, setsmeony] = useState([]);\r\n  const algorithm = (e) => {\r\n    setSelectedOption(e);\r\n    if (e) {\r\n      setCustomer(e);\r\n      setbbelance({\r\n        ...bbelance,\r\n        account_id: e.id,\r\n      });\r\n      setadd({\r\n        ...add,\r\n        account_name: e.name,\r\n        account_id: e.id,\r\n      });\r\n      setsmeony(e.missing_moneys);\r\n      // const find = records.filter((p) => p.account_id === e.id);\r\n      // let moneys = [];\r\n      // for (let i = 0; i < money.length; i++) {\r\n      //   const res = find.find((r) => r.type_id === money[i].id);\r\n      //   if (!res) {\r\n      //     moneys.push(money[i]);\r\n      //   }\r\n      // }\r\n      // setsmeony(moneys);\r\n      // axios.get(Source.getAddress() + '/api/money', {\r\n      //   headers: {\r\n      //     'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n      //   },params: {\r\n      //     delete: '0',\r\n      //     account_id: e.id,\r\n      //   },\r\n      // }).then((res)=>{\r\n      // setsmeony(res.data.available_currencies);\r\n\r\n      // }).catch((err)=>{\r\n      //   console.log(err);\r\n      // });\r\n    }\r\n  };\r\n  const [nmoney, setnmoney] = useState();\r\n  const handle = (e) => {\r\n    const date = new Date();\r\n    // console.log(`${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()} ${date.toLocaleTimeString()}`);\r\n    const isoString = date.toISOString();\r\n    // console.log(isoString);\r\n    setnmoney(e);\r\n    if (e) {\r\n      setbbelance({\r\n        ...bbelance,\r\n        user_id: localStorage.getItem(\"userTokenid\"),\r\n        type_id: e.id,\r\n        date_created: isoString,\r\n      });\r\n      const newId =\r\n        records.length > 0\r\n          ? Math.max(...records.map((record) => record.id)) + 1\r\n          : 1;\r\n      setadd({\r\n        ...add,\r\n        user_id: localStorage.getItem(\"userTokenid\"),\r\n        type_id: e.id,\r\n        id: newId,\r\n        belance: \"0\",\r\n        date_created: isoString,\r\n        moneyType: e.name,\r\n        user_name: localStorage.getItem(\"userToken\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handle_date = (jalaliDate) => {\r\n    // console.log(jalaliDate);\r\n    if (jalaliDate) {\r\n      const { year, month, day } = jalaliDate;\r\n      const gregorianDate = jalaali.toGregorian(year, month, day);\r\n      // Get current time\r\n      const now = new Date();\r\n      const hours = String(now.getHours()).padStart(2, \"0\");\r\n      const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n      // Create the ISO date string\r\n      let isoDateString;\r\n      const date = new Date(\r\n        jalaliDate.year,\r\n        jalaliDate.month - 1,\r\n        jalaliDate.day,\r\n        now.getHours(),\r\n        now.getMinutes()\r\n      );\r\n      const isoString = date.toISOString(); // This gives you the ISO string in UTC\r\n\r\n      // setIsoDate(isoString);\r\n      // console.log(isoString);\r\n      setbbelance({\r\n        ...bbelance,\r\n        date_created: isoString,\r\n      });\r\n      setadd({ ...add, date_created: isoString });\r\n      // const isoDateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n    }\r\n  };\r\n  const [national_id_picture, setNationalIdPicture] = useState();\r\n  const [ProfilePicture, setProfilePicture] = useState();\r\n  const sumbit = () => {\r\n    if (!nmoney) {\r\n      showAlert({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        title: <FormattedMessage id=\"You Must fill all inputs!\"/>,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n      return;\r\n    }\r\n    axios\r\n      .post(Source.getAddress() + \"/api/belance\", bbelance, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"access\")}`, // Add the access token here\r\n          \"Content-Type\": \"application/json\",\r\n          // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setadd((prev) => [{ ...prev, id: res.data.id }]);\r\n        let customer = {\r\n          national_id_number: Customer.national_id_number,\r\n          isdelete: Customer.isdelete,\r\n          user: Customer.user,\r\n          address: Customer.address,\r\n          whatsup_number: Customer.whatsup_number,\r\n          name: Customer.name,\r\n          father_name: Customer.father_name,\r\n          phone_number: Customer.phone_number,\r\n          ontransaction: 1,\r\n        };\r\n        axios\r\n          .put(\r\n            Source.getAddress() + \"/api/customers/\" + `${Customer.id}/`,\r\n            customer,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"access\")}`, // Add the access token here\r\n                // Do NOT set 'Content-Type' when using FormData; let the browser set it automatically\r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            showAlert({\r\n              position: \"top-end\",\r\n              icon: \"success\",\r\n              title: <FormattedMessage id=\"Your record has been added!\" />,\r\n              showConfirmButton: false,\r\n              timer: 800,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            showAlert({\r\n              position: \"top-end\",\r\n              icon: \"error\",\r\n                                      title: <FormattedMessage id=\"Not working ,please try again!\" />,\r\n              \r\n              showConfirmButton: false,\r\n              timer: 800,\r\n            });\r\n          });\r\n\r\n        setbbelance({\r\n          account: null,\r\n          type: null,\r\n          belance: \"0\",\r\n          date_created: \"\",\r\n          user_id: localStorage.getItem('userTokenid'),\r\n          isdelete: 0,\r\n        });\r\n        setSelectedOption({ name: \"\" });\r\n        setnmoney(null);\r\n        setsmeony(null);\r\n        setSelectedDay(moment());\r\n\r\n        // console.log(bbelance);\r\n        setRecords([add, ...records]);\r\n        close();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        showAlert({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n                                  title: <FormattedMessage id=\"Not working ,please try again!\" />,\r\n          showConfirmButton: false,\r\n          timer: 800,\r\n        });\r\n      });\r\n  };\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const buttonRef = useRef(null);\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // Check if the Enter key was pressed\r\n      e.preventDefault(); // Prevent default action if needed\r\n      if (buttonRef.current && add) {\r\n        buttonRef.current.click(); // Programmatically click the button\r\n      }\r\n    }\r\n  };\r\n  // const [options, setOptions] = useState(customers);\r\n\r\n  const handleInputChange = (newValue) => {\r\n    setSearchQuery(newValue); // بروزرسانی مقدار ورودی جستجو\r\n    // handleSearch(newValue); // ارسال درخواست جستجو به سرور\r\n  };\r\n  const handleSearch = async (query) => {\r\n    // if (query.length < 3) {\r\n    //   // برای جلوگیری از ارسال درخواست بیش از حد، درخواست فقط اگر ورودی بیشتر از 2 حرف باشد ارسال شود\r\n    //   setOptions([]);\r\n    //   return;\r\n    // }\r\n    // try {\r\n    //   const response = await axios.get(`${Source.getAddress()}/api/customers`, {\r\n    //     headers: {\r\n    //       Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n    //     },\r\n    //     params: { query: query }, // ارسال پارامتر جستجو به سرور\r\n    //   });\r\n    //   //   console.log(query);\r\n    //   const data = response.data;\r\n    //   // تبدیل داده‌ها به فرمت مناسب برای react-select\r\n    //   let formattedOptions = data;\r\n    //   setOptions(formattedOptions);\r\n    // } catch (error) {\r\n    //   console.error(\"Error fetching data:\", error);\r\n    // } finally {\r\n    // }\r\n  };\r\n  // const [Exesting, setExesting] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${Source.getAddress()}/api/customers`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"access\")}`,\r\n          },\r\n          params: { query:searchQuery ,do:'ok'}, // ارسال پارامتر جستجو به سرور\r\n        });\r\n        // setSelectedOption(response.data);\r\n        const data = response.data;\r\n        setOptions(data);\r\n        // setnmoney(data.missing_moneys);\r\n        // console.log(response);\r\n        // if (data && data.length === 0) {\r\n        //   setSelectedOptionTo({ id: 0, name: searchQueryTo });\r\n        // } else {\r\n        //   setOptionsTo(data); // ذخیره داده‌ها برای نمایش در لیست\r\n        // }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n  \r\n    if(searchQuery){\r\n      if (!searchQuery || searchQuery?.length < 3) {\r\n        setOptions([]);\r\n        return;\r\n      }else{\r\n        fetchData();}\r\n    }\r\n  }, [searchQuery]); // اضافه کردن searchQuery به وابستگی‌های useEffect\r\n// console.log(smoney);\r\n  return (\r\n    <div\r\n      className={`rounded-4 row g-2 popup m-4 mb-0 ${\r\n        addAccountModal && \"show\"\r\n      }`}\r\n      style={{ width: \"20rem\" }}\r\n    >\r\n      <div className=\"d-flex justify-content-end m-0 p-0\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-close align-self-end p-3 m-1 mt-0 hover_btn\"\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n          aria-label=\"Close\"\r\n        ></button>\r\n      </div>\r\n      <h1\r\n        className=\"text-center rounded m-0 p-2 w-100 text-light fs-4\"\r\n        style={{ backgroundColor: \"var(--bs-info)\" }}\r\n      >\r\n                                  <FormattedMessage id=\"Add Account\" />\r\n      </h1>\r\n      <div class=\"col-md-6\">\r\n        <label for=\"validationServer01\" className=\"fw-bold\">\r\n        <FormattedMessage id=\"Customer Name\" />\r\n        </label>\r\n        <Combo_Customer\r\n          name={          <FormattedMessage id=\"Add Customer\" />          }\r\n          setAddAccountModal={setAddcustomerModal}\r\n          type={true}\r\n          searchQuery={searchQuery}\r\n          handleInputChange={handleInputChange}\r\n          setSelectedOption={algorithm}\r\n          selectedOption={selectedOption}\r\n          options={options}\r\n          // Onsearch={algorithm}\r\n        />\r\n        <div class=\"valid-feedback\">Looks good!</div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <label for=\"validationServer02\" className=\"fw-bold\">\r\n        <FormattedMessage id=\"Currency\" />\r\n        </label>\r\n        {/* <input type=\"text\" class=\"form-control is-valid\" id=\"validationServer02\" value=\"\" required /> */}\r\n        <div className=\"w-40\">\r\n          <Select\r\n            onKeyDown={handleKeyDown}\r\n            value={nmoney}\r\n            onChange={handle}\r\n            options={smoney}\r\n            getOptionLabel={(option) => (\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                {/* <img src={option.pictureUrl} alt={`Portrait of ${option.firstName} ${option.lastName}`} style={{ width: '30px', marginRight: '10px' }} /> */}\r\n                <span>{`${option.name} `}</span>\r\n              </div>\r\n            )}\r\n            getOptionValue={(option) => `${option.name}`}\r\n            // placeholder={`${<FormattedMessage id=\"Search\" />}`}\r\n            isClearable\r\n            isSearchable\r\n            isDisabled={smoney ? false : true}\r\n          />\r\n        </div>\r\n        <div class=\"valid-feedback\">Looks good!</div>\r\n      </div>\r\n      <div className=\"coll-10\">\r\n        <Datepicker_Customer\r\n          onKeyDown={handleKeyDown}\r\n          default_value={\"\"}\r\n          // settings={settings}\r\n          handle_date={handle_date}\r\n          lebal={<FormattedMessage id=\"Date\" />}\r\n          setSelectedDay={setSelectedDay}\r\n          selectedDay={selectedDay}\r\n        ></Datepicker_Customer>\r\n      </div>\r\n      <div className=\"col-10 ms-4 m-10 mt-5 ps-3 d-flex\">\r\n        <a\r\n          className=\"text-center form-control btn btn-danger text-light me-1 ms-1\"\r\n          style={{ margin: \"auto\", width: \"150px\" }}\r\n          onClick={close}\r\n        >\r\n                    <FormattedMessage id=\"Cancel\" />\r\n        </a>\r\n        <a\r\n          className=\"text-center btn form-control btn-success text-light ms-1\"\r\n          ref={buttonRef}\r\n          style={{ margin: \"auto\", width: \"150px\" }}\r\n          onClick={() => {\r\n            sumbit();\r\n          }}\r\n        >\r\n                    <FormattedMessage id=\"Submit\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'react-select';\r\nimport { ChevronDown } from 'lucide-react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\nconst ListBox = ({\r\n  isDisabled = false,\r\n  options = [],\r\n  selectedOption,\r\n  setSelectedOption,\r\n  width = '100%',\r\n}) => {\r\n  const { formatMessage, locale } = useIntl();\r\n  const isRTL = locale === 'fa'; // Assuming 'fa' is your Persian locale code\r\n  \r\n  const allUsersOption = { \r\n    name: <FormattedMessage id=\"All Users\" />, \r\n    id: 0 \r\n  };\r\n  \r\n  const updatedOptions = [allUsersOption, ...options];\r\n\r\n  useEffect(() => {\r\n    if (!selectedOption) {\r\n      setSelectedOption(allUsersOption);\r\n    }\r\n  }, [selectedOption, setSelectedOption, allUsersOption]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setSelectedOption(selectedOption);\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      backgroundColor: '#fff',\r\n      zIndex: 1,\r\n      borderRadius: '8px',\r\n      border: state.isFocused ? '2px solid #4f46e5' : '1px solid #d1d5db',\r\n      boxShadow: state.isFocused ? '0 0 5px rgba(79, 70, 229, 0.5)' : 'none',\r\n      '&:hover': {\r\n        border: '1px solid #4f46e5',\r\n      },\r\n      minHeight: '39px',\r\n      padding: '4px 8px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    menu: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      borderRadius: '8px',\r\n      boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',\r\n      overflow: 'hidden',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    option: (base, { isFocused, isSelected }) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      backgroundColor: isSelected ? '#4f46e5' : isFocused ? '#e0e7ff' : '#fff',\r\n      color: isSelected ? '#fff' : '#111827',\r\n      padding: isRTL ? '12px 16px 12px 8px' : '12px 8px 12px 16px',\r\n      cursor: 'pointer',\r\n      fontSize: '14px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      '&:active': {\r\n        backgroundColor: '#4338ca',\r\n      },\r\n    }),\r\n    singleValue: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      fontWeight: 'bold',\r\n      color: '#4f46e5',\r\n      fontSize: '14px',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    placeholder: (base) => ({\r\n      ...base,\r\n      fontFamily: localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      fontSize: '14px',\r\n      color: '#6b7280',\r\n      textAlign: isRTL ? 'right' : 'left',\r\n      direction: isRTL ? 'rtl' : 'ltr',\r\n    }),\r\n    dropdownIndicator: (base) => ({\r\n      ...base,\r\n      fontFamily:localStorage.getItem(\"language\") !== \"en\" &&  \"'CustomFont1', sans-serif\",\r\n      padding: '8px',\r\n    }),\r\n    menuPortal: (base) => ({ ...base, zIndex: 10000 }),\r\n    input: (base) => ({\r\n      ...base,\r\n      fontFamily:localStorage.getItem(\"language\") !== \"en\" && \"'CustomFont1', sans-serif\",\r\n      textAlign: isRTL ? 'right' : 'left',\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`mt-3`} \r\n      style={{ width }}\r\n      dir={isRTL ? 'rtl' : 'ltr'}\r\n    >\r\n      <Select\r\n        classNamePrefix=\"custom-select\"\r\n        value={selectedOption}\r\n        onChange={handleChange}\r\n        options={updatedOptions}\r\n        getOptionLabel={(option) => option.name}\r\n        getOptionValue={(option) => option.id}\r\n        placeholder={formatMessage({ id: 'select.placeholder' }) || (isRTL ? 'انتخاب کنید...' : 'Select...')}\r\n        isClearable={false}\r\n        isSearchable={false}\r\n        isDisabled={isDisabled}\r\n        menuPortalTarget={document.body}\r\n        styles={customStyles}\r\n        components={{\r\n          DropdownIndicator: ({ innerProps }) => (\r\n            <div {...innerProps} className={isRTL ? 'pl-2 text-gray-500' : 'pr-2 text-gray-500'}>\r\n              <ChevronDown size={20} />\r\n            </div>\r\n          ),\r\n          ClearIndicator: null,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nListBox.propTypes = {\r\n  isDisabled: PropTypes.bool,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      name: PropTypes.node.isRequired,\r\n    })\r\n  ),\r\n  selectedOption: PropTypes.object,\r\n  setSelectedOption: PropTypes.func.isRequired,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nListBox.defaultProps = {\r\n  isDisabled: false,\r\n  options: [],\r\n  selectedOption: null,\r\n  width: '100%',\r\n};\r\n\r\nexport default ListBox;"],"names":["Datepicker","_ref","handle_date","settings","default_value","lebal","onKeyDown","selectedDay","setSelectedDay","useState","_jsxs","className","children","_jsx","htmlFor","InputDatePicker","value","onChange","date","handl","year","_a","month","day","inputPlaceholder","locale","colorPrimary","maximumDate","minimumDate","AddPurchase","setsettings","AddItemModal","close","options1","records","setRecords","belance","moneys","setAddBalanceModal","showAlert","useShowAlert","sidebars","useSelector","state","formatMessage","useIntl","moment","selectedOption","setSelectedOption","selectedOption1","setSelectedOption1","EndDate","setEndDate","account","setaccount","ExestQty","setExestQty","update","setupdate","id","selectedOptionAccount","setSelectedOptionAccount","AddItem","setAddItem","stocks_id","qty","weight","dateInsert","Date","toISOString","rate","user_id","localStorage","getItem","purchase_price","description","sell_price","expiry_date","accounts_id","money","stock","name","e_id","shopingcart","setshopingcart","TotalAmount","setTotalAmount","Sumbit","flag","Exesting","position","icon","title","showConfirmButton","timer","selectedOptionmoney","length","arr","forEach","key","push","add","selectedMoney","selectedop","pa","PaidAmount","ta","sd","setSelectedOptionmoney","setPaidAmount","axios","post","Source","getAddress","headers","Authorization","concat","params","CustomerName","DateInsert","then","res","result","data","bill","_settings$","dateObj","formattedDate","getFullYear","String","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes","formattedHours","formattedMinutes","aa","format","imageUrl","company_pic","imageSrc","fileName","split","pop","invoiceHTML","company_name","text","toLowerCase","map","word","charAt","toUpperCase","slice","join","row","index","address","phone","email","printWindow","window","open","document","write","onload","focus","print","alert","generateInvoicePDF","purchase","FormattedMessage","catch","err","handleItem","e","_objectSpread","target","options","setOptions","handleSearch1","async","searchQuery","setSearchQuery","searchQuery1","setSearchQuery1","buttonRef","useRef","handleKeyDown","preventDefault","current","click","useEffect","prevState","setExesting","get","query","do","error","fetchData","Box","dir","sx","width","maxWidth","overflowX","overflowY","height","bgcolor","p","borderRadius","mx","display","justifyContent","alignItems","mt","mb","Typography","variant","align","color","flexGrow","fontSize","IconButton","onClick","ml","X","size","boxShadow","fontWeight","flexDirection","xs","md","gap","flexWrap","FormControlLabel","control","Switch","checked","label","minWidth","component","Combo_stock","setAddAccountModal","customer","type","handleInputChange","newValue","temp_customer","handleSearch","Onsearch","compactMode","Combo_Customer","notCurrency","isEditable","Datepicker_Customer","jalaliDate","now","jalaali","t","isoString","backgroundColor","gutterBottom","Combo_stockps","NumericFormat","onValueChange","values","customInput","TextField","fullWidth","thousandSeparator","allowNegative","decimalScale","InputProps","decimalSeparator","startAdornment","InputAdornment","readOnly","parseInt","multiline","minRows","Button","AddtoTable","purchasePrice","parseFloat","addto","item","prev","startIcon","Plus","textTransform","flex","pr","TableContainer","Paper","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","idx","Deleteshopingcart","filter","pre","Trash2","pl","marginTop","EditPurchase","setmoney","Customer","setCustomer","setOptions1","selectedDay1","setSelectedDay1","dispatch","useDispatch","customers","errorc","statusc","errors","statuss","getSettings","edit","setEdit","accounts","Inserdate","total","bill_id","_method","Bill_id","prevMoney","money_id","primaryTotalAmount","primaryPaidAmount","Accounts_id","prevRecords","record","nextId","Purchase","selecteduser","setSelecteduser","users","statusu","namesearch","setnameSearch","Date_Start","setDate_start","Date_End","setDate_end","StartDate","setStartDate","isDesktop","setIsDesktop","innerWidth","addAccountModal","AddPurchaseModal","setAddPurchaseModal","setstock","setbelance","AddBalanceModal","EditSellModal","setEditSellModal","MoneyEdit","setMoneyEdit","setShopingCart","getcustomer","delete","setting","totalRows","setTotalRows","loading","setLoading","currentPage","setCurrentPage","perPage","setPerPage","addbalance","setaddbalance","setAccounts","page","pageSize","response","search","intl","PDcolumn","selector","sortable","style","Remain","textAlign","border","src","pencil","swalWithBootstrapButtons","Swal","customClass","confirmButton","cancelButton","buttonsStyling","fire","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","isConfirmed","dismiss","cancel","deletePurchase","Trash","columns","useMemo","selectedColumns","d","addcusotmer","setaddcustomer","addbelance","setaddbelance","localization","pagination","rowsPerPage","previous","next","borderTop","ListBox","placeholder","DataTable","progressPending","striped","responsive","highlightOnHover","paginationServer","paginationTotalRows","onChangePage","onChangeRowsPerPage","newPerPage","customStyles","headCells","margin","cells","Add_belance","setAddcustomerModal","Add_customer","bbelance","setbbelance","account_id","type_id","date_created","isdelete","setcustomers","setadd","moneyType","account_name","moneyId","user_name","national_id_picture","profile_picture","national_id_number","whatsup_number","father_name","phone_number","smoney","setsmeony","nmoney","setnmoney","setNationalIdPicture","ProfilePicture","setProfilePicture","class","for","missing_moneys","Select","newId","Math","max","getOptionLabel","option","getOptionValue","isClearable","isSearchable","isDisabled","ref","user","ontransaction","put","isRTL","allUsersOption","updatedOptions","base","fontFamily","zIndex","isFocused","minHeight","padding","direction","menu","overflow","_ref2","isSelected","cursor","singleValue","dropdownIndicator","menuPortal","input","classNamePrefix","menuPortalTarget","body","styles","components","DropdownIndicator","_ref3","innerProps","ChevronDown","ClearIndicator","defaultProps"],"sourceRoot":""}